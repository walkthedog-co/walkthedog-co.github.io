{"version":3,"sources":["webpack:///src/app/pages/dashboard/services/tracking/tracking.component.ts","webpack:///src/app/pages/dashboard/services/tracking/tracking.component.html","webpack:///src/app/navbar/navbar.module.ts","webpack:///src/app/services/walks.service.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/services/races.service.ts","webpack:///src/app/pages/dashboard/pets/dog-profile/dog-profile.component.ts","webpack:///src/app/pages/dashboard/pets/dog-profile/dog-profile.component.html","webpack:///src/app/pages/dashboard/pets/pets.component.ts","webpack:///src/app/pages/dashboard/pets/pets.component.html","webpack:///src/app/pages/dashboard/services/manage-services/in-progress/in-progress.component.ts","webpack:///src/app/pages/dashboard/services/manage-services/in-progress/in-progress.component.html","webpack:///src/app/pages/payment/payment.component.ts","webpack:///src/app/pages/payment/payment.component.html","webpack:///src/app/services/services.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/pages/dashboard/pets/list-pets/list-pets.component.ts","webpack:///src/app/pages/dashboard/pets/list-pets/list-pets.component.html","webpack:///src/app/alerts/alerts.module.ts","webpack:///src/app/pages/dashboard/start/start.component.ts","webpack:///src/app/pages/dashboard/start/start.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/dashboard/services/manage-services/approved/approved.component.ts","webpack:///src/app/pages/dashboard/services/manage-services/approved/approved.component.html","webpack:///src/app/pages/dashboard/walker/manage-walkers/manage-walkers.component.ts","webpack:///src/app/pages/dashboard/walker/manage-walkers/manage-walkers.component.html","webpack:///src/app/pages/dashboard/services/walker/walker-history/walker-history.component.ts","webpack:///src/app/pages/dashboard/services/walker/walker-history/walker-history.component.html","webpack:///src/app/pages/dashboard/services/walker/walker-service/walker-service.component.ts","webpack:///src/app/pages/dashboard/services/walker/walker-service/walker-service.component.html","webpack:///src/app/pages/dashboard/services/manage-services/manage-services.component.ts","webpack:///src/app/pages/dashboard/services/manage-services/manage-services.component.html","webpack:///src/app/pages/auth/login/login.component.ts","webpack:///src/app/pages/auth/login/login.component.html","webpack:///src/app/pages/dashboard/services/service/month-plan-form/month-plan.component.ts","webpack:///src/app/pages/dashboard/services/service/month-plan-form/month-plan.component.html","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/pages/auth/registration/registration.component.ts","webpack:///src/app/pages/auth/registration/registration.component.html","webpack:///src/app/pages/dashboard/services/waited-services/waited-services.component.ts","webpack:///src/app/pages/dashboard/services/waited-services/waited-services.component.html","webpack:///src/app/services/script.service.ts","webpack:///src/app/footer/footer.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/pricing/pricing.component.ts","webpack:///src/app/pages/pricing/pricing.component.html","webpack:///src/app/models/constants.ts","webpack:///src/app/pages/test-api/test-api.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/pages/dashboard/services/service-details/service-details.component.ts","webpack:///src/app/pages/dashboard/services/service-details/service-details.component.html","webpack:///src/app/pages/dashboard/services/service/service.component.ts","webpack:///src/app/pages/dashboard/services/service/service.component.html","webpack:///src/app/pages/dashboard/users/users-list/users-list.component.ts","webpack:///src/app/pages/dashboard/users/users-list/users-list.component.html","webpack:///src/app/services/modal.service.ts","webpack:///src/app/pages/request-walker/request-walker.component.ts","webpack:///src/app/pages/request-walker/request-walker.component.html","webpack:///src/app/services/alerts.service.ts","webpack:///src/app/pages/dashboard/services/client-history/client-history.component.ts","webpack:///src/app/pages/dashboard/services/client-history/client-history.component.html","webpack:///src/app/modal/modal.component.ts","webpack:///src/app/modal/modal.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/services/cities.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/pages/dashboard/pets/add-pet/add-pet.component.ts","webpack:///src/app/pages/dashboard/pets/add-pet/add-pet.component.html","webpack:///src/app/alerts/alerts.component.ts","webpack:///src/app/alerts/alerts.component.html","webpack:///src/app/pages/dashboard/services/service/plan-email-preview/plan-email-preview.component.ts","webpack:///src/app/pages/dashboard/services/service/plan-email-preview/plan-email-preview.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/pages/dashboard/walker/be-walker/be-walker.component.ts","webpack:///src/app/pages/dashboard/walker/be-walker/be-walker.component.html","webpack:///src/app/modal/modal.module.ts","webpack:///src/app/pages/dashboard/services/service-progress/service-progress.component.ts","webpack:///src/app/pages/dashboard/services/service-progress/service-progress.component.html","webpack:///src/app/pages/verify-email/verify-email.component.ts","webpack:///src/app/pages/verify-email/verify-email.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pages/about-us/about-us.component.ts","webpack:///src/app/pages/about-us/about-us.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/pages/dashboard/services/manage-services/finished/finished.component.ts","webpack:///src/app/pages/dashboard/services/manage-services/finished/finished.component.html","webpack:///src/app/models/utilities.ts","webpack:///src/app/services/dogs.service.ts","webpack:///src/app/pages/dashboard/services/service/walk-abstract/walk-abstract.component.ts","webpack:///src/app/pages/dashboard/services/service/walk-abstract/walk-abstract.component.html","webpack:///src/app/pages/dashboard/services/services.component.ts","webpack:///src/app/pages/dashboard/services/services.component.html","webpack:///src/app/pages/dashboard/users/user-details/user-details.component.ts","webpack:///src/app/pages/dashboard/users/user-details/user-details.component.html","webpack:///src/app/pages/dashboard/services/manage-services/paid/payment.component.ts","webpack:///src/app/pages/dashboard/services/manage-services/paid/payment.component.html","webpack:///src/app/pages/dashboard/cities/manage-cities/manage-cities.component.ts","webpack:///src/app/pages/dashboard/cities/manage-cities/manage-cities.component.html","webpack:///src/app/pages/dashboard/services/service/payment-methods/payment-methods.component.ts","webpack:///src/app/pages/dashboard/services/service/payment-methods/payment-methods.component.html","webpack:///src/app/pages/dashboard/services/service/walk-form/walk-form.component.ts","webpack:///src/app/pages/dashboard/services/service/walk-form/walk-form.component.html","webpack:///src/app/pages/dashboard/services/active-services/active-services.component.ts","webpack:///src/app/pages/dashboard/services/active-services/active-services.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TrackingComponent","servicesS","route","location","isReading","view","center","zoom","tileLayer","source","map","layers","target","markerEl","document","getElementById","marker","positioning","element","stopEvent","addOverlay","geolocateBtn","hidden","getCurrentPosition","Number","snapshot","queryParamMap","get","toPromise","then","res","entity","latitude","longitude","showPosition","pos","setCenter","setPosition","render","interval","setInterval","clearInterval","back","goBack","gBtn","sBtn","selector","templateUrl","styleUrls","NavbarModule","declarations","imports","exports","WalksService","http","url","race","post","backendURL","httpOptions","sid","id","providedIn","HomeComponent","as","isLoggedIn","JSON","parse","localStorage","getItem","displayName","RacesService","DogProfileComponent","dogsS","racesS","fb","alert","environment","showedMenu","editBasic","form","group","race_id","gender","size","borndate","description","behaviour","physic_act","list","subscribe","races","getById","dog","patchValue","value","update","ok","showToast","PetsComponent","InProgressServicesComponent","getInProgress","services","servicesFilter","e","s","toUpperCase","filter","u","includes","PaymentComponent","serviceS","urlData","pm","response","data","x_cod_response","getUncompleted","w","status","res2","console","log","method","ServicesService","service","did","dates","date","image","monthPlan","UsersService","user","google_token","ListPetsComponent","getByOwner","dogs","AlertsModule","StartComponent","production","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","frontendURL","VAPIIDPublicKey","imagesURL","headers","ApprovedServicesComponent","usersS","getWalkers","walkers","walkersFilter","getApproved","forEach","walker_id","walker","find","ww","walkId","showAlert","cityId","city_id","btns","getElementsByClassName","slcs","i","length","ManageWalkersComponent","role","router","navigate","users","walkerId","walkerDetailed","innerHTML","setTimeout","WalkerHistoryComponent","getFinishedByWalkerId","sort","a","b","Date","getTime","d","join","WalkerServiceComponent","getInProgressByWalkerId","dd","today","getDate","getMonth","getFullYear","ManageServicesComponent","LoginComponent","usersService","email","compose","required","password","minLength","maxLength","valid","doLogin","setItem","stringify","getByGoogleID","uid","tryLogin","MonthPlanComponent","daysQ","hoursQ","availableDays","selectedDays","select","disabled","isFailed","monthsQ","timesPerWeek","days","dayDivs","slice","dayDiv","item","hourDivs","day","timesPerDay","getElementsByTagName","hours","j","hourDiv","time","push","showEmailPreview","isShowing","NotificationsService","swPush","requestSubscription","serverPublicKey","pushSub","st","sub","ownerId","saveDevice","err","payment","RegistrationComponent","citiesS","cities","names","surname","cpassword","ocupation","phone","address","terms","photo","fileSource","iswalker","tryRegister","getFormValidationError","Object","keys","controls","key","controlErrors","errors","keyErr","event","reader","FileReader","files","file","readAsDataURL","onload","profileURL","result","doRegister","updateUser","fname","res1","sendVerificationMail","insert","resUI","code","validateForm","onSelectProfile","WaitedServicesComponent","getUnapprovedById","myScripts","name","src","where","ScriptService","scripts","script","loaded","promises","loadScript","Promise","all","attrs","resolve","reject","createElement","setAttribute","onerror","error","appendChild","FooterModule","AppComponent","title","PricingComponent","test","DAYS","cloneDays","getDay","TestApiComponent","DashboardComponent","notifcationsS","setShowedMenu","subscribeNotifications","ServiceDetailsComponent","params","ID","updateDate","aux","setHours","setMinutes","setSeconds","setMilliseconds","ServiceComponent","selectedDogs","showInfoFunc","showInfo","bind","showPreviewFunc","showAbstractFunc","prepareAbstract","showPaymentMethodsFunc","showPayments","selectedCity","c","cService","selectedService","type","dogId","indexOf","splice","start_time","datetime","showWalkAbstract","cId","insertDog","client_id","resW","deleteDog","insertDate","hideInfo","showDBErrorAlert","walkAbstractRef","nativeElement","info","hideWalkAbstract","hidePayments","total","city","paymentMethodsRef","emailPreviewDiv","infoDiv","sendMonthPlanEmail","putOnList","sendEmail","editEmailData","monthPlanRef","walkFormRef","UsersListComponent","getPostulatedWalkers","usersFilter","input","req_walker","ModalService","click","tid","ttype","str","setOnType","button","rows","hh","rr","vv","content","innerELement","idC","idR","C","children","R","RequestWalkerComponent","isSending","pattern","availability","curriculum","endsWith","warn","replace","split","doRequestWalker","text","trySend","onSelectCurriculum","AlertsService","container","context","seconds","mixin","position","showConfirmButton","timer","timerProgressBar","toast","fire","icon","createAlert","contains","removeChild","classList","add","strong","span","close","ClientHistoryComponent","getFinishedByClientId","ModalComponent","ProfileComponent","editWalker","basicForm","walkerForm","birthdate","university","toggleBasicEdit","toggleWalkerEdit","CitiesService","prices","AppModule","initializeApp","register","enabled","registrationStrategy","providers","bootstrap","AddPetComponent","raceId","physicActivity","vaccine","parasite","fileSourced","fileSourcev","fileSourcep","dogURL","vaccineURL","parasiteURL","tryInsertDog","onSelectDog","onSelectVaccine","onSelectParasite","AlertsComponent","PlanEmailPreviewComponent","FooterComponent","BeWalkerComponent","university_carnet","carnetURL","pForm","bdate","ModalModule","ServiceProgressComponent","walksS","isTracking","formImage","real_start_time","real_final_time","uploadDateImage","resI","walkURL","dateId","navigator","geolocation","watcher","watchPosition","insertPosition","coords","tstamp","timestamp","clearWatch","service_id","collected","delivered","score","comment","VerifyEmailComponent","NavbarComponent","username","doLogOut","removeItem","AboutUsComponent","AuthService","afAuth","authState","userData","createUserWithEmailAndPassword","signInWithEmailAndPassword","currentUser","sendEmailVerification","updateProfile","signOut","emailVerified","FinishedServicesComponent","getFinished","getFormattedCurrentDate","setDate","toISOString","getFormattedDate","DogsService","message","WalkAbstractComponent","sum","dat","p","showPaymentMethods","ServicesComponent","UserDetailsComponent","TYPE","PaidServicesComponent","getUnapproved","ManageCitiesComponent","modal","formEdit","parentElement","editedCity","cc","wd","setModalElement","repliqueElement","createVerticalTable","updatePrices","closeModal","saveCity","PaymentMethodsComponent","btn","getDescription","queryParams","WalkFormComponent","inputs","row","showAbstract","ActiveServicesComponent","getInProgressByCustomerId","routes","path","component","redirectTo","AppRoutingModule","forRoot","relativeLinkResolution","bootstrapModule","webpackEmptyAsyncContext","req","Error","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OSM } from 'ol/source';\nimport { Tile as TileLayer } from 'ol/layer';\nimport { Overlay, View, Map } from 'ol';\nimport { fromLonLat } from 'ol/proj';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { Location } from '@angular/common';\n\n@Component({\n\tselector: 'app-tracking',\n  \ttemplateUrl: './tracking.component.html',\n  \tstyleUrls: ['./tracking.component.css']\n})\nexport class TrackingComponent implements OnInit, OnDestroy {\n\tisReading:boolean;\n\tmarkerEl;\n\tmap:Map;\n\tview:View;\n\tmarker:Overlay;\n\tgeolocateBtn;\n\ttileLayer:TileLayer;\n\tinterval;\n\n  \tconstructor(\n  \t\tprivate servicesS:ServicesService, \n  \t\tprivate route:ActivatedRoute,\n\t\tprivate location:Location\n  \t) { }\n\n  \tngOnInit(): void {\n  \t\tthis.isReading = false;\n\n  \t\tthis.view = new View({\n\t\t\tcenter: fromLonLat([-73.356609, 5.5446507]),\n\t\t\tzoom: 19,\n\t\t});\n\n\t\tthis.tileLayer = new TileLayer({\n\t\t\tsource: new OSM(),\n\t\t});\n\n\t\tthis.map = new Map({\n\t\t\tlayers: [this.tileLayer],\n\t\t\ttarget: 'map',\n\t\t\tview: this.view,\n\t\t});\n\n\t\tthis.markerEl = document.getElementById('geolocation_marker');\n\n\t\tthis.marker = new Overlay({\n\t\t\tpositioning: 'center-center',\n\t\t\telement: this.markerEl,\n\t\t\tstopEvent: false,\n\t\t});\n\n\t\tthis.map.addOverlay(this.marker);\n\n\t\tthis.geolocateBtn = document.getElementById('geolocate');\n\t\tthis.geolocateBtn.hidden = false;\n\n  \t\tthis.servicesS.getCurrentPosition(Number(this.route.snapshot.queryParamMap.get('id'))).toPromise().then(res=>{\n\t\t\tif(res.entity.latitude && res.entity.longitude){\n\t\t\t\tthis.showPosition(fromLonLat([res.entity.longitude, res.entity.latitude]));\n\t\t\t}\n\t\t});\n  \t}\n\n  \tngOnDestroy():void{\n  \t\tthis.isReading = false;\n  \t}\n\n\tshowPosition(pos) {\n\t\tthis.view.setCenter(pos);\n\t\tthis.marker.setPosition(pos);\n\t\tthis.map.render();\n  \t}\n\n\tgBtn(){\n\t\tthis.isReading = true;\n\t\t\n\t\tthis.interval = setInterval(()=>{\n\t\t\tif(this.isReading){\n\t\t\t\tthis.servicesS.getCurrentPosition(Number(this.route.snapshot.queryParamMap.get('id'))).toPromise().then(res=>{\n\t\t\t\t\tif(res.entity.latitude && res.entity.longitude){\n\t\t\t\t\t\tthis.showPosition(fromLonLat([res.entity.longitude, res.entity.latitude]));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000)\n\t}\n\n\tsBtn(){\n\t\tthis.isReading = false;\n\t\tclearInterval(this.interval);\n\t}\n\n\tgoBack() {\n\t\tthis.location.back()\n\t}\n}\n","<div class=\"row\">\n    <div class=\"col-lg-2\">\n        <button class=\"btn btn-sm btn-primary-wtd\" (click)=\"goBack()\">Regresar</button>\n    </div>\n    <div class=\"col-lg-10\">\n        <h3>Seguimiento</h3>\n    </div>\n</div>\n<div id=\"map\" class=\"map\"></div>\n<img id=\"geolocation_marker\" src=\"https://raw.githubusercontent.com/openlayers/openlayers/main/examples/data/geolocation_marker.png\" />\n<div class=\"btn-group btn-block\">\n    <button class=\"btn btn-primary\" (click)=\"gBtn()\" id=\"geolocate\" hidden>Seguir</button>\n    <button class=\"btn btn-secondary\" (click)=\"sBtn()\" id=\"stop\">Dejar de seguir</button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports:[NavbarComponent]\n})\nexport class NavbarModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { WalkService } from '../models';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class WalksService {\r\n\tprivate url = \"walks\";\r\n\r\n\tconstructor(public http:HttpClient) {}\r\n\r\n    public insert(race:WalkService){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url, race, environment.httpOptions)\r\n\t}\r\n\r\n    public list(sid:number){\r\n        return this.http.get<WalkService[]>(environment.backendURL + this.url + '/byserviceid/' + sid, environment.httpOptions);\r\n    }\r\n\r\n\tpublic get(id:number){\r\n\t\treturn this.http.get<WalkService>(environment.backendURL + this.url + '/' + id, environment.httpOptions);\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  \tconstructor(private as:AuthService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tget isLoggedIn(){\n\t\treturn this.as.isLoggedIn;\n\t}\n\n\tget userName(){\n\t\treturn this.isLoggedIn ? JSON.parse(localStorage.getItem('user')).displayName:null;\n\t}\n}\n","<main class=\"page landing-page\">\n\n    <section class=\"clean-block clean-hero\" style=\"color: #f48706d9;border-color: #f48706d9\">\n        <div class=\"text\">\n            <div *ngIf=\"!isLoggedIn\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <img src=\"assets/img/logo.png\" style=\"width: 227px;\">\n                    <h2>¿Requieres de nuestro servicio?</h2>\n                </div>\n\n                <div class=\"col-md-6\">\n                     <p>¡Registrate ahora mismo!</p>\n                     <a class=\"btn btn-light btn-lg\" routerLink=\"registration\" [queryParams]=\"{u:'u'}\">Registrarme</a>\n                </div>\n\n                <div class=\"col-md-6\">\n                    <p>¿Ya tienes una cuenta?</p>\n                    <a class=\"btn btn-light btn-lg\" routerLink=\"login\">Iniciar sesión</a>\n                </div>\n            </div>\n\n            <div *ngIf=\"isLoggedIn\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <img src=\"assets/img/logo.png\" style=\"width: 227px;\">\n                    <h2>¡Hola de nuevo, {{ userName }}!</h2>\n                </div>\n\n                <div class=\"col-md-12\">\n                     <p>¡Ingresa a tu dashboard!</p>\n                     <a class=\"btn btn-light btn-lg\" routerLink=\"dashboard\">Dashboard</a>\n                </div>\n            </div>\n        </div><\n    </section>\n\n    <section id=\"cobertura\" class=\"clean-block features sect-wtd\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Cobertura</h2>\n                <div class=\"row\">\n                    <iframe src=\"https://www.google.com/maps/d/u/0/embed?mid=137C6PDfb0bnxcC6dVCP7XJ3k3EK5Y9d9\" height=\"480\" frameborder=\"0\" style=\"border:0;\" class=\"col-12\"></iframe>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section id=\"testimonio\" class=\"clean-block features sect-wtd\" hidden>\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Testimonio de nuestros clientes</h2>\n                <div class=\"row\">\n                    <div class=\"col-md-3\"></div>\n                    <div class=\"col-md-6\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc quam urna, dignissim nec auctor in, mattis vitae leo. Esta es una opinion de prueba</p>\n                            </div>\n                            <div class=\"card-footer\">\n                                 <p>\n                                    <span class=\"fa fa-star checked\"></span>\n                                    <span class=\"fa fa-star checked\"></span>\n                                    <span class=\"fa fa-star checked\"></span>\n                                    <span class=\"fa fa-star checked\"></span>\n                                    <span class=\"fa fa-star checked\"></span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n     <section id=\"asistencia\" class=\"clean-block features sect-wtd\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Asistencia</h2>\n                <h3>Recibe asistencia por alguno de los siguientes medios</h3>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-6 col-lg-3 offset-lg-3\">\n                    <div class=\"card\">\n                        <div class=\"card-body text-center\">\n                           <a href=\"https://www.instagram.com/walkthedog.co/?hl=es-la\" target=\"_blank\">\n                                Instagram\n                                <img src=\"assets/img/instagram.jpg\" style=\"width: 100%\">\n                           </a>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 col-lg-3\">\n                    <div class=\"card\">\n                        <div class=\"card-body text-center\">\n                           <a href=\"https://www.facebook.com/walkthedogoficial\" target=\"_blank\">\n                                Facebook\n                                <img src=\"assets/img/facebook.png\" style=\"width: 100%\">\n                           </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>\n\n<a href=\"https://api.whatsapp.com/message/OCGQOHFWNUF3O1\" class=\"float\" target=\"_blank\">\n    <i class=\"fa fa-whatsapp my-float\"></i>\n</a>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { Race } from '../models';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RacesService {\r\n\tprivate url = \"races\";\r\n\r\n\tconstructor(public http:HttpClient) {}\r\n\r\n    public insert(race:Race){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url, race, environment.httpOptions)\r\n\t}\r\n\r\n    public list(){\r\n        return this.http.get<Race[]>(environment.backendURL + this.url);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Dog, Race } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { DogsService } from 'src/app/services/dogs.service';\nimport { RacesService } from 'src/app/services/races.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n\tselector: 'app-dog-profile',\n\ttemplateUrl: './dog-profile.component.html',\n\tstyleUrls: ['./dog-profile.component.css']\n})\nexport class DogProfileComponent implements OnInit {\n\traces:Race[];\n\tshowedMenu:number;\n\tdog:Dog;\n\teditBasic:boolean;\n\tform:FormGroup;\n\tenvironment = environment\n\n\tconstructor(\n\t\tprivate dogsS:DogsService,\n\t\tprivate racesS:RacesService,\n\t\tprivate route:ActivatedRoute,\n\t\tprivate fb:FormBuilder,\n\t\tprivate alert:AlertsService\n\t) {\n\t\tthis.showedMenu = Number(localStorage.getItem(\"showedMenu\"))\n\t\tthis.editBasic = false;\n\t\tthis.form = this.fb.group({\n\t\t\trace_id:[''],\n\t\t\tgender:[''],\n\t\t\tsize:[''],\n\t\t\tborndate:[''],\n\t\t\tdescription:[''],\n\t\t\tbehaviour:[''],\n\t\t\tphysic_act:['']\n\t\t})\n\n\t\tlet id= this.route.snapshot.queryParamMap.get('id');\n\n\t\tif(id){\n\t\t\tthis.racesS.list().subscribe(races => this.races = races)\n\t\t\tthis.dogsS.getById(Number(id)).subscribe(dog => {\n\t\t\t\tthis.dog = dog;\n\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\trace_id: dog.race_id,\n\t\t\t\t\tgender: dog.gender,\n\t\t\t\t\tsize: dog.size,\n\t\t\t\t\tborndate: dog.borndate,\n\t\t\t\t\tdescription: dog.description,\n\t\t\t\t\tbehaviour: dog.behaviour,\n\t\t\t\t\tphysic_act: dog.physic_act\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tsaveDog(){\n\t\tlet dog:Dog = this.form.value\n\t\tdog.id = this.dog.id\n\n\t\tthis.dogsS.update(dog).subscribe(res => {\n\t\t\tif(res.ok){\n\t\t\t\tthis.dog.race_id = dog.race_id\n\t\t\t\tthis.dog.gender = dog.gender,\n\t\t\t\tthis.dog.size = dog.size,\n\t\t\t\tthis.dog.borndate = dog.borndate,\n\t\t\t\tthis.dog.description = dog.description,\n\t\t\t\tthis.dog.behaviour = dog.behaviour,\n\t\t\t\tthis.dog.physic_act = dog.physic_act\n\t\t\t\tthis.editBasic = false\n\t\t\t\tthis.alert.showToast(\"success\", \"Perro\", \"Información actualizada\", 4)\n\t\t\t}\n\t\t})\n\t}\n}\n","<div *ngIf=\"dog\">\n    <div>\n        <h2 class=\"text-primary-wtd\">{{ dog.name }}</h2>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4 col-lg-3\">\n            <div class=\"card clean-card\">\n                <div class=\"card-body info\">\n                    <img src=\"{{ environment.imagesURL + dog.photo }}\" style=\"width: 100%\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-md-8 col-lg-9\" style=\"margin-bottom: 30px;\">\n            <div class=\"card clean-card mb-2\">\n                <div class=\"card-body info\">\n                    <button class=\"btn btn-sm btn-secondary\" (click)=\"editBasic = !editBasic\">Editar información</button>\n                    <hr>\n                    <form [formGroup]=\"form\" (ngSubmit)=\"saveDog()\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-bordered\">\n                                <tr>\n                                    <th>Raza</th>\n                                    <td *ngIf=\"!editBasic\">{{ dog.race.name }}</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <select formControlName=\"race_id\" class=\"form-control\">\n                                            <option *ngFor=\"let race of races\" [value]=\"race.id\">{{ race.name }}</option>\n                                        </select>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <th>Sexo</th>\n                                    <td *ngIf=\"!editBasic\">{{ dog.gender == 'M' ? 'Macho' : 'Hembra' }}</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <select class=\"form-control\" formControlName=\"gender\">\n                                            <option value=\"M\">Macho</option>\n                                            <option value=\"H\">Hembra</option>\n                                        </select>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <th>Tamaño</th>\n                                    <td *ngIf=\"!editBasic && dog.size == 'SM'\">Pequeño</td>\n                                    <td *ngIf=\"!editBasic && dog.size == 'MD'\">Mediano</td>\n                                    <td *ngIf=\"!editBasic && dog.size == 'LG'\">Grande</td>\n                                    <td *ngIf=\"!editBasic && dog.size == 'XL'\">Gigante</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <select class=\"form-control\" formControlName=\"size\">\n                                            <option value=\"SM\">Pequeño</option>\n                                            <option value=\"MD\">Mediano</option>\n                                            <option value=\"LG\">Grande</option>\n                                            <option value=\"XL\">Gigante</option>\n                                        </select>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <th>Fecha de nacimiento</th>\n                                    <td *ngIf=\"!editBasic\">{{ dog.borndate | date: 'dd/MM/yyyy' }}</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <input class=\"form-control\" type=\"date\" formControlName=\"borndate\">\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <th>Descripción</th>\n                                    <td *ngIf=\"!editBasic\">{{ dog.description }}</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <input class=\"form-control\" type=\"text\" formControlName=\"description\">\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <th>Comportamiento</th>\n                                    <td *ngIf=\"!editBasic\">{{ dog.behaviour }}</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <input class=\"form-control\" type=\"text\" formControlName=\"behaviour\">\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <th>Actividad física</th>\n                                    <td *ngIf=\"!editBasic\">{{ dog.physic_act }}</td>\n                                    <td *ngIf=\"editBasic\">\n                                        <input class=\"form-control\" type=\"text\" formControlName=\"physic_act\">\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <button *ngIf=\"editBasic\" class=\"btn btn-sm btn-primary-wtd float-right\">Guardar</button>\n                    </form>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                 <div class=\"col-md-6\" style=\"margin-bottom: 30px;\">\n                    <div class=\"card clean-card\">\n                        <div class=\"card-body info\">\n                            <h3>Vacunas</h3>\n                            <img src=\"{{ environment.imagesURL + dog.vaccine }}\" style=\"width: 100%\">\n                        </div>\n                    </div>\n                 </div>\n\n                 <div class=\"col-md-6\" style=\"margin-bottom: 30px;\">\n                    <div class=\"card clean-card\">\n                        <div class=\"card-body info\">\n                            <h3>Parasitos</h3>\n                            <img src=\"{{ environment.imagesURL + dog.parasite }}\" style=\"width: 100%\">\n                        </div>\n                    </div>\n                 </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pets',\n  templateUrl: './pets.component.html',\n  styleUrls: ['./pets.component.css']\n})\nexport class PetsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { ServicesService } from 'src/app/services/services.service';\n\n@Component({\n  selector: 'app-in-progress',\n  templateUrl: './in-progress.component.html',\n  styleUrls: ['./in-progress.component.css']\n})\nexport class InProgressServicesComponent implements OnInit {\n  services:ServiceRequest[];\n  servicesFilter:ServiceRequest[];\n\n  constructor(private servicesS:ServicesService, private alert:AlertsService) {\n    this.servicesS.getInProgress().subscribe(services => this.services = this.servicesFilter = services)\n  }\n\n  ngOnInit(): void {\n  }\n\n  searchServices(e){\n\t\tlet s = e.target.value.toUpperCase();\n\t\t\n\t\tthis.servicesFilter = this.services.filter(u => (\"WTD\" + u.id).includes(s));\n\t}\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h3>En marcha</h3>\n        <input *ngIf=\"services && services.length > 0\" type=\"text\" placeholder=\"Buscar...\" class=\"form-control\" (keyup)=\"searchServices($event)\" >\n    </div>\n    <div *ngIf=\"servicesFilter && servicesFilter.length > 0\" class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Código</th>\n                        <th>Estado</th>\n                        <th>Detalles</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor=\"let service of servicesFilter\">\n                        <td>WTD{{ service.id }}</td>\n                        <td *ngIf=\"service.status == 'inpg'\">Iniciado</td>\n                        <td *ngIf=\"service.status == 'fnsh'\">Finalizado</td>\n                        <td><a [routerLink]=\"['../../details/', service.id]\" class=\"btn btn-primary-wtd btn-sm\">Detalles</a></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div *ngIf=\"!servicesFilter || servicesFilter.length == 0\" class=\"card-body\">\n        No hay servicios en marcha\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServicesService } from 'src/app/services/services.service';\n\ninterface Res{\n  ok?:boolean,\n  response?\n}\n@Component({\n\tselector: 'app-payment',\n\ttemplateUrl: './payment.component.html',\n\tstyleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\turlData:string = \"https://secure.epayco.co/validation/v1/reference/\";\n\tresponse;\n\tmethod;\n\tconstructor(\n\t\tprivate serviceS:ServicesService, \n\t\tprivate route:ActivatedRoute\n\t) {}\n\n\tngOnInit(): void {\n\t\tlet pm = this.route.snapshot.queryParamMap.get('pm');\n\t\t\n\t\tif(this.route.snapshot.queryParamMap.get('ref_payco'))\n\t\t\tthis.serviceS.http.get(this.urlData + this.route.snapshot.queryParamMap.get('ref_payco')).subscribe(res=>{\n\t\t\t\tthis.response = res;\n\t\t\t\t\n\t\t\t\tif(this.response.data.x_cod_response){\n\t\t\t\t\tthis.serviceS.getUncompleted(Number(localStorage.getItem('id'))).subscribe(res=>{\n\t\t\t\t        let w = res;\n\t\t\t\t        w.status = \"paid\";\n\t\t\t\t        this.serviceS.update(w).subscribe(res2=>{\n\t\t\t\t        \tconsole.log(res2);\n\t\t\t\t        });\n\t\t\t\t    })\n\t\t\t\t}\n\t\t\t})\n\t\telse if(pm){\n\t\t\tthis.serviceS.getUncompleted(Number(localStorage.getItem('id'))).subscribe(res=>{\n\t\t        let w = res;\n\n\t\t        if(w){\n\t\t        \tw.status = \"paid\";\n\t\t        \t\n\t\t\t        this.serviceS.update(w).subscribe(res2=>{\n\t\t\t        \tconsole.log(res2.ok);\n\t\t\t        \tthis.method = pm == 'davi' ? \"DaviPlata\" : pm == 'nequi' ? \"Nequi\" : null;\n\t\t\t        });\n\t\t        }\n\t\t    })\n\t\t}\n\t}\n}\n","<p>payment works!</p>\n<main class=\"page landing-page\">\n    <section class=\"clean-block clean-hero\" style=\"color: #f48706d9;border-color: #f48706d9; align-items: initial;\" >\n        <div class=\"container\" style=\"margin-top: 100px; margin-bottom: 25px; z-index: 2\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card\" *ngIf=\"response\">\n                     \t<div *ngIf=\"response.data.x_cod_response == 1\" class=\"row\" style=\"margin-top:20px\">\n                     \t\t<div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-8\">\n\t                            <h4 style=\"text-align:left\"> Respuesta de la Transacción </h4>\n\t                            <hr>\n\t                        </div>\n\n\t                        <div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-2\"></div>\n\n\t                        <div class=\"col-lg-8\">\n\t                            <div class=\"table-responsive\">\n\t                                <table class=\"table table-bordered\">\n\t                                    <tbody>\n\t                                        <tr>\n\t                                            <td>Referencia</td>\n\t                                            <td>{{ response.data.x_id_invoice }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Fecha</td>\n\t                                            <td>{{ response.data.x_transaction_date }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Respuesta</td>\n\t                                            <td>{{ response.data.x_response }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Motivo</td>\n\t                                            <td>{{ response.data.x_response_reason_text }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Banco</td>\n\t                                            <td>{{ response.data.x_bank_name }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Recibo</td>\n\t                                            <td>{{ response.data.x_transaction_id }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Total</td>\n\t                                            <td>{{ response.data.x_amount + ' ' + response.data.x_currency_code }}</td>\n\t                                        </tr>\n\t                                    </tbody>\n\t                                </table>\n\t                            </div>\n\t                        </div>\n\t                    </div>\n\n\t                    <div *ngIf=\"response.data.x_cod_response == 2\" class=\"row\" style=\"margin-top:20px\">\n                     \t\t<div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-8\">\n\t                            <h4 style=\"text-align:left\"> Respuesta de la Transacción </h4>\n\t                            <hr>\n\t                        </div>\n\n\t                        <div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-2\"></div>\n\n\t                        <div class=\"col-lg-8\" *ngIf=\"response\">\n\t                            <div class=\"table-responsive\">\n\t                                <table class=\"table table-bordered\">\n\t                                    <tbody>\n\t                                        <tr>\n\t                                            <td>Referencia</td>\n\t                                            <td>{{ response.data.x_id_invoice }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Fecha</td>\n\t                                            <td>{{ response.data.x_transaction_date }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Respuesta</td>\n\t                                            <td>{{ response.data.x_response }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Motivo</td>\n\t                                            <td>{{ response.data.x_response_reason_text }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Banco</td>\n\t                                            <td>{{ response.data.x_bank_name }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Recibo</td>\n\t                                            <td>{{ response.data.x_transaction_id }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Total</td>\n\t                                            <td>{{ response.data.x_amount + ' ' + response.data.x_currency_code }}</td>\n\t                                        </tr>\n\t                                    </tbody>\n\t                                </table>\n\t                            </div>\n\t                        </div>\n\t                    </div>\n\n\t                    <div *ngIf=\"response.data.x_cod_response == 3\" class=\"row\" style=\"margin-top:20px\">\n                     \t\t<div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-8\">\n\t                            <h4 style=\"text-align:left\"> Respuesta de la Transacción </h4>\n\t                            <hr>\n\t                        </div>\n\n\t                        <div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-2\"></div>\n\n\t                        <div class=\"col-lg-8\" *ngIf=\"response\">\n\t                            <div class=\"table-responsive\">\n\t                                <table class=\"table table-bordered\">\n\t                                    <tbody>\n\t                                        <tr>\n\t                                            <td>Referencia</td>\n\t                                            <td>{{ response.data.x_id_invoice }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Fecha</td>\n\t                                            <td>{{ response.data.x_transaction_date }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Respuesta</td>\n\t                                            <td>{{ response.data.x_response }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Motivo</td>\n\t                                            <td>{{ response.data.x_response_reason_text }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Banco</td>\n\t                                            <td>{{ response.data.x_bank_name }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Recibo</td>\n\t                                            <td>{{ response.data.x_transaction_id }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Total</td>\n\t                                            <td>{{ response.data.x_amount + ' ' + response.data.x_currency_code }}</td>\n\t                                        </tr>\n\t                                    </tbody>\n\t                                </table>\n\t                            </div>\n\t                        </div>\n\t                    </div>\n\n\t                    <div *ngIf=\"response.data.x_cod_response == 4\" class=\"row\" style=\"margin-top:20px\">\n                     \t\t<div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-8\">\n\t                            <h4 style=\"text-align:left\"> Respuesta de la Transacción </h4>\n\t                            <hr>\n\t                        </div>\n\n\t                        <div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-2\"></div>\n\n\t                        <div class=\"col-lg-8\" *ngIf=\"response\">\n\t                            <div class=\"table-responsive\">\n\t                                <table class=\"table table-bordered\">\n\t                                    <tbody>\n\t                                        <tr>\n\t                                            <td>Referencia</td>\n\t                                            <td>{{ response.data.x_id_invoice }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Fecha</td>\n\t                                            <td>{{ response.data.x_transaction_date }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Respuesta</td>\n\t                                            <td>{{ response.data.x_response }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td>Motivo</td>\n\t                                            <td>{{ response.data.x_response_reason_text }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Banco</td>\n\t                                            <td>{{ response.data.x_bank_name }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Recibo</td>\n\t                                            <td>{{ response.data.x_transaction_id }}</td>\n\t                                        </tr>\n\t                                        <tr>\n\t                                            <td class=\"bold\">Total</td>\n\t                                            <td>{{ response.data.x_amount + ' ' + response.data.x_currency_code }}</td>\n\t                                        </tr>\n\t                                    </tbody>\n\t                                </table>\n\t                            </div>\n\t                        </div>\n\t                    </div>\n                    </div>\n\n                    <div class=\"card\" *ngIf=\"method\">\n                     \t<div class=\"row\" style=\"margin-top:20px\">\n                     \t\t<div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-8\">\n\t                            <h4> Respuesta de la Transacción </h4>\n\t                            <hr>\n\t                        </div>\n\n\t                        <div class=\"col-lg-2\"></div>\n\t                        <div class=\"col-lg-2\"></div>\n\n\t                        <div class=\"col-lg-8\">\n\t                            <div class=\"card-body\">\n\t                            \tHas hecho un pago por medio de {{ method }}, por favor, espera unos momentos para que tu transacción sea aprobada.\n\t                            </div>\n\t                        </div>\n\t                    </div>\n                    </div>\n                    <hr>\n                    <div class=\"card\">\n                    \t<div class=\"card-body\">\n                    \t\t<a class=\"btn btn-primary-wtd\" routerLink=\"/dashboard\">Dashboard</a>\n                    \t</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { ServiceRequest, WalkDate, WalkService } from '../models';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ServicesService {\r\n\tprivate url = \"services\";\r\n\r\n\tconstructor(public http:HttpClient) {}\r\n\r\n    public insert(service:ServiceRequest){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url, service, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic update(service:ServiceRequest){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/update', service, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic get(id:number){\r\n\t\treturn this.http.get<ServiceRequest>(environment.backendURL + this.url + '/' + id)\r\n\t}\r\n\r\n\tpublic getWalk(id:number){\r\n\t\treturn this.http.get<WalkService>(environment.backendURL + this.url + '/walks/' + id)\r\n\t}\r\n\r\n\tpublic getUncompleted(id:number){\r\n\t\treturn this.http.get<ServiceRequest>(environment.backendURL + this.url + '/uncompleted/' + id)\r\n\t}\r\n\r\n\tpublic getApprovedById(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/approved/' + id)\r\n\t}\r\n\r\n\tpublic getApproved(){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/approved')\r\n\t}\r\n\r\n\tpublic getUnapprovedById(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/unapproved/' + id)\r\n\t}\r\n\r\n\tpublic getUnapproved(){\r\n\t\treturn this.http.get<ServiceRequest[]>(environment.backendURL + this.url + '/unapproved')\r\n\t}\r\n\r\n\tpublic getInProgress() {\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/inprogress')\r\n\t}\r\n\r\n\tpublic getInProgressByWalkerId(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/inprogress/bywalkerid/' + id)\r\n\t}\r\n\r\n\tpublic getInProgressByCustomerId(id:number){\r\n\t\treturn this.http.get<ServiceRequest[]>(environment.backendURL + this.url + '/inprogress/bycustomerid/' + id)\r\n\t}\r\n\r\n\tpublic getFinished(){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/finished')\r\n\t}\r\n\r\n\tpublic getFinishedByClientId(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/finished/byclientid/' + id)\r\n\t}\r\n\r\n\tpublic getFinishedByWalkerId(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/finished/bywalkerid/' + id)\r\n\t}\r\n\r\n\tpublic insertDog(sid, did){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/' + sid + '/dogs', { id:did }, environment.httpOptions);\r\n\t}\r\n\r\n\tpublic insertDate(id:number, dates:any[]){\r\n\t\treturn this.http.post(environment.backendURL + this.url + '/' + id + '/dates', dates, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic insertPosition(pos:any){\r\n\t\treturn this.http.post(environment.backendURL + this.url + '/position', pos, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic getCurrentPosition(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/position/' + id)\r\n\t}\r\n\r\n\tpublic deleteDog(sid, did){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/' + sid + '/dogs/' + did + '/delete');\r\n\t}\r\n\r\n\tpublic getDogs(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/' + id + '/dogs');\r\n\t}\r\n\r\n\tpublic getDates(id:number){\r\n\t\treturn this.http.get<any>(environment.backendURL + this.url + '/' + id + '/dates');\r\n\t}\r\n\r\n\tpublic updateDate(date:any){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/dates/update', date, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic uploadDateImage(image){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/image', image, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic sendMonthPlanEmail(monthPlan) {\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/monthplan', monthPlan, environment.httpOptions)\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\tprivate url = \"users\";\r\n\r\n\tconstructor(public http:HttpClient) {}\r\n\r\n    public insert(user:User){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url, user, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic update(user:User){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url+'/update', user, environment.httpOptions)\r\n\t}\r\n\r\n    public getById(id:number){\r\n\t\treturn this.http.get<User>(environment.backendURL + this.url + '/' + id);\r\n\t}\r\n\r\n    public getByGoogleID(google_token:string){\r\n\t\treturn this.http.get<User>(environment.backendURL + this.url + '/bygoogleid/' + google_token);\r\n\t}\r\n\r\n\tpublic getWalkers(){\r\n\t\treturn this.http.get<User[]>(environment.backendURL + this.url + '/walkers');\r\n\t}\r\n\t\r\n\tpublic getPostulatedWalkers(){\r\n\t\treturn this.http.get<User[]>(environment.backendURL + this.url + '/walkers/postulated');\r\n\t}\r\n\r\n\tpublic doRequestWalker(data){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/walkers', data, environment.httpOptions)\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Dog } from 'src/app/models';\nimport { DogsService } from 'src/app/services/dogs.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-list-pets',\n  templateUrl: './list-pets.component.html',\n  styleUrls: ['./list-pets.component.css']\n})\nexport class ListPetsComponent implements OnInit {\n\tdogs:Dog[];\n\tenvironment = environment\n\n  \tconstructor(private dogsS:DogsService) { }\n\n  \tngOnInit(): void {\n  \t\tthis.dogsS.getByOwner(Number(localStorage.getItem('id'))).subscribe(dogs => this.dogs = dogs);\n  \t}\n\n}\n","\n\n<div class=\"row\">\n\t<div class=\"col-lg-8\">\n\t\t<h1>Mis mascotas</h1>\n\t</div>\n\t<div class=\"col-lg-4\">\n\t\t<a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"add\">Agregar mascota</a>\n\t</div>\n</div>\n\n<h3 *ngIf=\"!dogs || dogs.length == 0\">Aún no tienes registradas mascotas, ¡agrega una para solicitar un servicio!</h3>\n\n<div class=\"row\">\n\t<div class=\"col-sm-4\" *ngFor=\"let dog of dogs\">\n\t\t<div class=\"card\" >\n    \t\t<div class=\"card-header\">\n    \t\t\t{{ dog.name }}\n    \t\t</div>\n\n    \t\t<div class=\"card-body\">\n    \t\t\t<img src=\"{{ environment.imagesURL + dog.photo }}\" style=\"width: 100%;\">\n                <a routerLink=\"details\" [queryParams]=\"{id: dog.id}\" class=\"btn btn-primary-wtd\">Ver</a>\n    \t\t</div>\n    \t</div>\n\t</div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertsComponent } from './alerts.component';\n\n@NgModule({\n\tdeclarations: [AlertsComponent],\n\timports: [\n\t\tCommonModule\n\t],\n\texports:[AlertsComponent]\n})\nexport class AlertsModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card-body\">\n\t<h1>\n\t\t¡Bienvenido a WalkTheDog!\n\t</h1>\n\t<h3>Selecciona una opción del menú.</h3>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { HttpHeaders } from \"@angular/common/http\";\n\nexport const environment = {\n\tproduction: false,\n\tfirebase: {\n\t\tapiKey: \"AIzaSyDfYrBAIFW3Scg_ST-6lgphBXqijGWaeYA\",\n\t\tauthDomain: \"walkthedog-d088d.firebaseapp.com\",\n\t\tprojectId: \"walkthedog-d088d\",\n\t\tstorageBucket: \"walkthedog-d088d.appspot.com\",\n\t\tmessagingSenderId: \"923433142057\",\n\t\tappId: \"1:923433142057:web:6c785c1a512dead1765938\"\n\t},\n\t//backendURL:'http://localhost:3010/api/v1/',\n\tfrontendURL:'http://localhost:4200/',\n\tbackendURL: 'https://walkthedogco.herokuapp.com/api/v1/',\n\tVAPIIDPublicKey:'BLgQjxXKSr0dD7DYWP91m5iJVYvxofOSKAHenEqbLHlkeVeuz7bxbUVLAZAT1PVVj1nSIPpKS4yzIHwm6XskMEI',\n\n\t//imagesURL: 'http://localhost:3010/images/'\n\timagesURL: 'https://walkthedog.000webhostapp.com/images/',\n\thttpOptions: {\n\t\theaders: new HttpHeaders({\n\t\t\t\"Content-Type\": \"text/plain\"\n\t\t})\n\t}\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-approved',\n  templateUrl: './approved.component.html',\n  styleUrls: ['./approved.component.css']\n})\nexport class ApprovedServicesComponent implements OnInit {\n  services: ServiceRequest[];\n  servicesFilter: ServiceRequest[];\n  walkers:any[];\n  walkersFilter:any[];\n\n\n  constructor(\n    private servicesS: ServicesService,\n    private usersS:UsersService,\n    private alert:AlertsService\n  ) {\n    this.usersS.getWalkers().subscribe(walkers => {\n      this.walkers = this.walkersFilter = walkers\n      this.servicesS.getApproved().subscribe(services => {\n        this.services = this.servicesFilter = services;\n  \n        this.services.forEach(w => {\n          if (w.walker_id)\n            w.walker = this.walkers.find(ww => ww.id == w.walker_id);\n        });\n      });\n    })\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  searchServices(e) {\n    let s = e.target.value.toUpperCase();\n\n    this.servicesFilter = this.services.filter(u => (\"WTD\" + u.id).includes(s));\n  }\n\n  setWalker(walkId) {\n    let w = this.services.find(ww => ww.id == walkId);\n    w.walker_id = Number((document.getElementById(\"SLC\" + walkId) as HTMLInputElement).value);\n    w.status = \"apwk\"\n\n    this.servicesS.update(w).subscribe(res => {\n\n      if (res.ok) {\n        this.services.find(ww => ww.id == walkId).walker = this.walkers.find(ww => ww.id == w.walker_id);\n        this.alert.showAlert(\"success\", \"Paseador asignado! \", \"Este servicio puede ponserse en marcha ahora.\", 4);\n      }\n\n      document.getElementById(\"SL\" + walkId).hidden = true;\n      document.getElementById(\"BT\" + walkId).hidden = false;\n    });\n  }\n\n  setInProgress(walkId) {\n    let w = this.services.find(ww => ww.id == walkId);\n    w.status = 'inpg';\n\n    this.servicesS.update(w).subscribe(res => {\n      if (res.ok)\n        this.alert.showAlert(\"success\", \"El servicio fue puesto en marcha \", \"el paseador y el cliente fueron notificados por correo\", 4);\n    });\n  }\n\n  showSelector(walkId) {\n    let cityId = this.services.find(w => w.id == walkId).city_id;\n    let btns = document.getElementsByClassName(\"BTWK\") as HTMLCollectionOf<HTMLButtonElement>;\n    let slcs = document.getElementsByClassName(\"SLWK\") as HTMLCollectionOf<HTMLSelectElement>;;\n\n    for (var i = 0; i < btns.length; ++i) {\n      btns[i].hidden = false;\n      slcs[i].hidden = true;\n    }\n\n    this.walkersFilter = this.walkers.filter(w => w.city_id == cityId);\n\n    document.getElementById(\"SL\" + walkId).hidden = false;\n    document.getElementById(\"BT\" + walkId).hidden = true;\n  }\n\n  hideSelector(walkId){\n\t\tthis.walkersFilter = [];\n\t\t\n\t\tdocument.getElementById(\"SL\" + walkId).hidden =  true;\n\t\tdocument.getElementById(\"BT\" + walkId).hidden = false;\n\t}\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h3>Aprobados</h3>\n        <input *ngIf=\"services && services.length > 0\" type=\"text\" placeholder=\"Buscar...\" class=\"form-control\" (keyup)=\"searchServices($event)\" >\n    </div>\n    <div *ngIf=\"servicesFilter && servicesFilter.length > 0\" class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Código</th>\n                        <th>Cliente</th>\n                        <th>Paseador</th>\n                        <th>Ciudad</th>\n                        <th>Estado</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor=\"let walk of servicesFilter\">\n                        <td>WTD{{ walk.id }} {{ walk.type == 'WK' ? 'Paseo' : 'Cuidado'}}</td>\n                        <td>{{walk.names + ' ' + walk.surname }}</td>\n                        <td>\n                            <button *ngIf=\"!walk.walker\" [id]=\"'BT' + walk.id\" class=\"btn btn-secondary btn-sm BTWK\" (click)=\"showSelector(walk.id)\">Asignar {{ walk.type == 'WK' ? 'paseador' : 'cuidador'}}</button>\n                            <div [id]=\"'SL' + walk.id\" class=\"SLWK\" hidden>\n                                <select [id]=\"'SLC' + walk.id\" class=\"form-control\">\n                                    <option *ngFor=\"let walker of walkersFilter\" [value]=\"walker.id\">\n                                        {{ walker.names + ' ' + walker.surname }}\n                                    </option>\n                                </select>\n                                \n                                <div class=\"btn-group btn-block\" role=\"group\" style=\"margin-top: 5px;\">\n                                    <button class=\"btn btn-success btn-sm\" (click)=\"setWalker(walk.id)\" >Asignar</button>\n                                    <button (click)=\"detailsWalker(walk.id)\" class=\"btn btn-info btn-sm\" type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#modal\">Detalles</button>\n                                    <button class=\"btn btn-danger btn-sm\" (click)=\"hideSelector(walk.id)\" >X</button>\n                                </div>\n                            </div>\n                            <div *ngIf=\"walk.walker\" [id]=\"'BT' + walk.id\" class=\"SWWK\" (click)=\"showSelector(walk.id)\">\n                                <label>\n                                    {{ walk.walker.names + ' ' + walk.walker.surname }}\n                                </label>\n                                <button class=\"btn btn-sm btn-secondary\">Cambiar</button>\n                            </div>\n                        </td>\n                        <td>{{ walk.city_name }}</td>\n                        <td *ngIf=\"walk.status == 'apvd'\">Sin {{ walk.type == 'WK' ? 'paseador' : 'cuidador'}}</td>\n                        <td *ngIf=\"walk.status == 'apwk'\"><button class=\"btn btn-success\" (click)=\"setInProgress(walk.id)\">Poner en marcha</button></td>\n                        <td *ngIf=\"walk.status == 'inpg'\"><a class=\"btn btn-success\" routerLink=\"in-progress\">En progreso</a></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n    <div *ngIf=\"!servicesFilter || servicesFilter.length == 0\" class=\"card-body\">\n        No hay servicios aprobados\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service';\nimport { AlertsService } from '../../../../services/alerts.service';\nimport { UsersService } from '../../../../services/users.service';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-manage-walkers',\n  templateUrl: './manage-walkers.component.html',\n  styleUrls: ['./manage-walkers.component.css']\n})\nexport class ManageWalkersComponent implements OnInit {\n  walkers: User[];\n  walkerDetailed;\n\n  constructor(\n    private usersS: UsersService,\n    private as: AuthService\n  ) {\n    this.usersS.getById(Number(localStorage.getItem('id'))).subscribe(user => {\n      if (user.role != 'AD')\n        this.as.router.navigate(['/dashboard']);\n    })\n\n\n    this.usersS.getWalkers().subscribe(users => this.walkers = users)\n  }\n\n  ngOnInit(): void {\n  }\n\n  walkerDetails(walkerId){\n    this.walkerDetailed = this.walkers.find(w => w.id == walkerId)\n    document.getElementById('modalTitle').innerHTML = \"Detalles del paseador\"\n    setTimeout(() => {\n      document.getElementById('modalContent').innerHTML = document.getElementById('walkerDetailed').innerHTML\n    }, 30);\n    \n  }\n}\n","<h3>Paseadores</h3>\n\n<div  *ngIf=\"walkers\" class=\"row\">\n\t<div class=\"form-group col-lg-10\">\n\t\t<label>Busca un paseador</label>\n\t\t<input placeholder=\"Correo del usuario\" type=\"text\" class=\"form-control\">\n\t</div>\n\n\t<div class=\"form-group col-lg-2\">\n\t\t<label>-</label>\n\t\t<button class=\"btn btn-dark btn-block\">Buscar</button>\n\t</div>\n</div>\n\n<div  *ngIf=\"walkers\" class=\"table-responsive\">\n\t<table *ngIf=\"walkers && walkers.length > 0\" class=\"table table-bordered\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Nombre</th>\n\t\t\t\t<th>Detalles</th>\n\t\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n\t\t\t<tr *ngFor=\"let walker of walkers\">\n\t\t\t\t<td>{{ walker.names + ' ' + walker.surname }}</td>\n\t\t\t\t<td><button class=\"btn btn-sm btn-secondary\" (click)=\"walkerDetails(walker.id)\" type=\"button\" data-toggle=\"modal\" data-target=\"#modal\">Detalles</button></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n<div *ngIf=\"walkers && walkers.length == 0\"></div>\n\n<div hidden>\n\t<div id=\"walkerDetailed\">\n\t\t<div *ngIf=\"walkerDetailed\">\n\t\t\t<table class=\"table table-bordered\">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Nombre</th>\n\t\t\t\t\t<td>{{ walkerDetailed.names + ' ' + walkerDetailed.surname }}</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Disponibilidad</th>\n\t\t\t\t\t<td>{{ walkerDetailed.availability }}</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Telefono</th>\n\t\t\t\t\t<td>{{ walkerDetailed.phone }}</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Descripción</th>\n\t\t\t\t\t<td>{{ walkerDetailed.description }}</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Ocupación</th>\n\t\t\t\t\t<td>{{ walkerDetailed.ocupation }}</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t<img src=\"/api-wtd/images/upload/{{ walkerDetailed.photo }}.png\" style=\"width: 100%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t\t\t{{ walkerDetailed.university }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t<img src=\"/api-wtd/images/upload/{{ walkerDetailed.university_carnet }}.png\" style=\"width: 100%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { getFormattedDate } from 'src/app/models/utilities';\nimport { ServicesService } from 'src/app/services/services.service';\n\n@Component({\n\tselector: 'app-walker-history',\n\ttemplateUrl: './walker-history.component.html',\n\tstyleUrls: ['./walker-history.component.css']\n})\nexport class WalkerHistoryComponent implements OnInit {\n\tservices:ServiceRequest[]\n\tconstructor(private servicesS:ServicesService) {\n\t\tlet id = Number(localStorage.getItem('id'));\n\n\t\tthis.servicesS.getFinishedByWalkerId(id).subscribe(services => this.services = services);\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tlistDates(s:ServiceRequest){\n\t\treturn s.dates\n\t\t.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime() )\n\t\t.map(d => getFormattedDate(new Date(d.date + 'T05:00:00')))\n\t\t.join(\", \")\n\t}\n\n}\n","<div *ngIf=\"services && services.length > 0\">\n\t<h3>Servicios terminados</h3>\n\t<div class=\"table-responsive\">\n\t\t<table class=\"table table-bordered\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Código</th>\n\t\t\t\t\t<th>Paseos</th>\n\t\t\t\t\t<th>Fechas</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t<tr *ngFor=\"let service of services\">\n\t\t\t\t\t<td>WTD{{ service.id }}</td>\n\t\t\t\t\t<td>{{ service.dates.length }}</td>\n\t\t\t\t\t<td>{{ listDates(service) }}</td>\n\t\t\t\t\t<td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../../details/', service.id]\">Detalles</a></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n<div *ngIf=\"services && services.length == 0\">\n\t<h3>No tienes servicios terminados</h3>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { ServiceRequest } from 'src/app/models';\nimport { getFormattedDate } from 'src/app/models/utilities';\n\n@Component({\n\tselector: 'app-walker-service',\n\ttemplateUrl: './walker-service.component.html',\n\tstyleUrls: ['./walker-service.component.css']\n})\nexport class WalkerServiceComponent implements OnInit {\n\tservices:ServiceRequest[];\n\n\tconstructor(private servicesS:ServicesService) {\n\t\tthis.servicesS.getInProgressByWalkerId(Number(localStorage.getItem('id')))\n\t\t.subscribe(services => this.services = services);\n\t}\n\t\n\tngOnInit(): void {\t\n\t}\n\n\tisToday(dd){\n\t\tconst today = new Date()\n\t\treturn dd.getDate() == today.getDate() \n\t\t\t&& dd.getMonth() == today.getMonth() \n\t\t\t&& dd.getFullYear() == today.getFullYear()\n\t}\n\n\tlistDates(s:ServiceRequest){\n\t\treturn s.dates\n\t\t.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime() )\n\t\t.map(d => getFormattedDate(new Date(d.date + 'T05:00:00')))\n\t\t.join(\", \")\n\t}\n}\n","<div *ngIf=\"services && services.length > 0\">\n\t<h3>Servicios programados</h3>\n\t<div class=\"table-responsive\">\n\t\t<table class=\"table table-bordered\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Código</th>\n\t\t\t\t\t<th>Paseos</th>\n\t\t\t\t\t<th>Fechas</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t<tr *ngFor=\"let service of services\">\n\t\t\t\t\t<td>WTD{{ service.id }}</td>\n\t\t\t\t\t<td>{{ service.dates.length }}</td>\n\t\t\t\t\t<td>{{ listDates(service) }}</td>\n\t\t\t\t\t<td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../details/', service.id]\">Detalles</a></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n<div *ngIf=\"services && services.length == 0\">\n\t<h3>No tienes servicios activos</h3>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service';\nimport { ModalService } from '../../../../services/modal.service';\nimport { AlertsService } from '../../../../services/alerts.service';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { UsersService } from 'src/app/services/users.service';\n\ninterface el extends HTMLElement{\n\tvalue?:boolean;\n}\n\ninterface Res {\n\tok:boolean\n}\n\n@Component({\n\t selector: 'app-manage-services',\n\t templateUrl: './manage-services.component.html',\n\t styleUrls: ['./manage-services.component.css']\n})\nexport class ManageServicesComponent implements OnInit {\n\tconstructor(private as:AuthService, private usersS:UsersService) {\n\t\tthis.usersS.getById(Number(localStorage.getItem('id'))).subscribe(res=>{\n\t\t\tif(res.role != 'AD')\n\t\t\t\tthis.as.router.navigate(['/dashboard']);\n\t\t})\n\t}\n\n\tngOnInit(): void {\n\t}\n}\n","<div class=\"btn-group btn-group-sm\" role=\"group\">\n    <a class=\"btn btn-primary-wtd\" routerLink=\"paid\">En pago</a>\n    <a class=\"btn btn-primary-wtd\" routerLink=\"approved\">Aprobados</a>\n    <a class=\"btn btn-primary-wtd\" routerLink=\"in-progress\">En marcha</a>\n    <a class=\"btn btn-primary-wtd\" routerLink=\"finished\">Finalizados</a>\n</div>\n<hr>\n\n<div class=\"row\">\n\t<div class=\"col-md-12\">\n\t\t<router-outlet></router-outlet>\t\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from \"@angular/forms\";\nimport { AuthService } from '../../../services/auth.service';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\tform:FormGroup;\n\n\tconstructor(\n\t\tprivate as:AuthService, \n\t\tpublic fb: FormBuilder, \n\t\tprivate usersService:UsersService,\n\t\tprivate alert:AlertsService\n  \t) { }\n\n\tngOnInit(): void {\n\t\tif(this.as.isLoggedIn)\n\t\t\tthis.as.router.navigate(['dashboard']);\n\t\t\n\t\tthis.form = this.fb.group({\n\t\t\temail:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.email\n\t\t\t])],\n\t\t\tpassword:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(8),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])]\n\t\t});\n\t}\n\n\ttryLogin(){\n\t\tif(this.form.valid){\n\t\t\tthis.as.doLogin(this.form.value.email, this.form.value.password).then(res=>{\n\t\t\t\tconsole.log(res)\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(res.user));\n\t\t\t\t\n\t\t\t\tthis.usersService.getByGoogleID(res.user.uid).subscribe(user => {\n\t\t\t\t\tlocalStorage.setItem('id', user.id + \"\");\n\t\t\t\t\tlocalStorage.setItem('userDB', JSON.stringify(user));\n\t\t\t\t\tthis.as.router.navigate(['dashboard']);\n\t\t\t\t\tthis.alert.showAlert(\"success\", \"Bienvenido\", \"\", 2)\n\t\t\t\t})\n  \t\t\t}).catch(e=>{\n  \t\t\t\tconsole.log(e);\n  \t\t\t});\n\t\t}\n\t}\n}\n","<main class=\"page login-page\">\n    <section class=\"clean-block clean-form dark\" style=\"padding-top: 50px;\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Iniciar sesión</h2>\n            </div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"tryLogin()\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input class=\"form-control item\" type=\"email\" formControlName=\"email\" placeholder=\"Tu correo\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Contraseña</label>\n                    <input class=\"form-control\" type=\"password\" formControlName=\"password\" placeholder=\"Shhhh...\">\n                </div>\n                <button class=\"btn btn-primary-wtd btn-block\" type=\"submit\">Iniciar sesión</button>\n            </form>\n        </div>\n    </section>\n</main>","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { cloneDays, getDay } from 'src/app/models/constants';\nimport { MonthPlan, PlanDay } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\n\n@Component({\n  selector: 'app-month-plan',\n  templateUrl: './month-plan.component.html',\n  styleUrls: ['./month-plan.component.css']\n})\nexport class MonthPlanComponent implements OnInit {\n  @Input('show-preview-func')\n  showEmailPreview: (isFailed:boolean, monthPlan:MonthPlan) => void\n\n  @Input('is-showing')\n  isShowing:boolean\n\n  availableDays: { id: number, name: string, disabled?: boolean }[]\n  selectedDays: number[]\n  daysQ: number = 1;\n  hoursQ: number[] = [];\n\n  constructor(private alert:AlertsService) {\n    this.availableDays = cloneDays()\n    this.selectedDays = [0, 0, 0, 0, 0, 0, 0]\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSelectDaysQ(select: HTMLSelectElement) {\n    this.daysQ = Number(select.value)\n  }\n\n  onSelectHoursQ(select: HTMLSelectElement, pos: number) {\n    this.hoursQ[pos] = Number(select.value)\n  }\n\n  selectDay(select: HTMLSelectElement, i: number) {\n    this.availableDays.find(d => d.id == Number(select.value)).disabled = true\n    \n    if (this.selectedDays[i] != 0)\n      this.availableDays.find(d => d.id == this.selectedDays[i]).disabled = false\n    \n    this.selectedDays[i] = Number(select.value)\n  }\n\n  constructPlan(form: HTMLElement) {\n    let isFailed = false\n    let monthPlan:MonthPlan = {\n      monthsQ: form[0].value,\n      timesPerWeek: this.daysQ,\n      days:[]\n    }\n\n    let dayDivs = form.getElementsByClassName('wtd-day')\n\n    this.selectedDays.slice(0, this.daysQ).forEach((d, i) => {\n      if (d == 0) {\n        isFailed = true\n        this.alert.showAlert(\"error\", \"Datos no validos\", \"Debes seleccionar el dia de la semana de manera correcta\")\n      } else if(!isFailed) {\n        let dayDiv = dayDivs.item(i)\n        let hourDivs = dayDiv.getElementsByClassName('wtd-hour-row')\n\n        let day: PlanDay = { \n          id: d, \n          timesPerDay: Number(dayDiv.getElementsByTagName('select')[1].value),\n          hours:[]\n        }\n\n        day.hours = []       \n\n        for (let j = 0; j < hourDivs.length; j++) {\n          let hourDiv = hourDivs.item(j)\n          let time = hourDiv.getElementsByTagName('input')[0].value\n\n          if (time == \"\") {\n            isFailed = true\n            this.alert.showAlert(\"error\", \"Datos no validos\", \"Debes llenar las horas de manera correcta\")\n            break\n          }\n\n          day.hours.push({\n            time,\n            hours: Number(hourDiv.getElementsByTagName('select')[0].value)\n          })\n        }\n\n        monthPlan.days.push(day)\n      }\n    })\n\n    this.showEmailPreview(isFailed, monthPlan)\n  }\n}\n","<form *ngIf=\"isShowing\" (ngSubmit)=\"constructPlan($event.target)\">\n    <div class=\"form-row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\" style=\"margin-bottom: 10px;\">\n                <div class=\"card-header\">\n                    Diligenciar el plan \n                </div>\n                <div class=\"card-body\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-6 col-lg-6\">\n                            <label>Meses</label>\n                            <select class=\"form-control\">\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                            </select>\n                        </div>\n\n                        <div class=\"form-group col-md-6 col-lg-6\">\n                            <label>Veces por semana</label>\n                            <select class=\"form-control\" (change)=\"onSelectDaysQ($event.target)\">\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row wtd-day\" *ngFor=\"let item of [].constructor(daysQ);let i = index\">\n                        <div class=\"form-group col-md-6 col-lg-4\">\n                            <label>Día de la semana</label>\n                            <select class=\"form-control\" (change)=\"selectDay($event.target, i)\">\n                                <option value=\"\">Selecciona un dia</option>\n                                <option *ngFor=\"let day of availableDays\" [value]=\"day.id\" [disabled]=\"day.disabled\">{{ day.name }}</option>\n                            </select>\n                        </div>\n\n                        <div class=\"form-group col-md-6 col-lg-2\">\n                            <label>Veces por día</label>\n                            <select class=\"form-control form-datetime\" (change)=\"onSelectHoursQ($event.target, i)\">\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                            </select>\n                        </div>\n\n                        <div class=\"col-lg-6\">\n                            <div class=\"row wtd-hour-row\" *ngFor=\"let item of [].constructor(hoursQ[i]);let j = index\">\n                                <div class=\"form-group col-md-6 col-lg-4\">\n                                    <label>Hora inicial</label>\n                                    <input type=\"time\" class=\"form-control\" required>\n                                </div>\n\n                                <div class=\"form-group col-md-10 col-lg-8\">\n                                    <label>Cantidad de horas</label>\n                                    <select class=\"form-control form-datetime\" >\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                        <option value=\"6\">6</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-primary-wtd\" type=\"submit\">Listo</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SwPush } from '@angular/service-worker';\nimport { environment } from 'src/environments/environment';\nimport { PushData } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  constructor(\n    private swPush: SwPush,\n    private http: HttpClient,\n\n  ) { }\n\n  subscribeNotifications() {\n    this.swPush.requestSubscription({\n      serverPublicKey: environment.VAPIIDPublicKey\n    }).then(pushSub => {\n      let st = JSON.stringify(pushSub)\n      let sub: PushData = JSON.parse(st)\n      sub.ownerId = Number(localStorage.getItem('id'))\n      if (!localStorage.getItem(\"notifySub\") || localStorage.getItem(\"notifySub\") != st) {\n        this.saveDevice(sub).subscribe(res => {\n          if (res.ok)\n            localStorage.setItem(\"notifySub\", st)\n        })\n      }\n\n    }).catch(err => { })\n  }\n\n  saveDevice(sub: PushData) {\n    return this.http.post<any>(environment.backendURL + 'devices', sub, environment.httpOptions)\n  }\n\n  notifyPayment(payment) {\n    return this.http.post(environment.backendURL + 'services/payment', payment, environment.httpOptions)\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from \"@angular/forms\";\nimport { AuthService } from '../../../services/auth.service';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { City } from 'src/app/models/city';\nimport { CitiesService } from 'src/app/services/cities.service';\n\n@Component({\n\tselector: 'app-registration',\n\ttemplateUrl: './registration.component.html',\n\tstyleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\tcities: City[];\n\tprofileURL: string;\n\tform: FormGroup;\n\n\tconstructor(\n\t\tprivate as: AuthService, \n\t\tpublic fb: FormBuilder, \n\t\tprivate usersS:UsersService,\n\t\tprivate citiesS:CitiesService,\n\t\tprivate alert: AlertsService\n\t) { }\n\n\tngOnInit(): void {\n\t\tif (this.as.isLoggedIn)\n\t\t\tthis.as.router.navigate(['dashboard']);\n\n\t\tthis.citiesS.list().subscribe(cities => this.cities = cities)\n\n\t\tthis.form = this.fb.group({\n\t\t\tnames: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tsurname: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\temail: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.email\n\t\t\t])],\n\t\t\tpassword: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(8),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tcpassword: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(8),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tocupation: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tphone: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(10),\n\t\t\t\tValidators.maxLength(10)\n\t\t\t])],\n\t\t\tcity_id: [1, Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\taddress: ['', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tterms: [true, Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tphoto: [null, Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tfileSource: ['', Validators.required],\n\t\t\tgoogle_token: [null],\n\t\t\tiswalker:[false],\n\t\t\trole: ['CL']\n\t\t});\n\t}\n\n\tvalidateForm(){\n\t\tif(this.form.valid && this.form.value.password == this.form.value.cpassword)\n\t\t\tthis.tryRegister()\n\t\telse{\n\t\t\tthis.getFormValidationError(this.form)\n\t\t\tthis.alert.showAlert(\"error\", \"Campos no válidos\", \"Debes rellenar los campos solicitados\", 4)\n\t\t}\n\t\t\t\n\t}\n\n\tgetFormValidationError(form: FormGroup) {\n\t\tObject.keys(form.controls).forEach(key => {\n\t\t\tconst controlErrors: ValidationErrors = form.get(key).errors;\n\n\t\t\tif (controlErrors != null) {\n\t\t\t\tObject.keys(controlErrors).forEach(keyErr => {\n\t\t\t\t\tconsole.log(key + ' ' + keyErr);\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tonSelectProfile(event) {\n\t\tconst reader = new FileReader();\n\n\t\tif (event.target.files && event.target.files.length) {\n\t\t\tconst [file] = event.target.files;\n\t\t\treader.readAsDataURL(file);\n\t\t\treader.onload = () => {\n\t\t\t\tthis.profileURL = reader.result as string;\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\tfileSource: reader.result\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t}\n\n\n\ttryRegister() {\n\t\tthis.as.doRegister(this.form.value).then(res => {\n\t\t\tthis.form.patchValue({\n\t\t\t\tpassword: null,\n\t\t\t\tcpassword: null,\n\t\t\t\tgoogle_token: res.user.uid\n\t\t\t})\n\t\t\n\t\t\tthis.as.updateUser(this.form.value.fname).then(res1 => {\n\t\t\t\tconsole.log(\"r\",res1)\n\t\t\t\tthis.as.sendVerificationMail();\n\t\t\t\t\n\t\t\t\tthis.usersS.insert(this.form.value).subscribe(resUI => {\n\t\t\t\t\tconsole.log(\"UI\",resUI)\n\t\t\t\t\tif(resUI.ok){\n\t\t\t\t\t\tthis.alert.showAlert(\"success\", \"Listo! \", \"Revisa tu correo\")\n\t\t\t\t\t\tthis.as.router.navigate(['verify-email'])\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.alert.showAlert(\"error\", \"Error! \", \"Ha habido un error con tu registro\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}).catch(err => {\n\t\t\tif (err.code = \"auth/email-already-in-use\")\n\t\t\t\tthis.alert.showAlert(\"error\", \"Error: \", \"Ese email ya está en uso\")\n\t\t\telse\n\t\t\t\tconsole.log(err.code);\n\t\t});\n\t}\n}\n","<main class=\"page registration-page\">\n    <section class=\"clean-block wtd-form dark\" style=\"padding-top: 50px\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Registro</h2>\n            </div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"validateForm()\" class=\"col-lg-8\">\n            \t<div class=\"row\">\n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"name\">Nombres</label>\n                        <input class=\"form-control item\" type=\"text\" formControlName=\"names\" placeholder=\"Aqui tus nombres\">\n                    </div>\n    \n                     <div class=\"form-group col-lg-6\">\n                        <label for=\"name\">Apellidos</label>\n                        <input class=\"form-control item\" type=\"text\" formControlName=\"surname\" placeholder=\"Tus apellidos\">\n                    </div>\n\n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"name\">Ocupación</label>\n                        <input class=\"form-control item\" type=\"text\" formControlName=\"ocupation\" placeholder=\"¿A qué te dedicas?\">\n                    </div>\n    \n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"city\">Ciudad</label>\n                        <select class=\"form-control item\" formControlName=\"city_id\" type=\"text\">\n                            <option value=\"\">Selecciona una ciudad</option>\n                            <option *ngFor=\"let city of cities\" [value]=\"city.id\">{{ city.name }}</option>\n                        </select>\n                    </div>\n                    \n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"email\">Dirección</label>\n                        <input class=\"form-control item\" type=\"text\" formControlName=\"address\" placeholder=\"¿Donde vives?\">\n                    </div>\n\n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"name\">Telefono</label>\n                        <input class=\"form-control item\" type=\"text\" formControlName=\"phone\" placeholder=\"Si es el de WhatsApp, ¡mucho mejor!\" maxlength=\"10\">\n                    </div>\n\n                    <div class=\"form-group col-lg-12\">\n                        <label for=\"email\">Email</label>\n                        <input class=\"form-control item\" type=\"email\" formControlName=\"email\" placeholder=\"Tu correo\">\n                    </div>\n\n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"password\">Contraseña</label>\n                        <input class=\"form-control item\" type=\"password\" formControlName=\"password\" placeholder=\"Al menos 8 caracteres\">\n                    </div>\n    \n                     <div class=\"form-group col-lg-6\">\n                        <label for=\"password\">Confirmar contraseña</label>\n                        <input class=\"form-control item\" type=\"password\" id=\"cpassword\" placeholder=\"Repite tu contraseña\" formControlName=\"cpassword\">\n                    </div>\n\n                    <div class=\"form-group col-lg-12\">\n                        <label for=\"name\">Foto de perfil</label>\n                        <img [src]=\"profileURL\" *ngIf=\"profileURL\" style=\"width:100%\">\n                        <input formControlName=\"photo\" type=\"file\" class=\"form-control item\" (change)=\"onSelectProfile($event)\">\n                    </div>\n\n                    <div class=\"custom-control custom-checkbox mb-2\">\n                        <input formControlName=\"terms\" type=\"checkbox\" class=\"custom-control-input\" id=\"terms1\" required>\n                        <label class=\"custom-control-label\" for=\"terms1\">He leido y <strong>acepto</strong> los <a routerLink=\"terms\">Terminos de servicio</a>,<a routerLink=\"terms\">Terminos de uso</a> y la <a routerLink=\"terms\">Política de privacidad</a> de WalkTheDog</label>\n                    </div>\n                    <button class=\"btn btn-primary-wtd btn-block\">Registrarme</button>\n                </div>\n            </form>\n        </div>\n    </section>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { ServicesService } from 'src/app/services/services.service';\n\n@Component({\n  selector: 'app-waited-services',\n  templateUrl: './waited-services.component.html',\n  styleUrls: ['./waited-services.component.css']\n})\nexport class WaitedServicesComponent implements OnInit {\n  services:ServiceRequest[]\n\n  constructor(private servicesS:ServicesService) {\n    let id = Number(localStorage.getItem('id'));\n    this.servicesS.getUnapprovedById(id).subscribe(services => this.services = services)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"services && services.length == 0\">\n\t<h3>Servicos en espera</h3>\n\tNo tienes servicios en espera de aprobación\n</div>\n\n\n<div *ngIf=\"services && services.length > 0\" class=\"\">\n    <h3>Servicos en espera</h3>\n    <div class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n            <thead>\n                <tr >\n                    <th>Código</th>\n                    <th>Tipo</th>\n                    <th>Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let service of services\">\n                    <td>WTD{{ service.id }}</td>\n                    <td>{{ service.type == \"WK\" ? \"Paseo\":\"\" }}</td>\n                    <td>${{ service.total }}</td>\n                    <td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../details', service.id]\">Detalles</a></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\nconst myScripts = [\n  { name: 'epayco', src: 'https://checkout.epayco.co/checkout.js', where:'epayco'}\n];\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ScriptService {\n\tprivate scripts: any = {};\n\n\tconstructor() {\n\t\tmyScripts.forEach((script: any) => {\n\t\t\tthis.scripts[script.name] = {\n\t\t\t\tloaded: false,\n\t\t\t\tsrc: script.src,\n\t\t\t\twhere:script.where\n\t\t\t};\n\t\t});\n\t}\n\n\tload(...scripts: string[]) {\n\t\tconst promises: any[] = [];\n\t\tscripts.forEach((script) => promises.push(this.loadScript(script)));\n\t\treturn Promise.all(promises);\n\t}\n\n\tloadScript(name: string, attrs?:any[]) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.scripts[name].loaded) {\n\t\t\t\tresolve({script: name, loaded: true, status: 'Already Loaded'});\n\t\t\t} else {\n\t\t\t\tconst script = document.createElement('script');\n\t\t\t\tscript.src = this.scripts[name].src;\n\n        \t\tif(attrs){\n        \t\t\tattrs.forEach(a =>{\n        \t\t\t\tscript.setAttribute(a.key,a.value);\n        \t\t\t})\n        \t\t}\n\n      \t\t\tscript.onload = () => {\n        \t\t\tthis.scripts[name].loaded = true;\n        \t\t\tresolve({script: name, loaded: true, status: 'Loaded'});\n      \t\t\t};\n        \t\t\n        \t\tscript.onerror = (error: any) => resolve({script: name, loaded: false, status: 'Loaded'});\n        \t\t\n        \t\tdocument.getElementById(this.scripts[name].where).appendChild(script);\n        \t}\n        });\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n  declarations: [FooterComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports:[FooterComponent]\n})\nexport class FooterModule { }\n","import { Component } from '@angular/core';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ModalService } from './services/modal.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n  \tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'walkthedog';\n\n\n\tconstructor(){\n\t}\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n<app-modal></app-modal>\r\n<app-alerts></app-alerts>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'app-pricing',\n\ttemplateUrl: './pricing.component.html',\n\tstyleUrls: ['./pricing.component.css']\n})\nexport class PricingComponent implements OnInit {\n\ttt:any;\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t}\n\n\tupdate(){\n\t}\n\n\ttest(){\n\t\t\n\t}\n\n}\n","<main class=\"page pricing-table-page\">\n\t<section id=\"pricing\" class=\"clean-block clean-pricing sect-wtd\" style=\"padding-top:50px;padding-bottom: 157px\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"block-heading\">\n\t\t\t\t<ul id=\"messages\"></ul>\n\t\t\t\t<form id=\"form\" action=\"\">\n\t\t\t\t\t<input id=\"input\" autocomplete=\"off\" /><button>Send</button>\n\t\t\t\t</form>\n\n\t\t\t\t<input id=\"update\" autocomplete=\"off\" />\n\t\t\t\t<button (click)=\"update()\">Send</button>\n\n\t\t\t\t<button (click)=\"test()\">Test</button>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n</main>","export const DAYS = [\r\n  { id: 1, name: \"Lunes\" },\r\n  { id: 2, name: \"Martes\" },\r\n  { id: 3, name: \"Miércoles\" },\r\n  { id: 4, name: \"Jueves\" },\r\n  { id: 5, name: \"Viernes\" },\r\n  { id: 6, name: \"Sábado\" },\r\n  { id: 7, name: \"Domingo\" },\r\n]\r\n\r\nexport function cloneDays(){\r\n  let days = []\r\n  DAYS.forEach(d => days.push(d))\r\n  return days\r\n}\r\n\r\nexport function getDay(id:number){\r\n  return DAYS.find(d => d.id == id)\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-api',\n  templateUrl: './test-api.component.html',\n  styleUrls: ['./test-api.component.css']\n})\nexport class TestApiComponent implements OnInit {\n\tconstructor() {}\n\tngOnInit(): void {}\n\ttrySend(){}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { User } from 'src/app/models/user';\nimport { NotificationsService } from 'src/app/services/notifications.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  user:User;\n  showedMenu:number;\n  isShowingServices:boolean;\n  \n\tconstructor(\n    private as:AuthService, \n    private usersService:UsersService,\n    private notifcationsS:NotificationsService\n  ) {}\n\n  ngOnInit(): void {\n  \tif(!this.as.isLoggedIn)\n  \t\t\tthis.as.router.navigate(['/']);\n\n    this.usersService.getById(Number(localStorage.getItem('id'))).subscribe(user => {\n      this.user = user\n\n      if(localStorage.getItem('showedMenu'))\n        this.showedMenu = Number(localStorage.getItem('showedMenu'))\n      else if(this.user.role == 'CL')\n        this.setShowedMenu(0)\n      else if(this.user.role == 'WK')\n        this.setShowedMenu(1)\n      else if(this.user.role == 'AD')\n        this.setShowedMenu(2)\n    })\n    this.notifcationsS.subscribeNotifications()\n  }\n\n  get isLoggedIn(){\n\t\treturn this.as.isLoggedIn;\n\t}\n\n  setShowedMenu(id:number){\n    localStorage.setItem('showedMenu',  (this.showedMenu = id) + '')\n  }\n}\n","<main class=\"page landing-page\">\n    <section class=\"clean-block clean-hero\" style=\"color: #f48706d9;border-color: #f48706d9; align-items: initial;\" >\n        <div class=\"container\" style=\"margin-top: 100px; margin-bottom: 25px; z-index: 2\">\n            <div class=\"row\">\n                <aside class=\"col-lg-3 col-md-4\">\n                    <div class=\"card\" *ngIf=\"user\">\n                        <div class=\"card-body\">\n                            <div *ngIf=\"user.role == 'WK' || user.role == 'AD'\">\n                                <div  class=\"btn-group btn-group-sm\" role=\"group\">\n                                    <button class=\"btn {{ showedMenu == 2 ? 'btn-primary-wtd' : 'btn-outline-primary-wtd' }}\" *ngIf=\"user.role == 'AD'\" (click)=\"setShowedMenu(2)\">Admin</button>\n                                    <button class=\"btn {{ showedMenu == 1 ? 'btn-primary-wtd' : 'btn-outline-primary-wtd' }}\" *ngIf=\"user.role == 'WK' || user.role == 'AD'\" (click)=\"setShowedMenu(1)\">Paseador</button>\n                                    <button class=\"btn {{ showedMenu == 0 ? 'btn-primary-wtd' : 'btn-outline-primary-wtd' }}\" (click)=\"setShowedMenu(0)\">Cliente</button>\n                                </div> \n                                <hr>\n                            </div>\n                            \n                            <div *ngIf=\"user.role == 'AD' && showedMenu == 2\">\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"services/manage/paid\">\n                                    <i class=\"fa fa-cubes\" aria-hidden=\"true\"></i> \n                                    Gestionar servicios\n                                </a>\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"cities/manage\">\n                                    <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> \n                                    Gestionar ciudades\n                                </a>\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"walkers/manage\">\n                                    <i class=\"fa fa-male\" aria-hidden=\"true\"></i> \n                                    Gestionar paseadores\n                                </a>\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"users\">\n                                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i> \n                                    Gestionar clientes\n                                </a>\n                            </div>\n    \n                            <div *ngIf=\"(user.role == 'WK' || user.role == 'AD') && showedMenu == 1\">\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"services/scheduled\">\n                                    <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> \n                                    Servicios programados\n                                </a>\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"services/walker/history\">\n                                    <i class=\"fa fa-history\" aria-hidden=\"true\"></i> \n                                    Historial\n                                </a>\n                            </div>\n    \n                            <div *ngIf=\"(user.role == 'WK' || user.role == 'AD' || user.role == 'CL') && showedMenu == 0\">\n                                <button class=\"btn btn-outline-primary-wtd btn-block\" (click)=\"isShowingServices = !isShowingServices\">\n                                    <i class=\"fa fa-cubes\" aria-hidden=\"true\"></i> \n                                    Servicios\n                                </button>\n                                <div class=\"mt-1 mb-2\" *ngIf=\"isShowingServices\">\n                                    <a class=\"btn btn-outline-primary-wtd btn-block btn-sm\" routerLink=\"services/request\">\n                                        <i class=\"fa fa-book\" aria-hidden=\"true\"></i> \n                                        Solicitar servicio\n                                    </a>\n                                    <a class=\"btn btn-outline-primary-wtd btn-block btn-sm\" routerLink=\"services/waited\">\n                                        <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> \n                                        Servicios en espera\n                                    </a>\n                                    <a class=\"btn btn-outline-primary-wtd btn-block btn-sm\" routerLink=\"services/active\">\n                                        <i class=\"fa fa-bullseye\" aria-hidden=\"true\"></i> \n                                        Servicios activos\n                                    </a>\n                                    <a class=\"btn btn-outline-primary-wtd btn-block btn-sm\" routerLink=\"services/history\">\n                                        <i class=\"fa fa-history\" aria-hidden=\"true\"></i> \n                                        Historial\n                                    </a>\n                                </div>\n                                <a class=\"btn btn-outline-primary-wtd btn-block\" routerLink=\"pets\">\n                                    <i class=\"fa fa-paw\" aria-hidden=\"true\"></i> \n                                    Mis mascotas\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </aside>\n                <div class=\"col-lg-9 col-md-8\">\n                     <div class=\"card\">\n                        <div class=\"card-body\">\n                            <router-outlet></router-outlet>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServiceRequest } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { ServicesService } from 'src/app/services/services.service';\n\n@Component({\n  selector: 'app-service-details',\n  templateUrl: './service-details.component.html',\n  styleUrls: ['./service-details.component.css']\n})\nexport class ServiceDetailsComponent implements OnInit {\n  showedMenu: number;\n  service: ServiceRequest\n  id: number\n  walkers:any[]\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private servicesS: ServicesService,\n    private location: Location,\n    private alert: AlertsService\n  ) {\n    this.id = Number(this.route.snapshot.params.ID)\n    this.showedMenu = Number(localStorage.getItem('showedMenu'))\n    this.servicesS.get(this.id).subscribe(service => this.service = service)\n  }\n\n  ngOnInit(): void {\n  }\n\n  goBack() {\n    this.location.back()\n  }\n\n  startService(id: number) {\n    let date = this.service.dates.find(dd => dd.id == id);\n\n    if (date.status == \"st\" || date.status == \"fh\") {\n      this.router.navigate(['/dashboard/services/progress', id])\n    } else {\n      date.status = 'st';\n      date.walker_id = Number(localStorage.getItem('id'))\n\n      this.servicesS.updateDate(date).subscribe(res => {\n        if (res.ok) {\n          this.alert.showToast(\"success\", \"Paseo iniciado \", \"Procede a colocar la hora de tu llegada por los perritos.\", 4)\n          this.router.navigate(['/dashboard/services/progress', id])\n        } else {\n          this.alert.showAlert(\"error\", \"Error \", \"Hubo un error en el servidor.\", 4)\n        }\n      })\n    }\n  }\n\n  isToday(d: string) {\n    let aux = new Date()\n    let date = new Date(d)\n    aux.setHours(0)\n    date.setHours(24)\n    aux.setMinutes(0)\n    aux.setSeconds(0)\n    aux.setMilliseconds(0)\n    return date.getTime() == aux.getTime()\n  }\n}\n","<div *ngIf=\"service\">\n    <div class=\"row\">\n        <div class=\"col-lg-2\">\n            <button class=\"btn btn-sm btn-primary-wtd\" (click)=\"goBack()\">Regresar</button>\n        </div>\n        <div class=\"col-lg-10\">\n            <h3>WTD{{ service.id }} </h3>\n        </div>\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n            <tbody>\n                <tr>\n                    <th>Tipo</th>\n                    <td>{{ service.type == \"WK\" ? \"Paseo\":\"\" }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu != 1\">\n                   <th>Total</th>\n                    <td>${{ service.total }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu != 0\">\n                    <th>Cliente</th>\n                    <td>\n                        <a [routerLink]=\"['../../../users', service.client_id, 'details', 'CL']\" class=\"btn btn-sm btn-primary-wtd\">\n                            {{ service.customer.names + ' ' + service.customer.surname }}\n                        </a> \n                    </td>\n                </tr>\n                <tr *ngIf=\"showedMenu != 1\">\n                    <th>Paseador</th>\n                     <td>\n                        <a [routerLink]=\"['../../../users', service.walker_id, 'details', 'WK']\" class=\"btn btn-sm btn-primary-wtd\">\n                            {{ service.walker.names + ' ' + service.walker.surname }}\n                        </a> \n                         <button class=\"btn btn-sm btn-primary-wtd\" hidden>Cambiar</button>\n                    </td>\n                 </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n            <thead>\n                <tr>\n                    <th>Perro</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let dog of service.dogs\">\n                    <td>{{ dog.name }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n            <thead>\n                <tr>\n                    <th>Código</th>\n                    <th>Fecha</th>\n                    <th>Hora</th>\n                    <th>Horas</th>\n                    <th *ngIf=\"showedMenu == 0\" hidden>Paseador</th>\n                    <th>Estado</th>\n                    <th *ngIf=\"service.status == 'fnsh'\">Calificación</th>\n                    <th *ngIf=\"service.status == 'fnsh'\">Comentario</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let date of service.dates\">\n                    <td>P{{ date.id }}</td>\n                    <td>{{ date.date | date: 'dd/MM/yyyy' }}</td>\n                    <td>{{ date.final_start_time ? date.real_start_time : date.start_time  }}</td>\n                    <td>{{ date.hours  }}</td>\n                    <td *ngIf=\"showedMenu != 1\" hidden>{{ date.walker }}</td>\n                    <td>\n                        <span *ngIf=\"date.status == 'ns'\">No iniciado</span>\n                        <span *ngIf=\"date.status == 'st'\">Iniciado</span>\n                        <span *ngIf=\"date.status == 'fh'\">Finalizado</span>\n                        <span *ngIf=\"date.status == 'end'\">Finalizado</span>\n                    </td>\n                    <td *ngIf=\"service.status == 'fnsh'\">{{ date.score }}</td>\n                    <td *ngIf=\"service.status == 'fnsh'\">{{ date.comment  }}</td>\n                    <td *ngIf=\"showedMenu == 1 && isToday(date.date) && date.status != 'end'\">\n                        <button class=\"btn btn-sm btn-primary-wtd\" (click)=\"startService(date.id)\">\n                            <span *ngIf=\"date.status == 'ns'\">Iniciar</span>\n                            <span *ngIf=\"date.status == 'st'\">Gestionar</span>\n                            <span *ngIf=\"date.status == 'fh'\">Detalles</span>\n                        </button>\n                    </td>\n\n                    <td *ngIf=\"showedMenu == 0 && date.status != 'ns' && date.status != 'end'\">\n                        <button class=\"btn btn-sm btn-primary-wtd\" (click)=\"startService(date.id)\">\n                            <span *ngIf=\"date.status == 'st'\">Gestionar</span>\n                            <span *ngIf=\"date.status == 'fh'\">Detalles</span>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AlertsService } from '../../../../services/alerts.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { DogsService } from 'src/app/services/dogs.service';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { CitiesService } from 'src/app/services/cities.service';\nimport { User } from 'src/app/models/user';\nimport { getDay } from 'src/app/models/constants';\nimport { City, Dog, MonthPlan, ServiceRequest, WalkDate } from 'src/app/models';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.css']\n})\nexport class ServiceComponent implements OnInit {\n  user: User;\n  cService: ServiceRequest;\n  cities: any[];\n  dogs: Dog[];\n  selectedDogs: any[];\n  selectedCity:City;\n  selectedService:string;\n  getDay = getDay\n\n  showPreviewFunc: (isFailed: boolean, plan: MonthPlan) => void\n  showAbstractFunc: (isFailed: boolean, dates: WalkDate[]) => void\n  showInfoFunc:() => void\n  showPaymentMethodsFunc: (total:number) => void\n\n  monthPlan: MonthPlan\n  dates: WalkDate[]\n\n  @ViewChild('emailPreview')\n  emailPreviewDiv: ElementRef<HTMLDivElement>\n\n  @ViewChild('info')\n  infoDiv: ElementRef<HTMLDivElement>\n\n  @ViewChild('monthPlanC')\n  monthPlanRef: ElementRef\n\n  @ViewChild('walkFormC')\n  walkFormRef: ElementRef\n\n  @ViewChild('walkAbstractC')\n  walkAbstractRef: ElementRef<HTMLElement>\n\n  @ViewChild('paymentMethodsC')\n  paymentMethodsRef: ElementRef<HTMLElement>\n\n  constructor(\n    private usersS: UsersService,\n    private dogsS: DogsService,\n    private citiesS: CitiesService,\n    private servicesS: ServicesService,\n    private alert: AlertsService\n  ) {\n    this.selectedDogs = [];\n    this.showInfoFunc = this.showInfo.bind(this)\n    this.showPreviewFunc = this.showEmailPreview.bind(this)\n    this.showAbstractFunc = this.prepareAbstract.bind(this)\n    this.showPaymentMethodsFunc = this.showPayments.bind(this)\n  }\n\n  ngOnInit(): void {\n    this.usersS.getById(Number(localStorage.getItem('id'))).subscribe(user => {\n      this.user = user;\n\n      this.citiesS.list().toPromise().then(cities => {\n        this.cities = cities;\n        this.selectedCity = this.cities.find(c => c.id == this.user.city_id);\n\n        this.dogsS.getByOwner(this.user.id).subscribe(dogs => {\n          this.dogs = dogs;\n\n          this.servicesS.getUncompleted(this.user.id).subscribe(service => {\n            if (service) {\n              this.cService = service;\n              this.selectedCity = this.cities.find(c => c.id == this.cService.city_id);\n              this.selectedService = this.cService.type;\n\n              this.cService.dogs.forEach(d => {\n                let dog = this.dogs.find(dog => dog.id == d.id);\n                let dogId = this.dogs.indexOf(dog);\n                this.dogs.splice(dogId, 1);\n                this.selectedDogs.push(dog);\n              })\n\n              this.dates = []\n\n              this.cService.dates.forEach(d => this.dates.push({ \n                date: d.date, \n                time: d.start_time, \n                hours: d.hours, \n                datetime: new Date(d.date + ' ' + d.start_time) \n              }));\n\n              if (this.cService.status == 'dtes') {\n                this.showWalkAbstract()\n              } else {\n                this.showInfo();\n              }\n            } else {\n              console.log(\"No existe servicio previo\")\n              this.selectedService = 'WK';\n              this.showInfo();\n            }\n          }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n        }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n      })\n    }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n  }\n\n  putOnList() {\n    let select = document.getElementById('dogList').getElementsByTagName('select')[0];\n    let dog = this.dogs.find(dog => dog.id == Number(select.value));\n    let dogId = this.dogs.indexOf(dog);\n\n    this.dogs.splice(dogId, 1);\n    this.selectedDogs.push(dog);\n    let cId = Number(localStorage.getItem('id'));\n\n    this.servicesS.getUncompleted(cId).subscribe(service => {\n      if (service) {\n        this.cService = service;\n        this.servicesS.insertDog(this.cService.id, dog.id).subscribe(res1 => {\n          if (res1.ok)\n            this.alert.showToast(\"success\", dog.name + \": \", \"Agregado a los paseos\", 4);\n          else\n            this.alert.showAlert(\"error\", \"Error: \", \"CD. No se pudo establecer conexión con la base de datos.\", 4);\n        }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n      } else {\n        this.cService = {\n          city_id: this.selectedCity.id,\n          client_id: cId,\n          type: this.selectedService\n        };\n        this.servicesS.insert(this.cService).subscribe(resW => {\n          this.cService.id = resW.id;\n\n          this.servicesS.insertDog(resW.id, dog.id).subscribe(res2 => {\n            if (res2.ok)\n              this.alert.showAlert(\"success\", dog.name + \": \", \"Agregado a los paseos\", 4);\n            else\n              this.alert.showAlert(\"error\", \"Error: \", \"CD. No se pudo establecer conexión con la base de datos.\", 4);\n          }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n        }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n      }\n    }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n  }\n\n  deleteOnList(id) {\n    let dog = this.selectedDogs.find(dog => dog.id == id);\n    let dogId = this.selectedDogs.indexOf(dog);\n    this.selectedDogs.splice(dogId, 1);\n    this.dogs.push(dog);\n\n    this.servicesS.getUncompleted(Number(localStorage.getItem('id'))).subscribe(res => {\n      this.servicesS.deleteDog(res.id, dog.id).subscribe(res1 => {\n        if (res1.ok)\n          this.alert.showToast(\"success\", dog.name + \": \", \"Eliminado de los paseos\", 4);\n        else\n          this.alert.showAlert(\"error\", \"Error: \", \"DD. No se pudo establecer conexión con la base de datos.\", 4);\n      }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n    }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n  }\n\n  prepareAbstract(isFailed: boolean, dates: WalkDate[]) {\n    if (!isFailed) {\n      this.dates = dates\n      this.servicesS.getUncompleted(Number(localStorage.getItem('id'))).subscribe(service => {\n        console.log(\"Service unc\", service)\n        this.servicesS.insertDate(service.id, this.dates).subscribe(res1 => {\n          console.log(\"insert dates\", res1)\n          let w = service;\n          w.city_id = this.selectedCity.id;\n          w.type = this.selectedService;\n          w.status = \"dtes\";\n  \n          this.servicesS.update(w).subscribe(res2 => {\n            if (res2.ok){\n              this.alert.showToast(\"success\", \"Servicio: \", \"Guardado\", 4);\n              this.showWalkAbstract()\n              this.hideInfo()\n            }else\n              this.alert.showDBErrorAlert(\"UW. \");\n          }, err => {\n            this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4)\n            console.log(err)\n          })\n        }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n      }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n    }\n  }\n\n  showWalkAbstract(){\n    this.walkAbstractRef.nativeElement.hidden = false\n  }\n\n  hideWalkAbstract() {\n    this.walkAbstractRef.nativeElement.hidden = true\n  }\n\n  showInfo() {\n    let info = document.getElementById('info');\n    if(info){\n      info.hidden = false;\n      this.hideWalkAbstract();\n      this.hidePayments();\n    }\n  }\n\n  hideInfo() {\n    let info = document.getElementById('info');\n    info.hidden = true;\n  }\n\n  showPayments(total:number) {\n    this.cService.total = total\n    this.cService.city = this.selectedCity\n    this.servicesS.getUncompleted(Number(localStorage.getItem('id'))).subscribe(service => {\n      let w = service;\n      w.total = total;\n\n      this.servicesS.update(w).subscribe(res2 => {\n        if ((res2 as any).ok)\n          this.alert.showToast(\"success\", \"Servicio: \", \"Guardado\", 4);\n        else\n          this.alert.showDBErrorAlert(\"UWT. \");\n      }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n    })\n\n    this.paymentMethodsRef.nativeElement.hidden = false\n  }\n\n  showEmailPreview(isFailed: boolean, monthPlan: MonthPlan) {\n    if (!isFailed) {\n      this.monthPlan = monthPlan\n      this.emailPreviewDiv.nativeElement.hidden = false\n      this.infoDiv.nativeElement.hidden = true\n    }\n  }\n\n  editEmailData() {\n    this.emailPreviewDiv.nativeElement.hidden = true\n    this.infoDiv.nativeElement.hidden = false\n  }\n\n  sendEmail() {\n    this.servicesS.sendMonthPlanEmail({ user: this.user, monthPlan: this.monthPlan }).subscribe(res => {\n      if (res.email) {\n        this.alert.showAlert(\"success\", \"Solicitud enviada\", \"La solicitud se envió correctamente\")\n        this.emailPreviewDiv.nativeElement.hidden = true\n        this.infoDiv.nativeElement.hidden = false\n      } else {\n        this.alert.showAlert(\"error\", \"Hubo un error\", \"Hubo un error al enviar la solicitud, intenta de nuevo más tarde\")\n      }\n    }, err => this.alert.showToast(\"error\", \"Error: \", \"Hubo un problema en en el servidor \" + err.name, 4))\n  }\n\n  hidePayments() {\n    this.paymentMethodsRef.nativeElement.hidden = true\n  }\n\n  setCity(e) {\n    if (this.selectedCity)\n      this.selectedCity = this.cities.find(c => c.id == e.target.value);\n  }\n\n  setService(e) {\n    if (this.selectedService) {\n      this.selectedService = e.target.value;\n      // this.dates = [];\n    }\n  }\n\n  showCityForm() {\n    document.getElementById('cityForm').hidden = false;\n    document.getElementById('data').hidden = true;\n  }\n\n  showServiceForm() {\n    document.getElementById('serviceForm').hidden = false;\n    document.getElementById('data').hidden = true;\n  }\n\n  showData() {\n    document.getElementById('serviceForm').hidden = true;\n    document.getElementById('cityForm').hidden = true;\n    document.getElementById('data').hidden = false;\n  }\n\n  getCity(id) {\n    return this.cities.find(c => c.id == id);\n  }\n\n  get getCities() {\n    return this.cities ? this.cities : null;\n  }\n}\n","<div id=\"service-config\">\n\t<div #info id=\"info\" hidden>\n\t\t<form *ngIf=\"selectedCity\" id=\"cityForm\" (ngSubmit)=\"showData()\" hidden>\n\t\t    <div class=\"form-row\">\n\t\t    \t<div class=\"form-group col-md-6\">\n                    <label for=\"city\">Ciudad</label>\n                    <select *ngIf=\"getCities\" class=\"form-control\" type=\"text\" (change)=\"setCity($event)\">\n                        <option *ngFor=\"let city of cities\" [value]=\"city.id\" [selected]=\"selectedCity.id == city.id\">{{ city.name }}</option>\n                    </select>\n                </div>\n               \n                <div class=\"form-group col-md-6\">\n                \t<label style=\"color: white\">-</label>\n                \t<button class=\"btn btn-block btn-primary-wtd\">Aceptar</button>\n                </div>\n            </div>\n        </form>\n\n        <form *ngIf=\"selectedService\" id=\"serviceForm\" (ngSubmit)=\"showData()\" hidden>\n\t\t    <div class=\"form-row\">\n\t\t    \t<div class=\"form-group col-md-6\">\n                    <label for=\"city\">Tipo de servicio</label>\n                    <select class=\"form-control\" type=\"text\" (change)=\"setService($event)\">\n                        <option value=\"WK\" [selected]=\"selectedService == 'WK'\">Paseo</option>\n\t\t        \t\t<option value=\"CR\" [selected]=\"selectedService == 'CR'\">Mensualidad</option>\n                    </select>\n                </div>\n               \n                <div class=\"form-group col-md-6\">\n                \t<label style=\"color: white\">-</label>\n                \t<button class=\"btn btn-block btn-primary-wtd\">Aceptar</button>\n                </div>\n            </div>\n        </form>\n\n        <div id=\"data\">\n\t        <div *ngIf=\"selectedCity\" class=\"row\">\n\t        \t<div class=\"col-sm-6 form-group\" style=\"margin-bottom: 5px\">\n\t        \t\t{{ selectedCity.name }} <button class=\"btn btn-sm btn-outline-primary-wtd\" (click)=\"showCityForm()\">Cambiar</button>\n\t        \t</div>\n\n\t        \t<div class=\"col-sm-6 form-group\" style=\"margin-bottom: 5px\">\n\t        \t\t{{ selectedService == 'WK' ? 'Paseo' : 'Mensualidad' }} <button class=\"btn btn-sm btn-outline-primary-wtd\" (click)=\"showServiceForm()\">Cambiar</button>\n\t        \t</div>\n\t        </div>\n\t        <form id=\"dogList\" (ngSubmit)=\"putOnList()\">\n\t\t        <div class=\"card\" style=\"margin-bottom: 10px;\">\n\t\t        \t<div class=\"card-header\">\n\t\t\t\t\t\t{{ selectedService == 'WK' ? 'Se van de paseo' : 'Mensualidad' }}\n\t\t        \t</div>\n\t\t        \t<div class=\"card-body\">\n\t\t\t        \t<div class=\"row\">\n\t\t\t        \t\t<div class=\"form-group col-lg-3\">\n\t\t\t\t\t\t        <label>Perro</label>\n\t\t\t\t\t\t        <select id=\"dogs\" class=\"form-control\" style=\"margin-bottom: 5px;\">\n\t\t\t\t\t\t            <option *ngFor=\"let dog of dogs\" [value]=\"dog.id\">{{ dog.name }}</option>\n\t\t\t\t\t\t            <option *ngIf=\"dogs && dogs.length == 0\">Vacío</option>\n\t\t\t\t\t\t        </select>\n\t\t\t\t\t\t        <button class=\"btn btn-primary-wtd btn-block\" *ngIf=\"dogs && dogs.length != 0\">Agregar</button>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t    <div class=\"col-lg-9\">\n\t\t\t\t\t\t    \t<div *ngIf=\"selectedDogs.length == 0\">\n\t\t\t\t        \t\t\tSelecciona al menos a un perrito\n\t\t\t\t        \t\t</div>\n\t\t\t\t        \t\t<div class=\"row\">\n\t\t\t\t        \t\t\t<div *ngFor=\"let dog of selectedDogs\" class=\"col-md-6\" style=\"margin-bottom: 5px;\">\n\t\t\t\t\t        \t\t\t<div *ngIf=\"dog\" class=\"btn-group btn-block\" role=\"group\">\n\t\t\t\t\t        \t\t\t\t<button type=\"button\" (click)=\"deleteOnList(dog.id)\" class=\"btn btn-outline-primary-wtd\">\n\t\t\t\t\t        \t\t\t\t\t{{ dog.name }}\n\t\t\t\t\t        \t\t\t\t</button>\n\t\t\t\t\t        \t\t\t\t<input type=\"text\" [value]=\"dog.id\" hidden>\n\t\t\t\t\t        \t\t\t</div>\n\t\t\t\t\t        \t\t</div>\n\t\t\t\t        \t\t</div>\n\t\t\t\t        \t</div>\n\t\t\t        \t</div>\n\t\t\t        </div>\n\t\t        </div>\n\t\t\t</form>\n\t\t\t<app-walk-form #walkFormC [is-showing]=\"selectedDogs.length > 0 && selectedService == 'WK'\" [show-abstract-func]=\"showAbstractFunc\" [dates]=\"dates\"></app-walk-form>\n\t\t\t<app-month-plan #monthPlanC [is-showing]=\"selectedDogs.length > 0 && selectedService == 'CR'\" [show-preview-func]=\"showPreviewFunc\"></app-month-plan>\n\t\t</div>\n\t</div>\n\n\t<div #walkAbstractC hidden>\n\t\t<app-walk-abstract [show-info-func]=\"showInfoFunc\" [show-payment-methods-func]=\"showPaymentMethodsFunc\" [dogs]=\"selectedDogs\" [dates]=\"dates\" [city]=\"selectedCity\"></app-walk-abstract>\n\t</div>\n\n\t<div #emailPreview hidden>\n\t\t<app-plan-email-preview></app-plan-email-preview>\n\t\t<h4>Resumen de solicitud</h4>\n\t\t<table *ngIf=\"monthPlan\" class=\"table table-bordered\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Cantidad de meses</th>\n\t\t\t\t\t<td>{{ monthPlan.monthsQ }}</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Veces por semana</th>\n\t\t\t\t\t<td>{{ monthPlan.timesPerWeek }}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<table *ngIf=\"monthPlan\" class=\"table table-bordered\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Dia de la semana</th>\n\t\t\t\t\t<th>Veces al dia</th>\n\t\t\t\t\t<th>Hora inicio</th>\n\t\t\t\t\t<th>Cantidad de horas</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<ng-container *ngFor=\"let day of monthPlan.days\">\n\t\t\t\t\t<tr *ngFor=\"let hour of day.hours; let i = index\">\n\t\t\t\t\t\t<td *ngIf=\"i == 0\" [attr.rowspan]=\"day.timesPerDay\">{{ getDay(day.id).name }}</td>\n\t\t\t\t\t\t<td *ngIf=\"i == 0\" [attr.rowspan]=\"day.timesPerDay\">{{ day.timesPerDay }}</td>\n\t\t\t\t\t\t<td>{{ hour.time }}</td>\n\t\t\t\t\t\t<td>{{ hour.hours }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-container>\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<div class=\"btn-group btn-block\" role=\"group\">\n\t\t\t<button class=\"btn btn-primary-wtd\" (click)=\"sendEmail()\">Enviar solicitud</button>\n\t\t\t<button class=\"btn btn-outline-primary-wtd\" (click)=\"editEmailData()\">Volver</button>\n\t\t</div>\n\t</div>\n</div>\n\n<div #paymentMethodsC hidden>\n\t<app-payment-methods [service]=\"cService\"></app-payment-methods>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n  users:User[]\n  usersFilter:User[]\n\n  constructor(private usersS:UsersService, private alert:AlertsService, private as:AuthService) {\n    this.usersS.getById(Number(localStorage.getItem('id'))).subscribe(res=>{\n\t\t\tif(res.role != 'AD')\n\t\t\t\tthis.as.router.navigate(['/dashboard']);\n\t\t})\n    this.usersS.getPostulatedWalkers().subscribe(users => this.users = this.usersFilter = users)\n  }\n\n  ngOnInit(): void {\n  }\n\n  filterUsers(input:string){\n    this.usersFilter = this.users.filter(u => u.email.toUpperCase().includes(input.toUpperCase()))\n  }\n\n  setWalker(walkerId) {\n    let w:User = this.users.find(ww => ww.id == walkerId);\n    let i = this.users.indexOf(w);\n    w.role = 'WK';\n    w.req_walker = true\n\n    this.usersS.update(w).subscribe(res => {\n      if (res.ok) {\n        this.users.splice(i, 1);\n        this.alert.showToast(\"success\", \"Nuevo paseador! \", w.names + \" ha sido aceptado como paseador.\", 3);\n      } else {\n        this.alert.showToast(\"error\", \"Error: \", \"No se hapodido establecer conexión con la base de datos, intenta de nuevo\", 3);\n      }\n    })\n  }\n}\n","<h3>Clientes</h3>\n<div  *ngIf=\"users\" class=\"row\">\n\t<div class=\"form-group col-lg-10\">\n\t\t<label>Busca un usuario</label>\n\t\t<input placeholder=\"Correo del usuario\" type=\"text\" class=\"form-control\" (keyup)=\"filterUsers($event.target.value)\">\n\t</div>\n\n\t<div class=\"form-group col-lg-2\">\n\t\t<label>-</label>\n\t\t<button class=\"btn btn-dark btn-block\">Buscar</button>\n\t</div>\n</div>\n\n<div  *ngIf=\"usersFilter\" class=\"table-responsive\">\n\t<table *ngIf=\"usersFilter && usersFilter.length > 0\" class=\"table table-bordered\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Nombre</th>\n                <th>Correo</th>\n\t\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n\t\t\t<tr *ngFor=\"let user of usersFilter\">\n\t\t\t\t<td>{{ user.names + ' ' + user.surname }}</td>\n                <td>{{ user.email }}</td>\n                <td>\n                    <button class=\"btn btn-sm btn-success btn-sm\" (click)=\"setWalker(user.id)\">Hacer paseador</button>\n\t\t\t\t</td>\n\t\t\t\t<td><a class=\"btn btn-sm btn-secondary btn-sm\">Detalles</a></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n<div *ngIf=\"users && users.length == 0\"></div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ModalService {\n\tconstructor() {\n\t}\n\n\tcloseModal(){\n\t\tdocument.getElementById('modalButton').click();\n\t\tdocument.getElementById('modalTitle').innerHTML = '';\n\t\tdocument.getElementById('modalContent').innerHTML = '';\n\t}\n\n\tsetOnType(d){\n\t\tif(d.type == 'input'){\n\t\t\treturn '<input class=\"form-control\" id=\"' + d.tid + '\" type=\"' + d.ttype + '\" value=\"' + d.value + '\">';\n\t\t}\n\t}\n\n\tcreateVerticalTable(data:any[]){\n\t\tlet str = '<div class=\"table-responsive\"><table class=\"table table-bordered\"><tbody>';\n\t\t\n\t\tdata.forEach(dd=>{\n\t\t\tif(dd.name)\n\t\t\t\tstr += '<tr><th>' + dd.name + '</th><td>' + (dd.type ? this.setOnType(dd) : dd.value) + '</td></tr>';\n\t\t\telse if(dd.button)\n\t\t\t\tstr += '<tr><td colspan=\"2\"><button class=\"btn btn-block btn-secondary\" >' + dd.button + '</button></td></tr>';\n\n\t\t});\n\n\t\treturn str + '</tbody></table></div>';\n\t}\n\n\tcreateHorizontalTable(headers:any[], rows:any[][]){\n\t\tlet str = '<div class=\"table-responsive\"><table class=\"table table-bordered\"><thead><tr>';\n\t\t\n\t\theaders.forEach(hh=>{\n\t\t\tstr += '<th>' + hh + '</th>';\n\t\t});\n\n\t\tstr += '</tr></thead><tbody>';\n\n\t\trows.forEach(rr=>{\n\t\t\tstr += '<tr>';\n\n\t\t\trr.forEach(vv =>{\n\t\t\t\tstr += '<td>' + vv + '</td>';\n\t\t\t});\n\n\t\t\tstr += '</tr>';\n\t\t});\n\n\t\treturn str + '</tbody></table></div>';;\n\t}\n\n\tcreateForm(content, attrs = \"\"){\n\t\treturn '<form ' + attrs + '>' + content + '</form>';;\n\t}\n\n\trepliqueElement(innerELement:HTMLElement, content = null):HTMLElement{\n\t\tif(content)\n\t\t\tinnerELement.innerHTML = content;\n\t\t\n\t\treturn innerELement;\n\t}\n\n\treplicateChildren(idC, idR){\n\t\tlet C = document.getElementById(idC).children;\n\t\tlet R = document.getElementById(idR);\n\t\tR.innerHTML = \"\";\n\n\t\tfor (var i = 0; i < C.length; ++i) {\n\t\t\tR.appendChild(C[i]);\n\t\t}\n\t}\n\n\tsetModalData(title:string = null, content = null){\n\t\tif(title)\n\t\t\tdocument.getElementById('modalTitle').innerHTML = title;\n\n\t\tif(content)\n\t\t\tdocument.getElementById('modalContent').innerHTML = content;\n\t}\n\n\tsetModalElement(title:string, content:HTMLElement){\n\t\tdocument.getElementById('modalContent').innerHTML = '';\n\t\tdocument.getElementById('modalTitle').innerHTML = title;\n\t\tdocument.getElementById('modalContent').appendChild(content);\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { CitiesService } from 'src/app/services/cities.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-request-walker',\n  templateUrl: './request-walker.component.html',\n  styleUrls: ['./request-walker.component.css']\n})\nexport class RequestWalkerComponent implements OnInit {\n\tisSending:boolean;\n\tcities:any[];\n\tform:FormGroup;\n\n  \tconstructor(\n\t\tpublic fb: FormBuilder, \n\t\tprivate citiesS:CitiesService,\n\t\tprivate usersS:UsersService,\n\t\tprivate alert:AlertsService,\n\t\tprivate router:Router\n  \t) {\n\t\t  this.isSending = false;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.citiesS.list().toPromise().then(res => this.cities = res)\n\n\t\tthis.form = this.fb.group({\n\t\t\tnames:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30),\n\t\t\t\tValidators.pattern(\"[A-Za-zÁÉÍÓÚñáéíóúÑ]+\")\n\t\t\t])],\n\t\t\tsurname:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30),\n\t\t\t\tValidators.pattern(\"[A-Za-zÁÉÍÓÚñáéíóúÑ]+\")\n\t\t\t])],\n\t\t\temail:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.email\n\t\t\t])],\n\t\t\tphone:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(10),\n\t\t\t\tValidators.maxLength(10),\n\t\t\t\tValidators.pattern(\"[0-9]+\")\n\t\t\t])],\n\t\t\tcity_id:[1 ,Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\taddress:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tocupation:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tavailability:['',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(3),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tcurriculum:[null, Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tfileSource: [null],\n\t\t\tterms:[true,Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t});\n\t}\n\n\tonSelectCurriculum(target) {\n\t\tconst reader = new FileReader();\n\n\t\tif(target.files && target.files.length) {\n\t\t\tif(this.form.value.curriculum.endsWith(\".doc\") \n\t\t\t|| this.form.value.curriculum.endsWith(\".docx\")\n\t\t\t|| this.form.value.curriculum.endsWith(\".pdf\")){\n\t\t\t\tconst [file] = target.files;\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tthis.form.patchValue({\n\t\t\t\t\t\tfileSource: reader.result\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\tcurriculum: null\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFormValidationError(form:FormGroup){\n\t\tObject.keys(form.controls).forEach(key =>{\n\t\t\tconst controlErrors:ValidationErrors = form.get(key).errors;\n\t\t\tlet name = \"\";\n\n\t\t\tif(key == 'curriculum')\n\t\t\t\tname = \"Hoja de vida\";\n\n\t\t\tif(key == 'terms')\n\t\t\t\tname = \"Terminos y condiciones\";\n\t\t\tif(controlErrors != null){\n\t\t\t\tObject.keys(controlErrors).forEach(keyErr=>{\n\t\t\t\t\tlet warn = \"\";\n\n\t\t\t\t\tif(keyErr == \"required\")\n\t\t\t\t\t\twarn = \"Requerido: \";\n\n\t\t\t\t\tthis.alert.showAlert(\"error\", `${warn}`, `${name}`)\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\ttrySend(){\n\t\tif(this.form.valid){\n\t\t\tthis.isSending = true;\n\t\t\tvar data:User = this.form.value;\n\t\t\tdata.curriculum = data.curriculum.replace('C:\\\\fakepath\\\\','').split(' ').join('')\n\t\t\tdata.req_walker = true;\n\t\t\tthis.alert.showAlert(\"warning\", \"Espera unos segundos por favor. \", \"Enviando solicitud.\")\n\n\t\t\tthis.usersS.doRequestWalker(data).subscribe(res=>{\n\t\t\t\tconsole.log(res)\n\t\t\t\tif(res.ok){\n\t\t\t\t\tthis.isSending = false;\n\t\t\t\t\tthis.alert.showAlert(\"success\", \"Listo: \",\"Te contactarán pronto.\")\n\t\t\t\t\tthis.router.navigate(['/'])\n\t\t\t\t}else{\n\t\t\t\t\tthis.alert.showAlert(\"error\", \"\", res.text)\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t})\n\t\t}else{\n\t\t\tthis.getFormValidationError(this.form)\n\t\t}\n\t}\n}\n","<main class=\"page registration-page\">\n    <section class=\"clean-block clean-form dark\" style=\"padding-top: 50px\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Postulate como paseador</h2>\n            </div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"trySend()\">\n            \t<div class=\"form-group\">\n                    <label for=\"name\">Nombres</label>\n                    <input class=\"form-control item\" type=\"text\" formControlName=\"names\" placeholder=\"Aqui tus nombres\">\n                </div>\n\n                 <div class=\"form-group\">\n                    <label for=\"name\">Apellidos</label>\n                    <input class=\"form-control item\" type=\"text\" formControlName=\"surname\" placeholder=\"Tus apellidos\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input class=\"form-control item\" type=\"email\" formControlName=\"email\" placeholder=\"Tu correo\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"password\">Telefono</label>\n                    <input class=\"form-control item\" type=\"tel\" formControlName=\"phone\" placeholder=\"Si es el de WhatsApp, ¡mucho mejor!\" maxlength=\"10\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"name\">Ocupación</label>\n                    <input class=\"form-control item\" type=\"text\" formControlName=\"ocupation\" placeholder=\"¿A qué te dedicas?\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"name\">Hoja de vida</label>\n                    <input class=\"form-control item\" type=\"file\" formControlName=\"curriculum\" (change)=\"onSelectCurriculum($event.target)\" accept=\".doc,.docx,.pdf\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"city\">Ciudad</label>\n                    <select class=\"form-control item\" type=\"text\" formControlName=\"city_id\">\n                        <option value=\"\">Selecciona una ciudad</option>\n                        <option *ngFor=\"let city of cities\" [value]=\"city.id\">{{ city.name }}</option>\n                    </select>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"email\">Dirección</label>\n                    <input class=\"form-control item\" type=\"text\" formControlName=\"address\" placeholder=\"¿Donde vives?\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"password\">Disponibilidad</label>\n                    <input class=\"form-control item\" type=\"text\" formControlName=\"availability\" placeholder=\"¿En qué horario tienes disponibilidad?\">\n                </div>\n\n                <div class=\"custom-control custom-checkbox\">\n                    <input formControlName=\"terms\" type=\"checkbox\" class=\"custom-control-input\" id=\"terms2\" required>\n                    <label class=\"custom-control-label\" for=\"terms2\">He leido y <strong>acepto</strong> los <a routerLink=\"terms\">Terminos de servicio</a>,<a routerLink=\"terms\">Terminos de uso</a> y la <a routerLink=\"terms\">Política de privacidad</a> de WalkTheDog</label>\n                </div>\n\n                \n                <div *ngIf=\"!isSending\" class=\"btn-group btn-block\">\n                    <button class=\"btn btn-primary-wtd btn-block\" type=\"submit\">Terminar registro</button>\n                </div>\n        \t</form>\n        </div>\n    </section>\n</main>","import { Injectable } from '@angular/core';\nimport Swal from 'sweetalert2'\nimport { SweetAlertIcon } from 'sweetalert2';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AlertsService {\n\tcontainer:HTMLElement;\n\tconstructor() {\n\t\tthis.container = document.getElementById('alert-container');\n\t}\n\n\tshowToast(context:SweetAlertIcon, title:string, content:string, seconds:number = 5){\n\t\tSwal.mixin({\n\t\t\tposition: 'top-end',\n\t\t\tshowConfirmButton:false,\n\t\t\ttimer: seconds * 1000,\n\t\t\ttimerProgressBar: true,\n\t\t\ttoast: true\n\t\t}).fire({\n\t\t\ticon: context,\n\t\t\ttitle,\n\t\t\ttext:content\n\t\t})\n\t}\n\n\tshowAlert(context:SweetAlertIcon, title:string, content:string, seconds:number = 5){\n\t\tSwal.fire({\n\t\t\ticon: context,\n\t\t\ttitle,\n\t\t\ttext:content,\n\t\t\ttimer: seconds * 1000,\n\t\t\ttimerProgressBar: true\n\t\t});\n\t\t/*let alert = this.createAlert(context, title, content);\n\t\tthis.container.appendChild(alert);\n\n\t\tif(seconds){\n\t\t\tsetTimeout(()=>{\n\t\t\t\tif(this.container.contains(alert))\n\t\t\t\t\tthis.container.removeChild(alert);\n\t\t\t}, seconds * 1000);\n\t\t}*/\n\t}\n\n\tshowDBErrorAlert(code = \"\"){\n\t\tlet alert = this.createAlert(\"danger\", \"Error: \", code + \"No se ha podido establecer conexión a la base de datos.\");\n\t\tthis.container.appendChild(alert);\n\n\t\tsetTimeout(()=>{\n\t\t\tif(this.container.contains(alert))\n\t\t\t\tthis.container.removeChild(alert);\n\t\t}, 4000);\n\t}\n\n\tprivate createAlert(context:string, title:string, content:string):HTMLElement{\n\t\tlet alert = document.createElement('div');\n\t\talert.classList.add('alert');\n\t\talert.classList.add('alert-' + context);\n\t\talert.classList.add('alert-dismissible');\n\t\talert.classList.add('fade');\n\t\talert.classList.add('show');\n\t\talert.setAttribute(\"role\",\"alert\");\n\n\t\tlet strong = document.createElement('strong');\n\t\tlet span = document.createElement('span');\n\t\tstrong.innerHTML = title;\n\t\tspan.innerHTML = content;\n\n\t\tlet close = document.createElement('button');\n\t\tclose.classList.add('close');\n\t\tclose.type = \"button\";\n\t\tclose.setAttribute(\"data-dismiss\", \"alert\")\n\t\tclose.setAttribute(\"aria-label\", \"Cerrar\");\n\t\tclose.innerHTML ='<span aria-hidden=\"true\">&times;</span>';\n\n\t\talert.appendChild(strong);\n\t\talert.appendChild(span);\n\t\talert.appendChild(close);\n\n\t\treturn alert;\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { getFormattedDate } from 'src/app/models/utilities';\nimport { ServicesService } from 'src/app/services/services.service';\n\ninterface Res {\n\tok?:boolean\n}\n\n@Component({\n\tselector: 'app-client-history',\n\ttemplateUrl: './client-history.component.html',\n\tstyleUrls: ['./client-history.component.css']\n})\nexport class ClientHistoryComponent implements OnInit {\n\tservices:ServiceRequest[]\n\t\n\tconstructor(private servicesS:ServicesService) { }\n\n\tngOnInit(): void {\n\t\tlet id = Number(localStorage.getItem('id'));\n\t\tthis.servicesS.getFinishedByClientId(id).subscribe(services => this.services = services)\n\t}\n\n\tlistDates(s:ServiceRequest){\n\t\treturn s.dates\n\t\t.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime() )\n\t\t.map(d => getFormattedDate(new Date(d.date + 'T05:00:00')))\n\t\t.join(\", \")\n\t}\n}\n","<div *ngIf=\"services && services.length > 0\">\n\t<h3>Servicios terminados</h3>\n\t<div class=\"table-responsive\">\n\t\t<table class=\"table table-bordered\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Código</th>\n\t\t\t\t\t<th>Paseos</th>\n\t\t\t\t\t<th>Fechas</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t<tr *ngFor=\"let service of services\">\n\t\t\t\t\t<td>WTD{{ service.id }}</td>\n\t\t\t\t\t<td>{{ service.dates.length }}</td>\n\t\t\t\t\t<td>{{ listDates(service) }}</td>\n\t\t\t\t\t<td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../details/', service.id]\">Detalles</a></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n<div *ngIf=\"services && services.length == 0\">\n\t<h3>No tienes servicios terminados</h3>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t}\n}\n","<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n\t<div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t        <h5 class=\"modal-title\" id=\"modalTitle\"></h5>\n\t\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cerrar\">\n\t\t          <span aria-hidden=\"true\">&times;</span>\n\t\t        </button>\n\t\t    </div>\n\t\t    <div id=\"modalContent\" class=\"modal-body\"></div>\n\t\t    <div class=\"modal-footer\">\n\t\t        <button id=\"modalButton\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n\t\t   \t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/models/user';\nimport { UsersService } from 'src/app/services/users.service';\nimport { AlertsService } from 'src/app/services/alerts.service';\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\tuser:User;\n\teditBasic:boolean;\n\teditWalker:boolean;\n\tbasicForm:FormGroup;\n\twalkerForm:FormGroup;\n\tenvironment = environment\n\n\tconstructor(\n\t    private as:AuthService,\n\t    private usersS:UsersService,\n\t\tprivate fb:FormBuilder,\n\t\tprivate alert:AlertsService\n\t) {\n\t\tthis.editBasic = this.editWalker = false;\n\n\t\tthis.basicForm = this.fb.group({\n\t\t\tphone:['', Validators.required],\n\t\t\tocupation:['', Validators.required],\n\t\t\taddress:['', Validators.required]\n\t\t})\n\n\t\tthis.walkerForm = this.fb.group({\n\t\t\tbirthdate:['', Validators.required],\n\t\t\tuniversity:['', Validators.required],\n\t\t\tdescription:['', Validators.required]\n\t\t})\n\t}\n\n\tngOnInit(): void {\n\t\tif(!this.as.isLoggedIn)\n  \t\t\tthis.as.router.navigate(['/']);\n\n  \t\tthis.usersS.getById(Number(localStorage.getItem('id'))).subscribe(user=>{\n\t      \tthis.user = user;\n\t\t  \n\t\t\tthis.basicForm.patchValue({\n\t\t\t\tphone: this.user.phone,\n\t\t\t\tocupation: this.user.ocupation,\n\t\t\t\taddress: this.user.address\n\t\t\t})\n\n\t\t\tif(this.user.role == 'WK' || this.user.role == 'AD')\n\t\t\t\tthis.walkerForm.patchValue({\n\t\t\t\t\tbirthdate: this.user.birthdate,\n\t\t\t\t\tuniversity: this.user.university,\n\t\t\t\t\tdescription: this.user.description\n\t\t\t\t})\n\t    })\n\t}\n\n\tget isLoggedIn(){\n\t\treturn this.as.isLoggedIn;\n\t}\n\n\ttoggleBasicEdit(){\n\t\tthis.editBasic = !this.editBasic;\n\t}\n\n\ttoggleWalkerEdit(){\n\t\tthis.editWalker = !this.editWalker;\n\t}\n\n\tsaveBasic(){\n\t\tif(this.basicForm.valid){\n\t\t\tthis.user.phone = this.basicForm.value.phone;\n\t\t\tthis.user.ocupation = this.basicForm.value.ocupation;\n\t\t\tthis.user.address = this.basicForm.value.address;\n\t\t\tthis.usersS.update(this.user).toPromise().then(res =>{\n\t\t\t\tif(res.ok){\n\t\t\t\t\tthis.alert.showAlert(\"success\", \"Listo!\", \"Has editado tu información.\", 4)\n\t\t\t\t}else{\n\t\t\t\t\tthis.alert.showAlert(\"error\", \"Error\", \"Hubo un error al editar tu información\", 4)\n\t\t\t\t}\n\t\t\t\tthis.toggleBasicEdit()\n\t\t\t})\n\t\t}else{\n\t\t\tthis.alert.showAlert(\"error\", \"Error\", \"Revisa que tus campos esen correctos\", 4)\n\t\t}\n\t}\n\n\tsaveWalker(){\n\t\tif(this.walkerForm.valid){\n\t\t\tthis.user.birthdate = this.walkerForm.value.birthdate;\n\t\t\tthis.user.university = this.walkerForm.value.university;\n\t\t\tthis.user.description = this.walkerForm.value.description;\n\t\t\tthis.usersS.update(this.user).toPromise().then(res =>{\n\t\t\t\tif(res.ok){\n\t\t\t\t\tthis.alert.showAlert(\"success\", \"Listo!\", \"Has editado tu información.\", 4)\n\t\t\t\t}else{\n\t\t\t\t\tthis.alert.showAlert(\"error\", \"Error\", \"Hubo un error al editar tu información\", 4)\n\t\t\t\t}\n\t\t\t\tthis.toggleWalkerEdit()\n\t\t\t})\n\t\t\t\n\t\t}else{\n\t\t\tthis.alert.showAlert(\"error\", \"Error\", \"Revisa que tus campos esen correctos\", 4)\n\t\t}\n\t}\n\n}\n"," <main class=\"page\">\n    <section  class=\"clean-block clean-pricing sect-wtd\" style=\"padding-top: 50px;padding-bottom: 157px\">\n        <div class=\"container\" *ngIf=\"user\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">{{ user.names + ' ' +  user.surname }}</h2>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-4 col-lg-3\">\n                    <div class=\"card clean-card\">\n                        <div class=\"card-body info\">\n                            <img src=\"{{ environment.imagesURL + user.photo }}\" style=\"width: 100%\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-8 col-lg-9\" style=\"margin-bottom: 30px;\">\n                    <div class=\"card clean-card\">\n                        <form (ngSubmit)=\"saveBasic()\" [formGroup]=\"basicForm\">\n                            <div class=\"card-body info\">\n                                <button class=\"btn btn-sm btn-secondary\" type=\"button\" (click)=\"toggleBasicEdit()\">{{ editBasic ? 'Cancelar' :'Editar información' }}</button>\n                                <hr>\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-bordered\">\n                                        <tr>\n                                            <th>Telefono</th>\n                                            <td *ngIf=\"!editBasic\">{{ user.phone }}</td>\n                                            <td *ngIf=\"editBasic\"><input class=\"form-control\" formControlName=\"phone\" type=\"text\"></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th>Ocupación</th>\n                                            <td *ngIf=\"!editBasic\">{{ user.ocupation }}</td>\n                                            <td *ngIf=\"editBasic\"><input class=\"form-control\" formControlName=\"ocupation\" type=\"text\"></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th>Dirección</th>\n                                            <td *ngIf=\"!editBasic\">{{ user.address }}</td>\n                                            <td *ngIf=\"editBasic\"><input class=\"form-control\" formControlName=\"address\" type=\"text\"></td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"editBasic\" class=\"card-footer\">\n                                <button class=\"btn btn-success\" type=\"submit\">Guardar</button>\n                            </div>\n                        </form>\n                    </div>\n                    <hr>\n                     <div class=\"card clean-card\" *ngIf=\"user.iswalker == 1\">\n                        <form (ngSubmit)=\"saveWalker()\" [formGroup]=\"walkerForm\">\n                            <div class=\"card-body info\">\n                                <button class=\"btn btn-sm btn-secondary\" type=\"button\" (click)=\"toggleWalkerEdit()\">{{ editWalker ? 'Cancelar' :'Editar información' }}</button>\n                                <hr>\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-bordered\">\n                                        <tr>\n                                            <th>Fecha de nacimiento</th>\n                                            <td *ngIf=\"!editWalker\">{{ user.birthdate | date:'dd/MM/yyyy' }}</td>\n                                            <td *ngIf=\"editWalker\"><input class=\"form-control\" formControlName=\"birthdate\" type=\"date\"></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th>Universidad</th>\n                                            <td *ngIf=\"!editWalker\">{{ user.university }}</td>\n                                            <td *ngIf=\"editWalker\"><input class=\"form-control\" formControlName=\"university\" type=\"text\"></td>\n                                        </tr>\n\n                                        <tr>\n                                            <th>Descripción</th>\n                                            <td *ngIf=\"!editWalker\">{{ user.description }}</td>\n                                            <td *ngIf=\"editWalker\"><input class=\"form-control\" type=\"text\" formControlName=\"description\"></td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"editWalker\" class=\"card-footer\">\n                                <button class=\"btn btn-success\" type=\"submit\">Guardar</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { City } from '../models/city';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CitiesService {\r\n\tprivate url = \"cities\";\r\n\r\n\tconstructor(public http:HttpClient) {}\r\n\r\n    public insert(city:City){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url, city, environment.httpOptions)\r\n\t}\r\n\r\n    public list(){\r\n        return this.http.get<City[]>(environment.backendURL + this.url);\r\n    }\r\n\r\n\tpublic updatePrices(prices){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/prices/update', prices, environment.httpOptions)\r\n\t}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { environment } from '../environments/environment';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { NavbarModule } from './navbar/navbar.module';\nimport { FooterModule } from './footer/footer.module';\nimport { ModalModule } from './modal/modal.module';\nimport { AlertsModule } from './alerts/alerts.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutUsComponent } from './pages/about-us/about-us.component';\nimport { LoginComponent } from './pages/auth/login/login.component';\nimport { RegistrationComponent } from './pages/auth/registration/registration.component';\nimport { VerifyEmailComponent } from './pages/verify-email/verify-email.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { TestApiComponent } from './pages/test-api/test-api.component';\nimport { StartComponent } from './pages/dashboard/start/start.component';\nimport { ServiceComponent } from './pages/dashboard/services/service/service.component';\nimport { AddPetComponent } from './pages/dashboard/pets/add-pet/add-pet.component';\nimport { ListPetsComponent } from './pages/dashboard/pets/list-pets/list-pets.component';\nimport { ClientHistoryComponent } from './pages/dashboard/services/client-history/client-history.component';\nimport { WalkerHistoryComponent } from './pages/dashboard/services/walker/walker-history/walker-history.component';\nimport { WalkerServiceComponent } from './pages/dashboard/services/walker/walker-service/walker-service.component';\nimport { PaymentComponent } from './pages/payment/payment.component';\nimport { ManageServicesComponent } from './pages/dashboard/services/manage-services/manage-services.component';\nimport { ManageWalkersComponent } from './pages/dashboard/walker/manage-walkers/manage-walkers.component';\nimport { ManageCitiesComponent } from './pages/dashboard/cities/manage-cities/manage-cities.component';\nimport { ActiveServicesComponent } from './pages/dashboard/services/active-services/active-services.component';\nimport { TrackingComponent } from './pages/dashboard/services/tracking/tracking.component';\nimport { BeWalkerComponent } from './pages/dashboard/walker/be-walker/be-walker.component';\nimport { DogProfileComponent } from './pages/dashboard/pets/dog-profile/dog-profile.component';\n\nimport { RequestWalkerComponent } from './pages/request-walker/request-walker.component';\nimport { MonthPlanComponent } from './pages/dashboard/services/service/month-plan-form/month-plan.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { WalkFormComponent } from './pages/dashboard/services/service/walk-form/walk-form.component';\nimport { WalkAbstractComponent } from './pages/dashboard/services/service/walk-abstract/walk-abstract.component';\nimport { PaymentMethodsComponent } from './pages/dashboard/services/service/payment-methods/payment-methods.component';\nimport { PlanEmailPreviewComponent } from './pages/dashboard/services/service/plan-email-preview/plan-email-preview.component';\nimport { ApprovedServicesComponent } from './pages/dashboard/services/manage-services/approved/approved.component';\nimport { InProgressServicesComponent } from './pages/dashboard/services/manage-services/in-progress/in-progress.component';\nimport { FinishedServicesComponent } from './pages/dashboard/services/manage-services/finished/finished.component';\nimport { WaitedServicesComponent } from './pages/dashboard/services/waited-services/waited-services.component';\nimport { ServiceDetailsComponent } from './pages/dashboard/services/service-details/service-details.component';\nimport { ServicesComponent } from './pages/dashboard/services/services.component';\nimport { PetsComponent } from './pages/dashboard/pets/pets.component';\nimport { PaidServicesComponent } from './pages/dashboard/services/manage-services/paid/payment.component';\nimport { ServiceProgressComponent } from './pages/dashboard/services/service-progress/service-progress.component';\nimport { UserDetailsComponent } from './pages/dashboard/users/user-details/user-details.component';\nimport { UsersListComponent } from './pages/dashboard/users/users-list/users-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PricingComponent,\n    AboutUsComponent,\n    LoginComponent,\n    RegistrationComponent,\n    VerifyEmailComponent,\n    DashboardComponent,\n    ProfileComponent,\n    TestApiComponent,\n    StartComponent,\n    ServiceComponent,\n    AddPetComponent,\n    ListPetsComponent,\n    ClientHistoryComponent,\n    WalkerHistoryComponent,\n    WalkerServiceComponent,\n    PaymentComponent,\n    ManageServicesComponent,\n    ManageWalkersComponent,\n    ManageCitiesComponent,\n    ActiveServicesComponent,\n    TrackingComponent,\n    BeWalkerComponent,\n    DogProfileComponent,\n    RequestWalkerComponent,\n    MonthPlanComponent,\n    WalkFormComponent,\n    WalkAbstractComponent,\n    PaymentMethodsComponent,\n    PlanEmailPreviewComponent,\n    ApprovedServicesComponent,\n    InProgressServicesComponent,\n    FinishedServicesComponent,\n    WaitedServicesComponent,\n    ServiceDetailsComponent,\n    ServicesComponent,\n    PetsComponent,\n    PaidServicesComponent,\n    ServiceProgressComponent,\n    UserDetailsComponent,\n    UsersListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    HttpClientModule,\n    NavbarModule,\n    FooterModule,\n    AlertsModule,\n    ModalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from \"@angular/forms\";\nimport { AuthService } from '../../../../services/auth.service';\nimport { RacesService } from '../../../../services/races.service';\nimport { AlertsService } from '../../../../services/alerts.service';\nimport { DogsService } from 'src/app/services/dogs.service';\nimport { Race } from 'src/app/models';\n\n@Component({\n  selector: 'app-add-pet',\n  templateUrl: './add-pet.component.html',\n  styleUrls: ['./add-pet.component.css']\n})\nexport class AddPetComponent implements OnInit {\n\tform:FormGroup;\n\traces:Race[];\n\tdogURL:string;\n\tvaccineURL:string;\n\tparasiteURL:string;\n\n\tconstructor(\n\t\tprivate fb:FormBuilder, \n\t\tprivate dogsS:DogsService,\n\t\tprivate as:AuthService,\n\t\tprivate racesS:RacesService,\n\t\tprivate alert:AlertsService\n\t) {\n\t\tthis.races = [];\n\t}\n\n\tngOnInit(): void {\n\t\tthis.racesS.list().subscribe(races => this.races = races);\n\n\t\tthis.form = this.fb.group({\n\t\t\tname:['Fufi',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(2),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tgender:['M',Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tborndate:['2021-05-07',Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\traceId:[1,Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tsize:['MD',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(2),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tphysicActivity:['Activo',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(2),\n\t\t\t\tValidators.maxLength(30)\n\t\t\t])],\n\t\t\tdescription:['Activo',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(2),\n\t\t\t\tValidators.maxLength(90)\n\t\t\t])],\n\t\t\tbehaviour:['Activo',Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(2),\n\t\t\t\tValidators.maxLength(90)\n\t\t\t])],\n\t\t\tphoto:[null,Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tvaccine:[null,Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\tparasite:[null,Validators.compose([\n\t\t\t\tValidators.required\n\t\t\t])],\n\t\t\townerId:[localStorage.getItem('id')],\n\t\t\tfileSourced: ['', Validators.required],\n\t\t\tfileSourcev: ['', Validators.required],\n\t\t\tfileSourcep: ['', Validators.required]\n\t\t});\n\t}\n\n\tonSelectDog(event) {\n\t\tconst reader = new FileReader();\n\n\t\tif(event.target.files && event.target.files.length) {\n\t\t\tconst [file] = event.target.files;\n\t\t\treader.readAsDataURL(file);\n\t\t\treader.onload = () => {\n\t\t\t\tthis.dogURL = reader.result as string;\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\tfileSourced: reader.result\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t}\n\n\tonSelectVaccine(event) {\n\t\tconst reader = new FileReader();\n\n\t\tif(event.target.files && event.target.files.length) {\n\t\t\tconst [file] = event.target.files;\n\t\t\treader.readAsDataURL(file);\n\t\t\treader.onload = () => {\n\t\t\t\tthis.vaccineURL = reader.result as string;\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\tfileSourcev: reader.result\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t}\n\n\tonSelectParasite(event) {\n\t\tconst reader = new FileReader();\n\n\t\tif(event.target.files && event.target.files.length) {\n\t\t\tconst [file] = event.target.files;\n\t\t\treader.readAsDataURL(file);\n\t\t\treader.onload = () => {\n\t\t\t\tthis.parasiteURL = reader.result as string;\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\tfileSourcep: reader.result\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t}\n\n\tgetFormValidationError(form:FormGroup){\n\t\tObject.keys(form.controls).forEach(key =>{\n\t\t\tconst controlErrors:ValidationErrors = form.get(key).errors;\n\n\t\t\tif(controlErrors != null){\n\t\t\t\tObject.keys(controlErrors).forEach(keyErr=>{\n\t\t\t\t\tconsole.log(key + ' ' + keyErr);\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\taddRace(){\n\t\tthis.alert.showAlert(\"question\", \"Añadir raza\", \"Digita la raza que quieres añadir.\", 3)\n\t}\n\n\ttryInsertDog(){\n\t\tif(this.form.valid){\n\t\t\tthis.dogsS.insert(this.form.value).subscribe(res =>{\n\t\t\t\tif(res.update.ok){\n\t\t\t\t\tthis.alert.showAlert(\"success\", \"Listo!\", \"Se ha agregado un perrito.\", 4)\n\t\t\t\t\tthis.as.router.navigate(['dashboard/pets'])\n\t\t\t\t}else{\n\t\t\t\t\tthis.alert.showAlert(\"error\", \"Error\", \"Hubo un error en el servidor, intentalo más tarde.\", 4)\n\t\t\t\t\tthis.as.router.navigate(['dashboard/pets'])\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t})\n\t\t}else{\n\t\t\tthis.alert.showAlert(\"error\", \"Error\", \"Revisa que todo esté correctamente digitado.\", 4)\n\t\t\tthis.getFormValidationError(this.form);\n\t\t}\n\t\t\n\t}\n}\n","<h1>\n    Agregar mascota\n</h1>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"tryInsertDog()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col-lg-6 col-md-12\">\n            <label>Nombre</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"El nombre de tu perrito\">\n        </div>\n\n        <div class=\"form-group col-lg-3 col-sm-6\">\n            <label>Género</label>\n            <select class=\"form-control\" formControlName=\"gender\">\n                <option value=\"\">Selecciona uno...</option>\n                <option value=\"H\">Hembra</option>\n                <option value=\"M\">Macho</option>\n            </select>\n        </div>\n\n         <div class=\"form-group col-lg-3 col-sm-6\">\n            <label>Fecha de nacimiento</label>\n            <input class=\"form-control\" type=\"date\" formControlName=\"borndate\">\n        </div>\n\n        <div class=\"form-group col-lg-3 col-sm-6\">\n            <label>Raza</label>\n            <!--input type=\"text\" formControlName=\"race\" placeholder=\"La raza de tu perrito\"-->\n            <select formControlName=\"raceId\" class=\"form-control\">\n                <option *ngFor=\"let race of races\" value=\"race.id\">{{ race.name }}</option>\n            </select>\n        </div>\n\n        <div class=\"form-group col-lg-3 col-sm-6\">\n            <label>Tamaño</label>\n            <select class=\"form-control\" formControlName=\"size\">\n                <option value=\"\">Selecciona uno...</option>\n                <option value=\"SM\">Pequeño</option>\n                <option value=\"MD\">Medio</option>\n                <option value=\"LG\">Grande</option>\n                <option value=\"XL\">Gigante</option>\n            </select>\n        </div>\n\n        <div class=\"form-group col-md-6\">\n            <label>Actividad física</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"physicActivity\" placeholder=\"Detalla su actividad fisica\">\n        </div>\n\n        <div class=\"form-group col-lg-6\">\n            <label>Descripción</label>\n            <textarea class=\"form-control\" formControlName=\"description\" placeholder=\"Describe lo mejor que puedas a tu perrito\"></textarea>\n        </div>\n\n        <div class=\"form-group col-lg-6\">\n            <label>Comportamiento</label>\n             <textarea class=\"form-control\" formControlName=\"behaviour\" placeholder=\"¿Cuáles comportamientos tiene tu perrito?\"></textarea>\n        </div>\n\n        <div class=\"form-group col-lg-4 col-md-6\">\n            <label>Foto</label>\n            <img [src]=\"dogURL\" *ngIf=\"dogURL\" style=\"width:100%\">\n            <input type=\"file\" formControlName=\"photo\" class=\"form-control\" (change)=\"onSelectDog($event)\">\n        </div>\n\n         <div class=\"form-group col-md-6 col-lg-4\">\n            <label>Carnet de vacunación</label>\n            <img [src]=\"vaccineURL\" *ngIf=\"vaccineURL\" style=\"width:100%\">\n            <input type=\"file\" formControlName=\"vaccine\" class=\"form-control\" (change)=\"onSelectVaccine($event)\">\n        </div>\n\n        <div class=\"form-group col-lg-4 col-md-6\">\n            <label>Control de desparasitante</label>\n            <img [src]=\"parasiteURL\" *ngIf=\"parasiteURL\" style=\"width:100%\">\n            <input type=\"file\" formControlName=\"parasite\" class=\"form-control\" (change)=\"onSelectParasite($event)\">\n        </div>\n    </div>\n    \n\n   \n\n    <button class=\"btn btn-primary-wtd\">Registrar mascota</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.css']\n})\nexport class AlertsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert-container\" id=\"alert-container\"></div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-email-preview',\n  templateUrl: './plan-email-preview.component.html',\n  styleUrls: ['./plan-email-preview.component.css']\n})\nexport class PlanEmailPreviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>plan-email-preview works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <footer class=\"page-footer dark\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-sm-2\">\n                <img src=\"assets/img/logo.png\" style=\"width: 50%; align-self: center;\">\n            </div>\n            <div class=\"col-sm-2\">\n                <h5>Nosotros</h5>\n                <ul>\n                    <li><a routerLink=\"contact-us\" hidden>Contacto</a></li>\n                    <li><a routerLink=\"about-us\">Sobre nosotros</a></li>\n                    <li><a routerLink=\"about-us\" hidden>Ayuda</a></li>\n                    <li><a routerLink=\"about-us\" hidden>Preguntas frecuentes</a></li>\n                    <li><a routerLink=\"about-us\" hidden>Mapas</a></li>\n                    <li><a routerLink=\"request-walker\">Trabaja con nosotros</a></li>\n                </ul>\n            </div>\n            <div class=\"col-sm-2\" hidden>\n                <h5>Decarga la App</h5>\n                <ul>\n                    <li><a routerLink=\"#\">Pronto</a></li>\n                </ul>\n            </div>\n            <div class=\"col-sm-2\" hidden>\n                <h5>Portales</h5>\n                <ul>\n                    <li><a routerLink=\"#\">Blog</a></li>\n                </ul>\n            </div>\n            <div class=\"col-sm-2\">\n                <h5>Redes</h5>\n                <ul>\n                    <li><a href=\"https://www.instagram.com/walkthedogoficial/?hl=es-la\" target=\"_blank\">Instagram</a></li>\n                    <li><a href=\"https://www.facebook.com/walkthedogoficial\" target=\"_blank\">Facebook</a></li>\n                </ul>\n            </div>\n\n            <div class=\"col-sm-2\">\n                <h5>Medios de pago</h5>\n                <ul>\n                    <li><a routerLink=\"#\">Nequi</a></li>\n                    <li><a routerLink=\"#\">Daviplata</a></li>\n                    <li><a routerLink=\"#\">ePayco</a></li>\n                </ul>\n            </div>\n            <div class=\"col-sm-12 text-center\">\n                <div class=\"container\" style=\"border-width: 1px; border-color: orange; border-top: solid;\">\n                    <a routerLink=\"#\" style=\"margin-right: 10px;\">Términos de servicio</a>\n                    <a routerLink=\"#\" style=\"margin-right: 10px;\">Términos de uso</a>\n                    <a routerLink=\"#\">Política de privacidad</a> \n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"footer-copyright\">\n        <p>© 2021 Copyright WalkTheDog. Designed and programmed by FelipeSpirit</p>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { AlertsService } from '../../../../services/alerts.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n\tselector: 'app-be-walker',\n\ttemplateUrl: './be-walker.component.html',\n\tstyleUrls: ['./be-walker.component.css']\n})\nexport class BeWalkerComponent implements OnInit {\n\tuser;\n\tpForm:FormGroup;\n\tcarnetURL;\n\n\tconstructor(\n\t\tprivate usersS:UsersService,\n\t\tprivate fb:FormBuilder,\n\t\tprivate alert:AlertsService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.usersS.getById(Number(localStorage.getItem('id'))).toPromise().then(user=>{\n\t\t\tthis.user = user;\n\n\t\t\tif(this.user.university_carnet)\n\t\t\t\tthis.carnetURL = '/api-wtd/images/upload/' + this.user.university_carnet + '.png';\n\t\t\t\n\t\t\tthis.pForm = this.fb.group({\n\t\t\t\tphoto:[null,Validators.compose([\n\t\t\t\t\tValidators.required\n\t\t\t\t])],\n\t\t\t\tfileSource: ['', Validators.required],\n\t\t\t\tname:[''],\n\t\t\t\tdescription:[this.user.description, Validators.compose([\n\t\t\t\t\tValidators.required,\n\t\t\t\t\tValidators.maxLength(100)\n\t\t\t\t])],\n\t\t\t\tbdate:[this.user.birthdate, Validators.compose([\n\t\t\t\t\tValidators.required\n\t\t\t\t])],\n\t\t\t\tuniversity:[this.user.university, Validators.compose([\n\t\t\t\t\tValidators.required\n\t\t\t\t])],\n\t\t\t})\n\t\t});\n\t}\n\n\treqWalker(){\n\t\ttype image ={name:string};\n\t\tif(this.pForm.valid){\n\t\t\tthis.user.description = this.pForm.value.description;\n\t\t\tthis.user.birthdate = this.pForm.value.bdate;\n\t\t\tthis.user.university = this.pForm.value.university;\n\t\t\tthis.user.req_walker = 1;\n\n\t\t\t/*this.api.uploadImage(this.pForm).toPromise().then(im =>{\n\t\t\t\tthis.user.university_carnet = (im as image).name;\n\n\t\t\t\tthis.usersS.insert(this.user).toPromise().then(rU=>{\n\t\t\t\t\tif((rU as any).ok)\n\t\t\t\t\t\tthis.alert.showAlert('success', 'Listo! ', \"Tu solicitud fue enviada.\", 3);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.alert.showAlert('error', 'Error: ', \"No se pusdo conectar ala base de datos, intenta más tarde.\",4);\n\t\t\t\t});\n\t\t\t})*/\n\n\t\t}else{\n\t\t\tthis.alert.showAlert('warning', 'Faltan datos: ', \"Revisa los datos que ingresaste.\", 4);\n\t\t}\n\t}\n\n\tonSelectCarnet(event){\n\t\tconst reader = new FileReader();\n\n\t\tif(event.target.files && event.target.files.length) {\n\t\t\tconst [file] = event.target.files;\n\t\t\treader.readAsDataURL(file);\n\t\t\treader.onload = () => {\n\t\t\t\tthis.carnetURL = reader.result as string;\n\t\t\t\tthis.pForm.patchValue({\n\t\t\t\t\tfileSource: reader.result\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t}\n}\n","<div *ngIf=\"user && user.req_walker == 0\">\n\t<h3>Ser paseador</h3>\n\t<p>Para postularte como paseador, por favor completa estos datos extra, son necesarios para tu acceso como paseador</p>\n\t<form (ngSubmit)=\"reqWalker()\" [formGroup]=\"pForm\" novalidate=\"false\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-6\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label>Fecha de nacimiento</label>\n\t\t\t\t\t<input class=\"form-control\" type=\"date\" formControlName=\"bdate\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label>Descripción</label>\n\t\t\t\t\t<textarea formControlName=\"description\" class=\"form-control\" placeholder=\"Describete como paseador\"></textarea>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label>Universidad</label>\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" formControlName=\"university\"  placeholder=\"¿En dónde estudias?\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label>Carnet de universidad</label>\n\t\t\t\t\t<img *ngIf=\"carnetURL\" [src]=\"carnetURL\" style=\"width: 100%\">\n\t\t\t\t\t<input formControlName=\"photo\" type=\"file\" class=\"form-control\" (change)=\"onSelectCarnet($event)\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<button class=\"btn btn-primary btn-block\">Quiero ser paseador</button>\n\t</form>\n</div>\n<div *ngIf=\"user && user.req_walker == 1 && user.iswalker == 0\">\n\t<h3>Ya estas en cola para ser paseador</h3>\n\t<p>Por favor, se paciente, estan revisando tu solicitud</p>\n</div>\n\n<div *ngIf=\"user && user.req_walker == 1 && user.iswalker == 1\">\n\t<h3>Ya eres paseador</h3>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModalComponent } from './modal.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports:[ModalComponent]\r\n})\r\nexport class ModalModule { }\r\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WalkService } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { WalksService } from 'src/app/services/walks.service';\n\n@Component({\n  selector: 'app-service-progress',\n  templateUrl: './service-progress.component.html',\n  styleUrls: ['./service-progress.component.css']\n})\nexport class ServiceProgressComponent implements OnInit {\n  showedMenu: number;\n  date: WalkService;\n\n  formImage: FormGroup;\n  walkURL: string;\n\n  isTracking: boolean = false;\n  watcher: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router:Router,\n    private fb: FormBuilder,\n    private walksS: WalksService,\n    private servicesS: ServicesService,\n    private alert: AlertsService,\n    private location:Location\n  ) {\n    this.showedMenu = Number(localStorage.getItem('showedMenu'))\n    this.walksS.get(Number(this.route.snapshot.params.ID)).subscribe(date => this.date = date)\n    this.formImage = this.fb.group({\n      photo: [null, Validators.compose([\n        Validators.required\n      ])],\n      fileSource: ['', Validators.required],\n      name: ['']\n    })\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  saveStartTime() {\n    let date = this.date\n    date.real_start_time = (document.getElementById('sWTime') as HTMLInputElement).value;\n\n    this.servicesS.updateDate(date).subscribe(res => {\n      if (res.ok) {\n        this.date.real_final_time = date.real_final_time\n        this.alert.showToast(\"success\", \"Hora de inicio \", \"Se ha registrado la hora de tu llegada.\", 4)\n      }\n    });\n  }\n\n  saveFinalTime() {\n    let date = this.date\n    date.real_final_time = (document.getElementById('fWTime') as HTMLInputElement).value;\n\n    this.servicesS.updateDate(date).subscribe(res => {\n      if (res.ok) {\n        this.date.real_final_time = date.real_final_time\n        this.alert.showToast(\"success\", \"Hora final \", \"Se ha registrado la hora de tu entrega.\", 4)\n      }\n    });\n  }\n\n  saveDescription() {\n    let date = this.date\n    date.description = (document.getElementById('WDescription') as HTMLInputElement).value;\n\n    this.servicesS.updateDate(this.date).subscribe(res => {\n      if (res.ok) {\n        this.date.description = date.description\n        this.alert.showToast(\"success\", \"Descripción \", \"Se ha registrado tu descripción del paseo.\", 4)\n      }\n    });\n  }\n\n  saveImages() {\n    this.formImage.patchValue({\n      name: 'photo' + this.date.id + '-walk'\n    });\n\n    this.servicesS.uploadDateImage(this.formImage.value).subscribe(resI => {\n      let date = this.date\n      date.photo = resI.name;\n\n      this.servicesS.updateDate(date).subscribe(res => {\n        if (res.ok) {\n          this.date.photo = date.photo\n          this.alert.showToast(\"success\", \"Foto \", \"Se ha guardado tu foto del paseo.\", 4)\n        }\n      });\n    })\n  }\n\n  onSelectWalk(event) {\n    const reader = new FileReader();\n\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.walkURL = reader.result as string;\n        this.formImage.patchValue({\n          fileSource: reader.result\n        });\n      };\n    }\n  }\n\n  trackMe(dateId) {\n    if (navigator.geolocation) {\n      this.isTracking = true;\n      this.watcher = navigator.geolocation.watchPosition((position) => {\n        this.servicesS.insertPosition({\n          id: dateId,\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          tstamp: position.timestamp\n        }).subscribe(res => {\n          console.log(res);\n        });\n      });\n    } else {\n      alert(\"Tu navegador no soporta Geolocalizacón.\");\n    }\n  }\n\n  stopTrack() {\n    this.isTracking = false;\n    navigator.geolocation.clearWatch(this.watcher);\n  }\n\n  finishDate() {\n    if (this.date.real_start_time && this.date.real_final_time\n      && this.date.description&& this.date.photo) {\n      let date =  this.date\n      date.status = 'fh';\n\n      this.servicesS.updateDate(date).subscribe(res => {\n        if (res.ok){\n          this.alert.showToast(\"success\", \"Final del paseo \", \"Gracias por cumplir tu deber.\", 4)\n          this.router.navigate(['/dashboard/services/details', this.date.service_id])\n        }\n      });\n    } else {\n      this.alert.showToast(\"warning\", \"Datos \", \"Revisa los campos, deben estar llenos todos.\", 4)\n    }\n  }\n\n  goBack() {\n    this.location.back()\n  }\n\n  collectedDogs(){\n\t\tlet date = this.date\n    date.collected = true;\n\t\t\n\t\tthis.servicesS.updateDate(date).subscribe((res:any)=>{\n\t\t\tif(res.ok){\n        this.date.collected = date.collected\n\t\t\t\tthis.alert.showToast(\"success\",\"Perritos recogidos \",\"Ya se llevan de paseo a tus perros.\",4)\n      }\n\t\t});\n\t}\n  deliveredDogs(){\n    let date = this.date\n    date.delivered = true;\n\t\t\n\t\tthis.servicesS.updateDate(date).subscribe(res => {\n\t\t\tif(res.ok){\n        this.date.delivered = date.delivered\n        this.alert.showToast(\"success\",\"Perritos devueltos \",\"Regresaron tus perros.\",4)\n      }\n\t\t});\n\t}\n\n  saveScore(){\n    let date = this.date\n\t\tdate.score = (document.getElementById('scoreI') as any).value;\n\t\tdate.comment = (document.getElementById('scoreC') as any).value;\n\t\tdate.status = 'end';\n\t\t\n\t\tthis.servicesS.updateDate(date).subscribe(res => {\n\t\t\tif(res.ok){\n        this.date = date\n        this.alert.showToast(\"success\",\"Calificación \",\"Gracias por tu aporte\",4)\n      }\n\t\t});\n\t}\n}\n","<div *ngIf=\"date\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-lg-2\">\n                <button class=\"btn btn-sm btn-primary-wtd\" (click)=\"goBack()\">Regresar</button>\n            </div>\n            <div class=\"col-lg-10\">\n                <h3>Resumen del paseo P{{ date.id }} </h3>\n            </div>\n        </div>\n        <table class=\"table table-bordered\">\n            <tbody>\n                <tr *ngIf=\"date.dogs\">\n                    <th>Perros</th>\n                    <td><label *ngFor=\"let dog of date.dogs;let i = index\">{{ (i != 0 ? ',' : '') + dog.name }} </label> </td>\n                </tr>\n\n                <tr *ngIf=\"showedMenu == 1 && date.status != 'fh'\">\n                    <th>GPS</th>\n                    <td>\n                        <button *ngIf=\"!isTracking\" class=\"btn btn-secondary btn-sm\" (click)=\"trackMe(date.id)\">Activar</button>\n\n                        <button *ngIf=\"isTracking\" class=\"btn btn-secondary btn-sm\" (click)=\"stopTrack(date.id)\">Detener</button>\n                    </td>\n                </tr>\n\n                <tr *ngIf=\"showedMenu == 0\">\n                    <th>Paseador</th>\n                    <td>\n                        <a [routerLink]=\"['../../../walkers', date.walker_id]\" class=\"btn btn-sm btn-primary-wtd\">\n                            {{ date.walker.names + ' ' + date.walker.surname  }}\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <div *ngIf=\"showedMenu == 1\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-{{ date.status == 'fh' ? 6 : 12 }}\">\n                <label>Hora de inicio</label>\n\n                <div class=\"input-group\">\n                    <input id=\"sWTime\" type=\"time\" class=\"form-control\" [value]=\"date.real_start_time\" [disabled]=\"date.status == 'fh'\">\n                    <button *ngIf=\"date.status != 'fh'\" class=\"btn btn-secondary\" (click)=\"saveStartTime()\">Guardar</button>\n                </div>\n            </div>\n\n            <div *ngIf=\"date.real_start_time\" class=\"form-group col-md-{{ date.status == 'fh' ? 6 : 12 }}\">\n                <label>Hora final</label>\n                \n                <div class=\"input-group\">\n                    <input id=\"fWTime\" type=\"time\" class=\"form-control\" [value]=\"date.real_final_time\" [disabled]=\"date.status == 'fh'\">\n                    <button *ngIf=\"date.status != 'fh'\" (click)=\"saveFinalTime()\" class=\"btn btn-secondary\">Guardar</button>\n                </div>\n            </div>\n        </div>\n        <div  class=\"row\" *ngIf=\"date.real_start_time\">\n            <div class=\"form-group col-md-12 col-lg-6\">\n                <label>Descripción del {{ date.type == 'WK' ? 'paseo' : 'cuidado' }}</label>\n                \n                <textarea id=\"WDescription\" placeholder=\"Describe el {{ date.type == 'WK' ? 'paseo' : 'cuidado' }}\" class=\"form-control\" maxlength=\"100\" [value]=\"date.description\" [disabled]=\"date.status == 'fh'\"></textarea>\n                <button *ngIf=\"date.status != 'fh'\" (click)=\"saveDescription()\" class=\"btn btn-secondary btn-block\">Guardar</button>\n            </div>\n\n            <div class=\"form-group col-md-12 col-lg-6\">\n                <label>Foto del paseo</label>\n                <img [src]=\"walkURL\" *ngIf=\"walkURL\" style=\"width:100%\">\n                <form [formGroup]=\"formImage\" (ngSubmit)=\"saveImages()\">\n                    <div class=\"input-group\">\n                        <input *ngIf=\"date.status != 'fh'\" formControlName=\"photo\" type=\"file\" class=\"form-control\" (change)=\"onSelectWalk($event)\">\n                        <button *ngIf=\"date.status != 'fh'\" class=\"btn btn-secondary\">Guardar</button>\n                    </div>\n                </form>\n            </div>\n\n            <button *ngIf=\"date.status != 'fh'\" (click)=\"finishDate()\" class=\"btn btn-secondary btn-block\">Finalizar</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"showedMenu == 0\">\n        <div class=\"table-responsive\" *ngIf=\"date.status != 'fh' && !date.delivered\">\n\t\t\t<table class=\"table table-bordered\">\n\t\t\t\t<tbody>\n                    <tr>\n\t\t\t\t\t\t<th>Rastreo</th>\n\t\t\t\t\t\t<td><a class=\"btn btn-sm btn-secondary\" routerLink=\"/dashboard/services/tracking\" [queryParams]=\"{id: date.id}\">Ver</a></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Los perros ya fueron recogidos</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button *ngIf=\"!date.collected\" class=\"btn btn-sm btn-secondary\" (click)=\"collectedDogs()\">Recogidos</button>\n\t\t\t\t\t\t\t<span *ngIf=\"date.collected\">Si</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\n\t\t\t\t\t<tr *ngIf=\"date.collected\">\n\t\t\t\t\t\t<th>Los perros ya fueron entregados</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button *ngIf=\"!date.delivered\" class=\"btn btn-sm btn-secondary\" (click)=\"deliveredDogs()\">Entregados</button>\n\t\t\t\t\t\t\t<span *ngIf=\"date.delivered\">Si</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n        <div *ngIf=\"date.status == 'fh' && date.delivered\">\n            <hr>\n            <h3>Por favor deja tu calificación sobre este paseo y deja un comentario.</h3>\n            <div class=\"form-group\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<label class=\"float-left\">0</label><label class=\"float-right\">5</label><br>\n\t\t\t\t\t<input id=\"scoreI\" type=\"range\" min=\"0\" max=\"5\" [value]=\"date.score\" class=\"col-12\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<label>Comentario</label>\n\t\t\t\t\t<textarea id=\"scoreC\" class=\"form-control\" placeholder=\"Deja un comentario\">{{date.comment}}</textarea>\n\t\t\t\t</div>\n\t\t\t</div>\n            <button class=\"btn btn-secondary\" (click)=\"saveScore()\">Guardar</button>\n            <hr>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label>Hora de inicio</label>\n                <div class=\"text-dark\">{{ date.real_start_time ? date.real_start_time : 'Aún no ha sido ingresada' }}</div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n                <label>Hora final</label>\n                <div class=\"text-dark\">{{ date.real_final_time ? date.real_final_time : 'Aún no ha sido ingresada' }}</div>\n            </div>\n\n            <div class=\"form-group col-md-12 col-lg-6\">\n                <label>Descripción del {{ date.type == 'WK' ? 'paseo' : 'cuidado' }}</label>\n                <p class=\"text-dark\">{{ date.description ? date.description : 'Sin descripción aún' }}</p>\n            </div>\n\n            <div class=\"form-group col-md-12 col-lg-6\">\n                <label>Foto del paseo</label>\n                <img [src]=\"walkURL\" *ngIf=\"walkURL\" style=\"width:100%\">\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <main class=\"page\">\n    <section id=\"pricing\" class=\"clean-block clean-pricing sect-wtd\" style=\"padding-top: 50px;padding-bottom: 157px\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">Verifica tu correo</h2>\n            </div>\n\n            <div class=\"row justify-content-center\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"card clean-card text-center\">\n                        <div class=\"card-body info\">\n                            <h1>!Dirigete a tu correo para comenzar a utilizar <strong>WalkTheDog</strong>!</h1>\n                            <img src=\"assets/img/logo.png\" style=\"width: 100%;\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { UsersService } from '../services/users.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\tusername:string;\n\n\tconstructor(private as:AuthService, private usersS:UsersService) {\n\t\tif(this.as.isLoggedIn)\n\t\t\tthis.usersS.getById(Number(localStorage.getItem('id')))\n\t\t\t.subscribe(user => this.username = user.names)\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tget isLoggedIn(){\n\t\treturn this.as.isLoggedIn;\n\t}\n\n\tget getUser(){\n\t\treturn this.as.isLoggedIn ? JSON.parse(localStorage.getItem('userDB')) : null;\n\t}\n\n\ttryLogOut(){\n\t\tthis.as.doLogOut().then(() => {\n\t\t\tlocalStorage.removeItem('showedMenu')\n\t\t\tlocalStorage.removeItem('userDB');\n      \t\tlocalStorage.removeItem('user');\n      \t\tlocalStorage.removeItem('id');\n      \t\tthis.as.router.navigate(['/']);\n    \t});\n\t}\n}\n","<nav class=\"navbar fixed-top navbar-light bg-white clean-navbar\">\n    <div class=\"container\">\n        <a class=\"navbar-brand logo\" routerLink=\"/\">\n            <img src=\"assets/img/logo.png\" style=\"width: 75px; margin-top: -1.1rem; margin-bottom: -1.1rem\">\n        </a>\n\n        <div *ngIf=\"isLoggedIn\" class=\"btn-group\" role=\"group\">\n            <div class=\"dropdown\">\n                <button class=\"btn btn-primary-wtd dropdown-toggle\" type=\"button\" id=\"userDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">{{ username }}\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"userDropdown\">\n                    <a class=\"dropdown-item\" routerLink=\"dashboard\">\n                        <i class=\"fa fa-tachometer\" aria-hidden=\"true\"></i> \n                        Dashboard\n                    </a>\n                    <a class=\"dropdown-item\" routerLink=\"profile\">\n                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i> \n                        Perfil\n                    </a>\n                    <a class=\"dropdown-item\" (click)=\"tryLogOut()\">\n                        <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i> \n                        Cerrar sesión\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"!isLoggedIn\" class=\"btn-group\" role=\"group\">\n            <a class=\"btn btn-primary-wtd\" routerLink=\"login\">Iniciar sesión</a>\n            <a class=\"btn btn-outline-primary-wtd\" routerLink=\"registration\" [queryParams]=\"{u:'u'}\">Registro</a>\n        </div>\n\n         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsingNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        \n        <div class=\"navbar-collapse collapse\" id=\"collapsingNavbar\" style=\"margin-top: 10px\">\n            <div>\n                <ul class=\"nav navbar-nav ml-auto text-right\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" routerLink=\"/\" style=\"font-size: 15px\">\n                            <i class=\"fa fa-home\" aria-hidden=\"true\"></i> \n                            Inicio\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"pricing\" style=\"font-size: 15px\" hidden>Precios</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"about-us\" style=\"font-size: 15px\">\n                            <i class=\"fa fa-info\" aria-hidden=\"true\"></i> \n                            ¿Quienes somos?\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"pricing\" style=\"font-size: 15px\" hidden>Nuestro blog</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-primary-wtd\" routerLink=\"request-walker\" style=\"font-size: 15px\">\n                            <i class=\"fa fa-briefcase\" aria-hidden=\"true\"></i> \n                            Trabaja con nosotros\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"\" style=\"color: #1DB954; font-size: 15px\">\n                            <i class=\"fa fa-spotify\" aria-hidden=\"true\"></i> Playlist Spotify\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"\" style=\"color: #fc3c44 ; font-size: 15px\">\n                            <i class=\"fa fa-music\"></i> Playlist Apple Music\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <main class=\"page\">\n    <section id=\"pricing\" class=\"clean-block clean-pricing sect-wtd\" style=\"padding-top: 50px;padding-bottom: 157px\">\n        <div class=\"container\">\n            <div class=\"block-heading\">\n                <h2 class=\"text-primary-wtd\">¿Quienes somos?</h2>\n            </div>\n\n            <div class=\"row justify-content-center\">\n                <div class=\"col-sm-6 col-lg-6\">\n                    <div class=\"card clean-card text-center\">\n                        <div class=\"card-body info\">\n                            <h4 class=\"card-title\">Misión</h4>\n                            <p class=\"card-text\">Proporcionar un servicio integral y premium de paseos caninos , donde nuestros paseadores ofrecen la mejor atención a la mascota como a las necesidades que el cliente requiera.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-6 col-lg-6\" style=\"margin-bottom: 30px;\">\n                    <div class=\"card clean-card text-center\">\n                        <div class=\"card-body info\">\n                            <h4 class=\"card-title\">Visión</h4>\n                            <p class=\"card-text\">Para 2023 ser la empresa líder en paseos caninos en las principales ciudades del país, brindando oportunidades laborales como a la vez otorgar un servicio de calidad a todos nuestros clientes.</p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"card clean-card text-center\">\n                        <div class=\"card-body info\">\n                            <h4 class=\"card-title\">Nuestra historia</h4>\n                            <p class=\"card-text\">Walk The Dog, se presenta como la solución a aquellos amos que por cuestiones laborales, estudiantiles o entre otras se les dificulta darle el paseo que sus mascotas requieren.También, nuestra empresa nace de la necesidad de ofrecer el servicio de paseos caninos a aquellas mascotas que requieren de una alta actividad física. En cuanto a nuestros paseadores, nos ofrecemos ser la primera alternativa laboral para aquellos estudiantes universitarios que deseen generar un ingreso económico, mientras que a la vez se ejercitan y le brindan un paseo relajante a la mascota.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from \"@angular/router\";\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private userData: any;\n\n\tconstructor(public afAuth: AngularFireAuth,public router: Router) {\n    this.afAuth.authState.subscribe(user =>{\n     if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n      } else {\n        localStorage.setItem('user', null);\n      }\n    });\n  }\n\n\tdoRegister(user){\n    return this.afAuth.createUserWithEmailAndPassword(user.email, user.password);\n  }\n\n  doLogin(email, password){\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  get isEmailVerified(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user.emailVerified !== false) ? true : false;\n  }\n\n\tasync sendVerificationMail() {\n\t\treturn (await this.afAuth.currentUser).sendEmailVerification();\n  }\n\n  async updateUser(name){\n    return (await this.afAuth.currentUser).updateProfile({\n      displayName: name\n    });\n  }\n\n  doLogOut() {\n    return this.afAuth.signOut();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { ServicesService } from 'src/app/services/services.service';\n\n@Component({\n  selector: 'app-finished',\n  templateUrl: './finished.component.html',\n  styleUrls: ['./finished.component.css']\n})\nexport class FinishedServicesComponent implements OnInit {\n  services:ServiceRequest[];\n  servicesFilter:ServiceRequest[];\n\n  constructor(private servicesS:ServicesService) {\n    this.servicesS.getFinished().subscribe(services => this.services = this.servicesFilter = services)\n  }\n\n  ngOnInit(): void {\n  }\n\n  searchServices(e){\n\t\tlet s = e.target.value.toUpperCase();\n\t\t\n\t\tthis.servicesFilter = this.services.filter(u => (\"WTD\" + u.id).includes(s));\n\t}\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h3>Finalizados</h3>\n        <input *ngIf=\"services && services.length > 0\" type=\"text\" placeholder=\"Buscar...\" class=\"form-control\" (keyup)=\"searchServices($event)\" >\n    </div>\n    <div *ngIf=\"servicesFilter && servicesFilter.length > 0\" class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Código</th>\n                        <th>Cliente</th>\n                        <th>Valor</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor=\"let walk of servicesFilter\">\n                        <td>WTD{{ walk.id }}</td>\n                        <td>{{walk.names + ' ' + walk.surname }}</td>\n                        <td>{{ walk.total }}</td>\n                        <td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../../details', walk.id]\">Detalles</a></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div *ngIf=\"!servicesFilter || servicesFilter.length == 0\" class=\"card-body\">\n        No hay servicios finalizados\n    </div>\n</div>","export function getFormattedCurrentDate(days:number = 0){\r\n    let d = new Date()\r\n    d.setDate(d.getDate() + days)\r\n    return d.toISOString().split('T')[0]\r\n}\r\n\r\nexport function getFormattedDate(date:Date){\r\n    return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\r\n}","import { Injectable } from '@angular/core';\r\nimport { Dog } from '../models';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class DogsService {\r\n\tprivate url = \"dogs\";\r\n\r\n\tconstructor(public http:HttpClient) {}\r\n\r\n    public insert(dog:Dog){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url, dog, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic update(dog:Dog){\r\n\t\treturn this.http.post<any>(environment.backendURL + this.url + '/update', dog, environment.httpOptions)\r\n\t}\r\n\r\n\tpublic getByOwner(id:number){\r\n\t\treturn this.http.get<Dog[]>(environment.backendURL + this.url + '/byowner/' + id)\r\n\t}\r\n\r\n\tpublic getById(id:number){\r\n\t\treturn this.http.get<Dog>(environment.backendURL + this.url + '/' + id)\r\n\t}\r\n\r\n\tpublic helloPOST(){\r\n\t\treturn this.http.post<any>(environment.backendURL + 'hello/world', { message: 'Hola mundo' }, environment.httpOptions)\r\n\t}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-walk-abstract',\n  templateUrl: './walk-abstract.component.html',\n  styleUrls: ['./walk-abstract.component.css']\n})\nexport class WalkAbstractComponent implements OnInit {\n  @Input('show-info-func')\n  showInfo: () => void\n\n  @Input('show-payment-methods-func')\n  showPaymentMethods:(total:number) => void\n\n  @Input('city')\n  city:any\n\n  @Input('dogs')\n  dogs:any[]\n\n  @Input('dates')\n  dates:any[]\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getTotal() {\n    let sum: number = 0;\n\n    if (this.city) {\n      this.dates.forEach(dat => {\n        sum += Number(this.city.prices.find(p => p.type == 'WK' && p.hours == dat.hours).value);\n      })\n\n      return this.dogs.length * sum;\n    }\n    return 0;\n  }\n\n  getHoursPrice(hours) {\n    return this.city.prices.find(p => p.hours == hours).value;\n  }\n}\n","<div *ngIf=\"dates\">\n    <div class=\"form-row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\" style=\"margin-bottom: 10px;\">\n                <div class=\"card-header\">\n                    Resumen\n                </div>\n                <div class=\"card-body text-left\">\n                    <table class=\"table table-bordered\">\n                        <tbody>\n                            <tr>\n                                <th colspan=\"2\">Servicio</th>\n                                <td>Paseo</td>\n                            </tr>\n                            <tr *ngIf=\"city\">\n                                <th colspan=\"2\">Ciudad</th>\n                                <td>{{ city.name }}</td>\n                            </tr>\n                            <tr>\n                                <th colspan=\"2\">Perros</th>\n                                <td>{{ dogs.length }}</td>\n                            </tr>\n                            <tr *ngIf=\"dates\">\n                                <th colspan=\"2\">Cantidad de dias</th>\n                                <td>{{ dates.length }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Fecha y hora</th>\n                                <th>Horas</th>\n                                <th>Valor</th>\n                            </tr>\n                        </thead>\n                        <tbody *ngIf=\"dates\">\n                            <tr *ngFor=\"let date of dates\">\n                                <td>{{ date.datetime | date:'dd/MM/yyyy hh:mma' }}</td>\n                                <td>{{ date.hours }}</td>\n                                <td>${{ dogs.length * getHoursPrice(date.hours) }} COP</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"card-footer\">\n                    <strong>Total: </strong> ${{ getTotal() }} COP\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"getTotal() != 0\" class=\"btn-group btn-block\" role=\"group\">\n        <button class=\"btn btn-primary-wtd\" (click)=\"showPaymentMethods(getTotal())\">Proceder al pago</button>\n        <button class=\"btn btn-outline-primary-wtd\" (click)=\"showInfo()\">Volver</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { UsersService } from 'src/app/services/users.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  showedMenu:number\n  user:User\n  type:string\n  imagesURL:string = environment.imagesURL\n\n  constructor(\n    private route:ActivatedRoute,\n    private usersS:UsersService,\n    private location:Location\n  ) {\n    this.showedMenu = Number(localStorage.getItem('showedMenu'))\n    let params = this.route.snapshot.params\n    this.type = params.TYPE\n    this.usersS.getById(params.ID).subscribe(walker => this.user = walker)\n  }\n\n  ngOnInit(): void {\n  }\n\n  goBack(){\n    this.location.back()\n  }\n}\n","<div *ngIf=\"user\">\n    <div class=\"row\">\n        <div class=\"col-lg-2\">\n            <button class=\"btn btn-sm btn-primary-wtd\" (click)=\"goBack()\">Regresar</button>\n        </div>\n        <div class=\"col-lg-10\">\n            <h3>Información del {{ type == 'WK' ? 'paseador' : 'usuario' }}</h3>\n        </div>\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n            <tbody>\n                <tr>\n                    <th>Nombre</th>\n                    <td>{{ user.names + ' ' + user.surname }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu == 2\">\n                    <th>Correo electrónico</th>\n                    <td>{{ user.email }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu == 2\">\n                    <th>Teléfono</th>\n                    <td>{{ user.phone }}</td>\n                </tr>\n                <tr>\n                    <th>Ciudad</th>\n                    <td>{{ user.city.name }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu == 2\">\n                    <th>Dirección</th>\n                    <td>{{ user.address }}</td>\n                </tr>\n                <tr>\n                    <th>Ocupación</th>\n                    <td>{{ user.ocupation }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu == 2 && type == 'WK'\">\n                    <th>Disponibilidad</th>\n                    <td>{{ user.availability }}</td>\n                </tr>\n                <tr *ngIf=\"showedMenu == 2 && type == 'WK'\">\n                    <th>Fecha de nacimiento</th>\n                    <td>{{ user.birthdate }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-6 offset-3\">\n            <img [src]=\"imagesURL + user.photo\" class=\"w-100\" alt=\"\">\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServiceRequest } from 'src/app/models';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { ServicesService } from 'src/app/services/services.service';\n\n@Component({\n  selector: 'app-paid-services',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaidServicesComponent implements OnInit {\n  services:ServiceRequest[];\n  servicesFilter:ServiceRequest[];\n\n  constructor(private servicesS:ServicesService, private alert:AlertsService) {\n    this.servicesS.getUnapproved().subscribe(services => this.services = this.services = this.servicesFilter = services)\n  }\n\n  ngOnInit(): void {\n  }\n\n  searchServices(e){\n\t\tlet s = e.target.value.toUpperCase();\n\t\tthis.servicesFilter = this.services.filter(u => (\"WTD\" + u.id).includes(s));\n\t}\n\n  approve(walkId:number){\n\t\tlet w = this.services.find(w => w.id == walkId);\n    w.status = \"apvd\";\n    this.servicesS.update(w).subscribe(res=>{\n      this.servicesS.getUnapproved().subscribe(services=>{\n        this.services = this.servicesFilter = services;\n        this.alert.showAlert(\"success\", \"Servicio aprobado! \", \"Revisa el apartado de aprobados para asignar un paseador.\", 4);\n      })\n    });\n  }\n\n  rejectW(walkId:number){\n\t\tlet w = this.services.find(w => w.id == walkId);\n    w.status = \"rjct\";\n    \n    this.servicesS.update(w).subscribe(u => {\n      this.servicesS.getUnapproved().subscribe(services => {\n        this.services = this.servicesFilter = services;\n        this.alert.showAlert(\"success\", \"Servicio rechazado\", \".\", 4);\n\t\t  })\n    });\n\t}\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h3>En pago</h3>\n        <input *ngIf=\"services && services.length > 0\" type=\"text\" placeholder=\"Buscar...\" class=\"form-control\" (keyup)=\"searchServices($event)\" >\n    </div>\n\n    <div *ngIf=\"servicesFilter && servicesFilter.length > 0\" class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Código</th>\n                        <th>Cliente</th>\n                        <th>Valor</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor=\"let walk of servicesFilter\">\n                        <td>WTD{{ walk.id }} {{ walk.type == 'WK' ? 'Paseo' : 'Cuidado'}}</td>\n                        <td>{{walk.names + ' ' + walk.surname }}</td>\n                        <td>{{ walk.total }}</td>\n                        <td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../../details', walk.id]\">Detalles</a></td>\n                        <td><div class=\"btn-group-vertical\">\n                                <button class=\"btn btn-success btn-sm\" (click)=\"approve(walk.id)\">Aprobar</button>\n                                <button class=\"btn btn-danger btn-sm\" (click)=\"rejectW(walk.id)\">Rechazar</button>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n    <div *ngIf=\"!servicesFilter || servicesFilter.length == 0\" class=\"card-body\">\n        No hay pagos pendientes de revisión\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalService } from '../../../../services/modal.service';\nimport { AlertsService } from '../../../../services/alerts.service';\nimport { CitiesService } from 'src/app/services/cities.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\ninterface Input extends HTMLElement{\n\tvalue\n}\n\n@Component({\n\tselector: 'app-manage-cities',\n  \ttemplateUrl: './manage-cities.component.html',\n  \tstyleUrls: ['./manage-cities.component.css']\n})\nexport class ManageCitiesComponent implements OnInit {\n  \tcities:any[];\n  \teditedCity:any;\n  \tformEdit:HTMLElement;\n\n\tconstructor(\n\t\tprivate citiesS:CitiesService,\n\t\tprivate usersS:UsersService,\n\t\tprivate as:AuthService,\n\t\tprivate modal:ModalService,\n\t\tprivate alert:AlertsService\n\t) {\n\t\tthis.usersS.getById(Number(localStorage.getItem('id'))).subscribe(res=>{\n\t\t\tif(res.role != 'AD')\n\t\t\t\tthis.as.router.navigate(['/dashboard']);\n\t\t})\n\t}\n\n\tngOnInit(): void {\n\t\tthis.citiesS.list().subscribe(res => this.cities = res)\n\t}\n\n\teditCity(cityId){\n\t\tif(!this.formEdit){\n\t\t\tthis.formEdit = document.getElementById('editedCity');\t\n\t\t\tlet p = this.formEdit.parentElement;\n\t\t\tp.removeChild(this.formEdit);\n\t\t}\n\n\t\tthis.editedCity = this.cities.find(cc=> cc.id == cityId);\n\n\t\tlet wd = [\n\t\t\t{name: 'Paseo de  1 hora', value: this.editedCity.prices[0].value, type: 'input', tid:'cH1', ttype:'number'},\n\t\t\t{name: ' Paseo de  2 horas', value: this.editedCity.prices[1].value, type: 'input', tid:'cH2', ttype:'number'},\n\t\t\t{name: ' Paseo de 3 horas', value: this.editedCity.prices[2].value, type: 'input', tid:'cH3', ttype:'number'},\n\t\t\t{button:'Guardar'}\n\t\t];\n\n\t\tsetTimeout(()=>{\n\t\t\tthis.modal.setModalElement(\n\t\t\t\tthis.editedCity.name,\n\t\t\t\tthis.modal.repliqueElement(this.formEdit, this.modal.createVerticalTable(wd))\n\t\t\t)\n\t\t},10);\n\t}\n\n\tsaveCity(){\n\t\tthis.editedCity.prices[0].value = (document.getElementById('cH1') as Input).value;\n\t\tthis.editedCity.prices[1].value = (document.getElementById('cH2') as Input).value;\n\t\tthis.editedCity.prices[2].value = (document.getElementById('cH3') as Input).value;\n\t\t\n\t\tthis.citiesS.updatePrices(this.editedCity.prices).toPromise().then(res=>{\n\t\t\tthis.modal.closeModal();\n\n\t\t\tif(res.ok)\n\t\t\t\tthis.alert.showAlert(\"success\", this.editedCity.name + \": \", \"Se han modificado correctamente los precios\", 4);\n\t\t\telse\n\t\t\t\tthis.alert.showAlert(\"error\", \"Error: \", \"Hubo un problema de conexión con la base de datos, intenta de nuevo, por favor.\", 4);\n\t\t\t\n\t\t\tthis.editedCity = null;\n\t\t});\n\t}\n}\n","<div class=\"table-responsive\">\n\t<table class=\"table table-bordered\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Ciudad</th>\n\t\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let city of cities\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{{ city.name }}</td>\n\t\t\t\t\t<td><button class=\"btn btn-info\" type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#modal\" (click)=\"editCity(city.id)\">Editar</button></td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n\n\n<div hidden>\n\t<form id=\"editedCity\" (ngSubmit)=\"saveCity()\"></form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Service } from 'src/app/models/service';\nimport { ScriptService } from 'src/app/services/script.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-payment-methods',\n  templateUrl: './payment-methods.component.html',\n  styleUrls: ['./payment-methods.component.css']\n})\nexport class PaymentMethodsComponent implements OnInit {\n  @Input('service')\n  service:Service\n\n  constructor(\n    private script: ScriptService, \n    private router:Router\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  showNequi() {\n    document.getElementById('nequi').hidden = false;\n    document.getElementById('davi').hidden = true;\n  }\n\n  showDavi() {\n    document.getElementById('davi').hidden = false;\n    document.getElementById('nequi').hidden = true;\n  }\n\n  showEPayco(){\n    let btn = document.getElementById('epayco-sc');\n\n    if (btn)\n      btn.parentElement.removeChild(btn);\n\n    let attrs = [\n      { key: \"id\", value: \"epayco-sc\" },\n      { key: \"class\", value: \"epayco-button\" },\n      { key: 'data-epayco-key', value: '90b26c01ce528c00eee44b525299a92b' },\n      { key: 'data-epayco-button', value: 'https://369969691f476073508a-60bf0867add971908d4f26a64519c2aa.ssl.cf5.rackcdn.com/btns/btn6.png' },\n      { key: 'data-epayco-external', value: 'true' },\n      { key: 'data-epayco-lang', value: 'es' },\n      { key: 'data-epayco-amount', value: this.service.total },\n      { key: 'data-epayco-tax', value: '0' },\n      { key: 'data-epayco-tax-base', value: this.service.total },\n      { key: 'data-epayco-name', value: 'WalkTheDog - Paseo Canino' },\n      { key: 'data-epayco-description', value: this.getDescription() },\n      { key: 'data-epayco-currency', value: 'cop' },\n      { key: 'data-epayco-country', value: 'CO' },\n      { key: 'data-epayco-test', value: 'true' },\n      // {key:'data-epayco-invoice',value:'WTD'+this.walk.id },\n      { key: 'data-epayco-response', value: environment.frontendURL + 'payment' },\n      { key: 'data-epayco-confirmation', value: '' }\n    ];\n    this.script.loadScript('epayco', attrs).then((res:any) => {\n      if(res.loaded){\n        let form = document.getElementById('epayco')\n        form.getElementsByTagName('button').item(0).click()\n      }\n    })\n  }\n\n  getDescription() {\n    let data = \"\";\n    data += this.service.city.name + \" Perros: \" + this.service.dogs.length;\n\n    return data;\n  }\n\n  redirect(queryParams){\n    this.router.navigate(['/payment'], { queryParams })\n  }\n\n}\n","<div *ngIf=\"service && service.total && service.city\">\n    <h1>Selecciona un medio de pago</h1>\n    <label style=\"font-size: 25px\">Pago por consignación</label><br>\n   \n    <div class=\"btn-group\" role=\"group\">\n    \t <button class=\"btn btn-outline-primary-wtd btn-lg\" (click)=\"showNequi()\"><img style=\"width: 100px\" src=\"assets/img/nequi.jpg\"></button>\n    \t<button class=\"btn btn-outline-primary-wtd btn-lg\" (click)=\"showDavi()\"><img style=\"width: 100px\" src=\"assets/img/davi.jpg\"></button>\n    </div>\n    <div style=\"margin-top: 5px;\">\n    \t<div class=\"card\" id=\"nequi\" hidden>\n    \t\t<div class=\"card-body\">\n    \t\t\t<label>Por favor, sigue los siguientes pasos:</label>\n\t    \t\t<ol>\n\t    \t\t\t<li>Escanea el siguiente código de Nequi</li>\n\t    \t\t\t<img style=\"width: 25%\" src=\"assets/img/Nequi.png\">\n\t    \t\t\t<li>Digita la siguiente cantidad: <strong>${{ service.total }}</strong></li>\n\t    \t\t\t<li>Envía una captura de pantalla de la consignación y el siguiente código: <strong style=\"font-family: 'arial'\">WTD{{ service.id }}</strong> al número <a href=\"https://api.whatsapp.com/message/OCGQOHFWNUF3O1\"  target=\"_blank\">Walk The Dog</a></li>\n\t    \t\t\t<li>Cuando hayas realizado estos pasos, por favor presiona <a class=\"btn btn-primary-wtd btn-sm\" (click)=\"redirect({pm:'nequi', id: service.id})\">Confirmar</a></li>\n\t    \t\t</ol>\n    \t\t</div>\n    \t</div>\n\n    \t<div id=\"davi\" class=\"card\" hidden>\n    \t\t<div class=\"card-body\">\n    \t\t\t<label>Por favor, sigue los siguientes pasos:</label>\n\t    \t\t<ol>\n\t    \t\t\t<li>Escanea el siguiente código de Daviplata</li>\n\t    \t\t\t<img style=\"width: 25%\" src=\"assets/img/Davi.png\">\n\t    \t\t\t<li>Digita la siguiente cantidad: <strong>${{ service.total }}</strong></li>\n\t    \t\t\t<li>Envía una captura de pantalla de la consignación y el siguiente código: <strong style=\"font-family: 'arial'\">WTD{{ service.id }}</strong> al número <a href=\"https://api.whatsapp.com/message/OCGQOHFWNUF3O1\" target=\"_blank\">Walk The Dog</a></li>\n\t    \t\t\t<li>Cuando hayas realizado estos pasos, por favor presiona <a class=\"btn btn-primary-wtd btn-sm\" (click)=\"redirect({pm:'davi', id: service.id})\">Confirmar</a></li>\n\t    \t\t</ol>\n    \t\t</div>\n    \t</div>\n    </div>\n\n    <br><br>\n    <label style=\"font-size: 25px\">Pago en linea a traves de </label><br>\n    <button (click)=\"showEPayco()\" class=\"btn\">\n        <img src=\"https://369969691f476073508a-60bf0867add971908d4f26a64519c2aa.ssl.cf5.rackcdn.com/btns/btn6.png\" alt=\"\">\n    </button>\n    <form id=\"epayco\" hidden>\n    \t\n    </form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { WalkDate } from 'src/app/models';\nimport { getFormattedCurrentDate } from 'src/app/models/utilities';\n\n@Component({\n  selector: 'app-walk-form',\n  templateUrl: './walk-form.component.html',\n  styleUrls: ['./walk-form.component.css']\n})\nexport class WalkFormComponent implements OnInit {\n  @Input('show-abstract-func')\n  showAbstract: (isFailed:boolean, dates:WalkDate[]) => void\n\n  @Input('is-showing')\n  isShowing:boolean\n\n  @Input('dates')\n  dates: WalkDate[];\n\n  getFormattedDate:(days?:number) => string = getFormattedCurrentDate\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  addDate() {\n    if(!this.dates)\n      this.dates = [];\n\n    this.dates.push({ datetime: null, hours: 1 });\n  }\n\n  removeDate(i) {\n    this.dates.splice(i, 1);\n  }\n\n  constructDates(form:HTMLFormElement){\n    let rows = form.getElementsByClassName('wtd-date');\n    let inputs:HTMLCollectionOf<HTMLInputElement>;\n    let row:HTMLElement;\n\n    let isFailed = false\n    let dates:WalkDate[] = []\n\n    for (let i = 0; i < rows.length; i++) {\n      row = rows.item(i) as HTMLElement\n      inputs = row.getElementsByClassName('form-datetime') as HTMLCollectionOf<HTMLInputElement>\n      if(inputs.item(0).value == \"\" || inputs.item(0).value == \"\")\n        isFailed = true\n      else\n        dates.push({ \n          date:inputs.item(0).value, \n          time:inputs.item(1).value, \n          hours:Number(inputs.item(2).value),\n          datetime: new Date(inputs.item(0).value + ' ' + inputs.item(1).value)\n        })\n    }\n\n    this.showAbstract(isFailed, dates)\n  }\n}\n","<form *ngIf=\"isShowing\" (ngSubmit)=\"constructDates($event.target)\">\n    <div class=\"form-row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\" style=\"margin-bottom: 10px;\">\n                <div class=\"card-header\">\n                    Diligenciar los dias\n                    <button (click)=\"addDate()\" type=\"button\" class=\"btn btn-primary-wtd btn-sm\">Agregar</button>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"form-row wtd-date\" *ngFor=\"let date of dates; let i = index\">\n                        <div class=\"form-group col-md-4\">\n                            <label>Fecha {{ i + 1 }}</label>\n                            <input type=\"date\" class=\"form-control form-datetime\" [value]=\"date.date\" [min]=\"getFormattedDate()\" [value]=\"getFormattedDate()\">\n                        </div>\n\n                        <div class=\"form-group col-md-4\">\n                            <label>Hora {{ i + 1 }}</label>\n                            <input type=\"time\" class=\"form-control form-datetime\" [value]=\"date.time\">\n                        </div>\n\n                        <div class=\"form-group col-md-3\">\n                            <label>Cantidad de horas {{ i + 1 }}</label>\n                            <select class=\"form-control form-datetime\" >\n                                <option value=\"1\" [selected]=\"date.hours == 1\">1 hora</option>\n                                <option value=\"2\" [selected]=\"date.hours == 2\">2 horas</option>\n                                <option value=\"3\" [selected]=\"date.hours == 3\">3 horas</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-md-1\" *ngIf=\"i > 0\">\n                            <label style=\"color: white\">-</label>\n                            <button (click)=\"removeDate(i)\" class=\"btn btn-block btn-danger\">X</button>\n                        </div>\n                        <div *ngIf=\"i == 0\" class=\"col-md-1\"></div>\n                        <hr>\n                    </div>\n                    <p *ngIf=\"dates && dates.length == 0\">Selecciona la cantidad de fechas a listar</p>\n                </div>\n                <div *ngIf=\"dates && dates.length > 0\" class=\"card-footer\">\n                    <button class=\"btn btn-primary-wtd\">Listo</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { ServiceRequest } from 'src/app/models';\nimport { getFormattedDate } from 'src/app/models/utilities';\n\n@Component({\n\tselector: 'app-active-services',\n\ttemplateUrl: './active-services.component.html',\n\tstyleUrls: ['./active-services.component.css']\n})\nexport class ActiveServicesComponent implements OnInit {\n\tservices:ServiceRequest[]\n\n\tconstructor(private servicesS:ServicesService) {\n\t\tthis.servicesS.getInProgressByCustomerId(Number(localStorage.getItem('id')))\n\t\t.subscribe(services => this.services = services);\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tisToday(dd){\n\t\tconst today = new Date()\n\t\treturn dd.getDate() == today.getDate() \n\t\t\t&& dd.getMonth() == today.getMonth() \n\t\t\t&& dd.getFullYear() == today.getFullYear()\n\t}\n\n\tlistDates(s:ServiceRequest){\n\t\treturn s.dates\n\t\t.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime() )\n\t\t.map(d => getFormattedDate(new Date(d.date + 'T05:00:00')))\n\t\t.join(\", \")\n\t}\n}\n","<div *ngIf=\"services && services.length > 0\">\n\t<h3>Servicios programados</h3>\n\t<div class=\"table-responsive\">\n\t\t<table class=\"table table-bordered\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Código</th>\n\t\t\t\t\t<th>Paseos</th>\n\t\t\t\t\t<th>Fechas</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t<tr *ngFor=\"let service of services\">\n\t\t\t\t\t<td>WTD{{ service.id }}</td>\n\t\t\t\t\t<td>{{ service.dates.length }}</td>\n\t\t\t\t\t<td>{{ listDates(service) }}</td>\n\t\t\t\t\t<td><a class=\"btn btn-sm btn-primary-wtd\" [routerLink]=\"['../details/', service.id]\">Detalles</a></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n<div *ngIf=\"services && services.length == 0\">\n\t<h3>No tienes servicios activos</h3>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutUsComponent } from './pages/about-us/about-us.component';\n\nimport { LoginComponent } from './pages/auth/login/login.component';\nimport { RegistrationComponent } from './pages/auth/registration/registration.component';\n\nimport { VerifyEmailComponent } from './pages/verify-email/verify-email.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { DogProfileComponent } from './pages/dashboard/pets/dog-profile/dog-profile.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { PaymentComponent } from './pages/payment/payment.component';\n\nimport { StartComponent } from './pages/dashboard/start/start.component';\nimport { ActiveServicesComponent } from './pages/dashboard/services/active-services/active-services.component';\nimport { ServiceComponent } from './pages/dashboard/services/service/service.component';\nimport { AddPetComponent } from './pages/dashboard/pets/add-pet/add-pet.component';\nimport { ListPetsComponent } from './pages/dashboard/pets/list-pets/list-pets.component';\nimport { ClientHistoryComponent } from './pages/dashboard/services/client-history/client-history.component';\nimport { WalkerHistoryComponent } from './pages/dashboard/services/walker/walker-history/walker-history.component';\nimport { WalkerServiceComponent } from './pages/dashboard/services/walker/walker-service/walker-service.component';\nimport { ManageCitiesComponent } from './pages/dashboard/cities/manage-cities/manage-cities.component';\nimport { ManageServicesComponent } from './pages/dashboard/services/manage-services/manage-services.component';\nimport { ManageWalkersComponent } from './pages/dashboard/walker/manage-walkers/manage-walkers.component';\nimport { TrackingComponent } from './pages/dashboard/services/tracking/tracking.component';\nimport { BeWalkerComponent } from './pages/dashboard/walker/be-walker/be-walker.component';\nimport { RequestWalkerComponent } from './pages/request-walker/request-walker.component';\nimport { WaitedServicesComponent } from './pages/dashboard/services/waited-services/waited-services.component';\nimport { ServicesComponent } from './pages/dashboard/services/services.component';\nimport { PetsComponent } from './pages/dashboard/pets/pets.component';\nimport { ServiceDetailsComponent } from './pages/dashboard/services/service-details/service-details.component';\nimport { PaidServicesComponent } from './pages/dashboard/services/manage-services/paid/payment.component';\nimport { ApprovedServicesComponent } from './pages/dashboard/services/manage-services/approved/approved.component';\nimport { InProgressServicesComponent } from './pages/dashboard/services/manage-services/in-progress/in-progress.component';\nimport { FinishedServicesComponent } from './pages/dashboard/services/manage-services/finished/finished.component';\nimport { ServiceProgressComponent } from './pages/dashboard/services/service-progress/service-progress.component';\nimport { UserDetailsComponent } from './pages/dashboard/users/user-details/user-details.component';\nimport { UsersListComponent } from './pages/dashboard/users/users-list/users-list.component';\n\nconst routes: Routes = [\n\t{path:'', component:HomeComponent},\n\t{path:'pricing', component:PricingComponent},\n\t{path:'about-us', component:AboutUsComponent},\n\t{path:'login', component:LoginComponent},\n\t{path:'registration', component:RegistrationComponent},\n\t{path: 'request-walker', component:RequestWalkerComponent },\n\t{\n\t\tpath:'dashboard', \n\t\tcomponent:DashboardComponent,\n\t\tchildren:[\n\t\t\t{ path: '', component: StartComponent },\n\t\t\t{\n\t\t\t\tpath:'services', \n\t\t\t\tcomponent:ServicesComponent,\n\t\t\t\tchildren: [\n\t\t\t\t\t{ path: 'request', component: ServiceComponent },\n\t\t\t\t\t{ path: 'details/:ID', component: ServiceDetailsComponent },\n\t\t\t\t\t{ path: 'active', component: ActiveServicesComponent },\n\t\t\t\t\t{ path: 'waited', component: WaitedServicesComponent },\n\t\t\t\t\t{ path: 'history', component: ClientHistoryComponent },\n\t\t\t\t\t{ path: 'scheduled', component: WalkerServiceComponent },\n\t\t\t\t\t{ path: 'walker/history', component: WalkerHistoryComponent },\n\t\t\t\t\t{ path: 'progress/:ID', component: ServiceProgressComponent },\n\t\t\t\t\t{ path: 'tracking', component: TrackingComponent },\n\t\t\t\t\t{ \n\t\t\t\t\t\tpath: 'manage', \n\t\t\t\t\t\tcomponent: ManageServicesComponent,\n\t\t\t\t\t\tchildren:[\n\t\t\t\t\t\t\t{ path: 'paid', component:PaidServicesComponent },\n\t\t\t\t\t\t\t{ path: 'approved', component:ApprovedServicesComponent },\n\t\t\t\t\t\t\t{ path: 'in-progress', component:InProgressServicesComponent },\n\t\t\t\t\t\t\t{ path: 'finished', component:FinishedServicesComponent }\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'pets',\n\t\t\t\tcomponent: PetsComponent,\n\t\t\t\tchildren: [\n\t\t\t\t\t{path: '', component: ListPetsComponent},\n\t\t\t\t\t{path: 'add', component: AddPetComponent},\n\t\t\t\t\t{path:'details', component:DogProfileComponent},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{path: 'cities/manage', component: ManageCitiesComponent},\n\t\t\t{path: 'walkers/manage', component: ManageWalkersComponent},\n\t\t\t{path: 'walkers/be', component: BeWalkerComponent},\n\n\t\t\t{ path: 'users/:ID/details/:TYPE', component: UserDetailsComponent },\n\t\t\t{ path: 'users', component: UsersListComponent }\n\n\t\t]\n\t},\n\t{path:'payment', component:PaymentComponent},\n\t{path:'verify-email', component:VerifyEmailComponent},\n\t{path:'profile', component:ProfileComponent},\n\t//{path:'test', component:TestApiComponent},\n    { path: '**', redirectTo: 'not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}